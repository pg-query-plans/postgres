diff -U3 /home/dbs/pg-queryplans/postgres/src/test/regress/expected/boolean.out /home/dbs/pg-queryplans/postgres/src/test/regress/results/boolean.out
--- /home/dbs/pg-queryplans/postgres/src/test/regress/expected/boolean.out	2024-02-20 13:16:25.955611488 +0900
+++ /home/dbs/pg-queryplans/postgres/src/test/regress/results/boolean.out	2024-02-20 16:07:30.192049392 +0900
@@ -314,6 +314,7 @@
 SELECT BOOLTBL1.*, BOOLTBL2.*
    FROM BOOLTBL1, BOOLTBL2
    WHERE BOOLTBL2.f1 <> BOOLTBL1.f1;
+INFO:  Path param info: 0.000000
  f1 | f1 
 ----+----
  t  | f
@@ -333,6 +334,7 @@
 SELECT BOOLTBL1.*, BOOLTBL2.*
    FROM BOOLTBL1, BOOLTBL2
    WHERE boolne(BOOLTBL2.f1,BOOLTBL1.f1);
+INFO:  Path param info: 0.000000
  f1 | f1 
 ----+----
  t  | f
@@ -352,6 +354,7 @@
 SELECT BOOLTBL1.*, BOOLTBL2.*
    FROM BOOLTBL1, BOOLTBL2
    WHERE BOOLTBL2.f1 = BOOLTBL1.f1 and BOOLTBL1.f1 = bool 'false';
+INFO:  Path param info: 0.000000
  f1 | f1 
 ----+----
  f  | f
@@ -364,6 +367,7 @@
    FROM BOOLTBL1, BOOLTBL2
    WHERE BOOLTBL2.f1 = BOOLTBL1.f1 or BOOLTBL1.f1 = bool 'true'
    ORDER BY BOOLTBL1.f1, BOOLTBL2.f1;
+INFO:  Path param info: 0.000000
  f1 | f1 
 ----+----
  f  | f
diff -U3 /home/dbs/pg-queryplans/postgres/src/test/regress/expected/bit.out /home/dbs/pg-queryplans/postgres/src/test/regress/results/bit.out
--- /home/dbs/pg-queryplans/postgres/src/test/regress/expected/bit.out	2024-02-20 13:16:25.955611488 +0900
+++ /home/dbs/pg-queryplans/postgres/src/test/regress/results/bit.out	2024-02-20 16:07:30.200049275 +0900
@@ -44,6 +44,7 @@
 SELECT v, b, (v || b) AS concat
        FROM BIT_TABLE, VARBIT_TABLE
        ORDER BY 3;
+INFO:  Path param info: 0.000000
       v      |      b      |         concat         
 -------------+-------------+------------------------
              | 00000000000 | 00000000000
@@ -731,6 +732,23 @@
   b4 bit varying(5) DEFAULT B'0101'
 );
 \d bit_defaults
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                      Table "public.bit_defaults"
  Column |      Type      | Collation | Nullable |       Default       
 --------+----------------+-----------+----------+---------------------
diff -U3 /home/dbs/pg-queryplans/postgres/src/test/regress/expected/numeric.out /home/dbs/pg-queryplans/postgres/src/test/regress/results/numeric.out
--- /home/dbs/pg-queryplans/postgres/src/test/regress/expected/numeric.out	2024-02-20 13:16:25.963611345 +0900
+++ /home/dbs/pg-queryplans/postgres/src/test/regress/results/numeric.out	2024-02-20 16:07:30.292047932 +0900
@@ -505,10 +505,12 @@
 DELETE FROM num_result;
 INSERT INTO num_result SELECT t1.id, t2.id, t1.val + t2.val
     FROM num_data t1, num_data t2;
+INFO:  Path param info: 0.000000
 SELECT t1.id1, t1.id2, t1.result, t2.expected
     FROM num_result t1, num_exp_add t2
     WHERE t1.id1 = t2.id1 AND t1.id2 = t2.id2
     AND t1.result != t2.expected;
+INFO:  Path param info: 0.000000
  id1 | id2 | result | expected 
 -----+-----+--------+----------
 (0 rows)
@@ -516,10 +518,12 @@
 DELETE FROM num_result;
 INSERT INTO num_result SELECT t1.id, t2.id, round(t1.val + t2.val, 10)
     FROM num_data t1, num_data t2;
+INFO:  Path param info: 0.000000
 SELECT t1.id1, t1.id2, t1.result, round(t2.expected, 10) as expected
     FROM num_result t1, num_exp_add t2
     WHERE t1.id1 = t2.id1 AND t1.id2 = t2.id2
     AND t1.result != round(t2.expected, 10);
+INFO:  Path param info: 0.000000
  id1 | id2 | result | expected 
 -----+-----+--------+----------
 (0 rows)
@@ -530,10 +534,12 @@
 DELETE FROM num_result;
 INSERT INTO num_result SELECT t1.id, t2.id, t1.val - t2.val
     FROM num_data t1, num_data t2;
+INFO:  Path param info: 0.000000
 SELECT t1.id1, t1.id2, t1.result, t2.expected
     FROM num_result t1, num_exp_sub t2
     WHERE t1.id1 = t2.id1 AND t1.id2 = t2.id2
     AND t1.result != t2.expected;
+INFO:  Path param info: 0.000000
  id1 | id2 | result | expected 
 -----+-----+--------+----------
 (0 rows)
@@ -541,10 +547,12 @@
 DELETE FROM num_result;
 INSERT INTO num_result SELECT t1.id, t2.id, round(t1.val - t2.val, 40)
     FROM num_data t1, num_data t2;
+INFO:  Path param info: 0.000000
 SELECT t1.id1, t1.id2, t1.result, round(t2.expected, 40)
     FROM num_result t1, num_exp_sub t2
     WHERE t1.id1 = t2.id1 AND t1.id2 = t2.id2
     AND t1.result != round(t2.expected, 40);
+INFO:  Path param info: 0.000000
  id1 | id2 | result | round 
 -----+-----+--------+-------
 (0 rows)
@@ -555,10 +563,12 @@
 DELETE FROM num_result;
 INSERT INTO num_result SELECT t1.id, t2.id, t1.val * t2.val
     FROM num_data t1, num_data t2;
+INFO:  Path param info: 0.000000
 SELECT t1.id1, t1.id2, t1.result, t2.expected
     FROM num_result t1, num_exp_mul t2
     WHERE t1.id1 = t2.id1 AND t1.id2 = t2.id2
     AND t1.result != t2.expected;
+INFO:  Path param info: 0.000000
  id1 | id2 | result | expected 
 -----+-----+--------+----------
 (0 rows)
@@ -566,10 +576,12 @@
 DELETE FROM num_result;
 INSERT INTO num_result SELECT t1.id, t2.id, round(t1.val * t2.val, 30)
     FROM num_data t1, num_data t2;
+INFO:  Path param info: 0.000000
 SELECT t1.id1, t1.id2, t1.result, round(t2.expected, 30) as expected
     FROM num_result t1, num_exp_mul t2
     WHERE t1.id1 = t2.id1 AND t1.id2 = t2.id2
     AND t1.result != round(t2.expected, 30);
+INFO:  Path param info: 0.000000
  id1 | id2 | result | expected 
 -----+-----+--------+----------
 (0 rows)
@@ -581,10 +593,12 @@
 INSERT INTO num_result SELECT t1.id, t2.id, t1.val / t2.val
     FROM num_data t1, num_data t2
     WHERE t2.val != '0.0';
+INFO:  Path param info: 0.000000
 SELECT t1.id1, t1.id2, t1.result, t2.expected
     FROM num_result t1, num_exp_div t2
     WHERE t1.id1 = t2.id1 AND t1.id2 = t2.id2
     AND t1.result != t2.expected;
+INFO:  Path param info: 0.000000
  id1 | id2 | result | expected 
 -----+-----+--------+----------
 (0 rows)
@@ -593,10 +607,12 @@
 INSERT INTO num_result SELECT t1.id, t2.id, round(t1.val / t2.val, 80)
     FROM num_data t1, num_data t2
     WHERE t2.val != '0.0';
+INFO:  Path param info: 0.000000
 SELECT t1.id1, t1.id2, t1.result, round(t2.expected, 80) as expected
     FROM num_result t1, num_exp_div t2
     WHERE t1.id1 = t2.id1 AND t1.id2 = t2.id2
     AND t1.result != round(t2.expected, 80);
+INFO:  Path param info: 0.000000
  id1 | id2 | result | expected 
 -----+-----+--------+----------
 (0 rows)
@@ -611,6 +627,7 @@
     FROM num_result t1, num_exp_sqrt t2
     WHERE t1.id1 = t2.id
     AND t1.result != t2.expected;
+INFO:  Path param info: 0.000000
  id1 | result | expected 
 -----+--------+----------
 (0 rows)
@@ -626,6 +643,7 @@
     FROM num_result t1, num_exp_ln t2
     WHERE t1.id1 = t2.id
     AND t1.result != t2.expected;
+INFO:  Path param info: 0.000000
  id1 | result | expected 
 -----+--------+----------
 (0 rows)
@@ -641,6 +659,7 @@
     FROM num_result t1, num_exp_log10 t2
     WHERE t1.id1 = t2.id
     AND t1.result != t2.expected;
+INFO:  Path param info: 0.000000
  id1 | result | expected 
 -----+--------+----------
 (0 rows)
@@ -656,6 +675,7 @@
     FROM num_result t1, num_exp_power_10_ln t2
     WHERE t1.id1 = t2.id
     AND t1.result != t2.expected;
+INFO:  Path param info: 0.000000
  id1 | result | expected 
 -----+--------+----------
 (0 rows)
@@ -672,6 +692,7 @@
   x1 - x2 AS diff,
   x1 * x2 AS prod
 FROM v AS v1(x1), v AS v2(x2);
+INFO:  Path param info: 0.000000
     x1     |    x2     |    sum    |   diff    |   prod    
 -----------+-----------+-----------+-----------+-----------
          0 |         0 |         0 |         0 |         0
@@ -732,6 +753,7 @@
   x1 % x2 AS mod,
   div(x1, x2) AS div
 FROM v AS v1(x1), v AS v2(x2) WHERE x2 != 0;
+INFO:  Path param info: 0.000000
     x1     |    x2     |          quot           | mod  |    div    
 -----------+-----------+-------------------------+------+-----------
          0 |         1 |  0.00000000000000000000 |    0 |         0
@@ -913,6 +935,7 @@
 SELECT x1, x2,
   log(x1, x2)
 FROM v AS v1(x1), v AS v2(x2);
+INFO:  Path param info: 0.000000
     x1    |    x2    |        log         
 ----------+----------+--------------------
         2 |        2 | 1.0000000000000000
@@ -952,6 +975,7 @@
 SELECT x1, x2,
   power(x1, x2)
 FROM v AS v1(x1), v AS v2(x2) WHERE x1 != 0 OR x2 >= 0;
+INFO:  Path param info: 0.000000
     x1    |    x2    |       power        
 ----------+----------+--------------------
         0 |        0 | 1.0000000000000000
@@ -2423,6 +2447,23 @@
   millionths numeric(3, 6)
 );
 \d num_typemod_test
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                Table "public.num_typemod_test"
    Column    |     Type      | Collation | Nullable | Default 
 -------------+---------------+-----------+----------+---------
@@ -3040,6 +3081,7 @@
 
 -- Check usage with variables
 select * from generate_series(1::numeric, 3::numeric) i, generate_series(i,3) j;
+INFO:  Path param info: 0.000000
  i | j 
 ---+---
  1 | 1
@@ -3051,6 +3093,7 @@
 (6 rows)
 
 select * from generate_series(1::numeric, 3::numeric) i, generate_series(1,i) j;
+INFO:  Path param info: 0.000000
  i | j 
 ---+---
  1 | 1
@@ -3062,6 +3105,7 @@
 (6 rows)
 
 select * from generate_series(1::numeric, 3::numeric) i, generate_series(1,5,i) j;
+INFO:  Path param info: 0.000000
  i | j 
 ---+---
  1 | 1
diff -U3 /home/dbs/pg-queryplans/postgres/src/test/regress/expected/txid.out /home/dbs/pg-queryplans/postgres/src/test/regress/results/txid.out
--- /home/dbs/pg-queryplans/postgres/src/test/regress/expected/txid.out	2024-02-20 13:16:25.975611131 +0900
+++ /home/dbs/pg-queryplans/postgres/src/test/regress/results/txid.out	2024-02-20 16:07:30.188049450 +0900
@@ -103,6 +103,7 @@
 select id, txid_visible_in_snapshot(id, snap)
 from snapshot_test, generate_series(11, 21) id
 where nr = 2;
+INFO:  Path param info: 0.000000
  id | txid_visible_in_snapshot 
 ----+--------------------------
  11 | t
@@ -122,6 +123,7 @@
 select id, txid_visible_in_snapshot(id, snap)
 from snapshot_test, generate_series(90, 160) id
 where nr = 4;
+INFO:  Path param info: 0.000000
  id  | txid_visible_in_snapshot 
 -----+--------------------------
   90 | t
diff -U3 /home/dbs/pg-queryplans/postgres/src/test/regress/expected/uuid.out /home/dbs/pg-queryplans/postgres/src/test/regress/results/uuid.out
--- /home/dbs/pg-queryplans/postgres/src/test/regress/expected/uuid.out	2024-02-20 13:16:25.979611060 +0900
+++ /home/dbs/pg-queryplans/postgres/src/test/regress/results/uuid.out	2024-02-20 16:07:30.192049392 +0900
@@ -147,12 +147,14 @@
 INSERT INTO guid2(guid_field) VALUES('3f3e3c3b3a3039383736353433a2313e');
 -- join test
 SELECT COUNT(*) FROM guid1 g1 INNER JOIN guid2 g2 ON g1.guid_field = g2.guid_field;
+INFO:  Path param info: 0.000000
  count 
 -------
      3
 (1 row)
 
 SELECT COUNT(*) FROM guid1 g1 LEFT JOIN guid2 g2 ON g1.guid_field = g2.guid_field WHERE g2.guid_field IS NULL;
+INFO:  Path param info: 0.000000
  count 
 -------
      1
diff -U3 /home/dbs/pg-queryplans/postgres/src/test/regress/expected/enum.out /home/dbs/pg-queryplans/postgres/src/test/regress/results/enum.out
--- /home/dbs/pg-queryplans/postgres/src/test/regress/expected/enum.out	2024-02-20 13:16:25.959611416 +0900
+++ /home/dbs/pg-queryplans/postgres/src/test/regress/results/enum.out	2024-02-20 16:07:30.204049216 +0900
@@ -713,6 +713,7 @@
 
 SELECT * FROM pg_enum WHERE NOT EXISTS
   (SELECT 1 FROM pg_type WHERE pg_type.oid = enumtypid);
+INFO:  Path param info: 0.000000
  oid | enumtypid | enumsortorder | enumlabel 
 -----+-----------+---------------+-----------
 (0 rows)
diff -U3 /home/dbs/pg-queryplans/postgres/src/test/regress/expected/rangetypes.out /home/dbs/pg-queryplans/postgres/src/test/regress/results/rangetypes.out
--- /home/dbs/pg-queryplans/postgres/src/test/regress/expected/rangetypes.out	2024-02-20 13:16:25.971611203 +0900
+++ /home/dbs/pg-queryplans/postgres/src/test/regress/results/rangetypes.out	2024-02-20 16:07:30.320047523 +0900
@@ -627,6 +627,8 @@
 set enable_hashjoin=f;
 set enable_mergejoin=f;
 select * from numrange_test natural join numrange_test2 order by nr;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
     nr     
 -----------
  empty
@@ -639,6 +641,8 @@
 set enable_hashjoin=t;
 set enable_mergejoin=f;
 select * from numrange_test natural join numrange_test2 order by nr;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
     nr     
 -----------
  empty
@@ -651,6 +655,7 @@
 set enable_hashjoin=f;
 set enable_mergejoin=t;
 select * from numrange_test natural join numrange_test2 order by nr;
+INFO:  Path param info: 0.000000
     nr     
 -----------
  empty
diff -U3 /home/dbs/pg-queryplans/postgres/src/test/regress/expected/pg_lsn.out /home/dbs/pg-queryplans/postgres/src/test/regress/results/pg_lsn.out
--- /home/dbs/pg-queryplans/postgres/src/test/regress/expected/pg_lsn.out	2024-02-20 13:16:25.967611274 +0900
+++ /home/dbs/pg-queryplans/postgres/src/test/regress/results/pg_lsn.out	2024-02-20 16:07:30.188049450 +0900
@@ -142,6 +142,10 @@
        generate_series(1, 5) k
   WHERE i <= 10 AND j > 0 AND j <= 10
   ORDER BY f;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                 QUERY PLAN                                
 --------------------------------------------------------------------------
  Sort
@@ -164,6 +168,10 @@
        generate_series(1, 5) k
   WHERE i <= 10 AND j > 0 AND j <= 10
   ORDER BY f;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
    f   
 -------
  1/1
diff -U3 /home/dbs/pg-queryplans/postgres/src/test/regress/expected/numerology.out /home/dbs/pg-queryplans/postgres/src/test/regress/results/numerology.out
--- /home/dbs/pg-queryplans/postgres/src/test/regress/expected/numerology.out	2024-02-20 13:16:25.967611274 +0900
+++ /home/dbs/pg-queryplans/postgres/src/test/regress/results/numerology.out	2024-02-20 16:07:30.356046998 +0900
@@ -404,9 +404,11 @@
 INSERT INTO TEMP_GROUP
   SELECT 1, (- i.f1), (- f.f1)
   FROM INT4_TBL i, FLOAT8_TBL f;
+INFO:  Path param info: 0.000000
 INSERT INTO TEMP_GROUP
   SELECT 2, i.f1, f.f1
   FROM INT4_TBL i, FLOAT8_TBL f;
+INFO:  Path param info: 0.000000
 SELECT DISTINCT f1 AS two FROM TEMP_GROUP ORDER BY 1;
  two 
 -----
diff -U3 /home/dbs/pg-queryplans/postgres/src/test/regress/expected/point.out /home/dbs/pg-queryplans/postgres/src/test/regress/results/point.out
--- /home/dbs/pg-queryplans/postgres/src/test/regress/expected/point.out	2024-02-20 13:16:25.967611274 +0900
+++ /home/dbs/pg-queryplans/postgres/src/test/regress/results/point.out	2024-02-20 16:07:30.356046998 +0900
@@ -153,6 +153,7 @@
 SELECT p1.f1 AS point1, p2.f1 AS point2, p1.f1 <-> p2.f1 AS dist
    FROM POINT_TBL p1, POINT_TBL p2
    ORDER BY dist, p1.f1[0], p2.f1[0];
+INFO:  Path param info: 0.000000
       point1       |      point2       |         dist         
 -------------------+-------------------+----------------------
  (-10,0)           | (-10,0)           |                    0
@@ -260,6 +261,7 @@
 SELECT p1.f1 AS point1, p2.f1 AS point2
    FROM POINT_TBL p1, POINT_TBL p2
    WHERE (p1.f1 <-> p2.f1) > 3;
+INFO:  Path param info: 0.000000
       point1       |      point2       
 -------------------+-------------------
  (0,0)             | (-10,0)
@@ -360,6 +362,7 @@
    FROM POINT_TBL p1, POINT_TBL p2
    WHERE (p1.f1 <-> p2.f1) > 3 and p1.f1 << p2.f1
    ORDER BY distance, p1.f1[0], p2.f1[0];
+INFO:  Path param info: 0.000000
       point1       |      point2       |     distance     
 -------------------+-------------------+------------------
  (-3,4)            | (0,0)             |                5
@@ -404,6 +407,7 @@
    FROM POINT_TBL p1, POINT_TBL p2
    WHERE (p1.f1 <-> p2.f1) > 3 and p1.f1 << p2.f1 and p1.f1 |>> p2.f1
    ORDER BY distance;
+INFO:  Path param info: 0.000000
       point1       |      point2       |     distance     
 -------------------+-------------------+------------------
  (-3,4)            | (0,0)             |                5
diff -U3 /home/dbs/pg-queryplans/postgres/src/test/regress/expected/box.out /home/dbs/pg-queryplans/postgres/src/test/regress/results/box.out
--- /home/dbs/pg-queryplans/postgres/src/test/regress/expected/box.out	2024-02-20 13:16:25.955611488 +0900
+++ /home/dbs/pg-queryplans/postgres/src/test/regress/results/box.out	2024-02-20 16:07:30.424046005 +0900
@@ -222,6 +222,7 @@
 SELECT b1.*, b2.*
    FROM BOX_TBL b1, BOX_TBL b2
    WHERE b1.f1 @> b2.f1 and not b1.f1 ~= b2.f1;
+INFO:  Path param info: 0.000000
      f1      |     f1      
 -------------+-------------
  (3,3),(1,1) | (3,3),(3,3)
@@ -485,6 +486,7 @@
   SELECT (x - 1) * 100 + y, box(point(x * 10, y * 10), point(x * 10 + 5, y * 10 + 5))
   FROM generate_series(1, 100) x,
        generate_series(1, 100) y;
+INFO:  Path param info: 0.000000
 -- insert repeating data to test allTheSame
 INSERT INTO quad_box_tbl
   SELECT i, '((200, 300),(210, 310))'
@@ -609,6 +611,7 @@
 	ON seq.n = idx.n AND seq.id = idx.id AND
 		(seq.dist = idx.dist OR seq.dist IS NULL AND idx.dist IS NULL)
 WHERE seq.id IS NULL OR idx.id IS NULL;
+INFO:  Path param info: 0.000000
  n | dist | id | n | dist | id 
 ---+------+----+---+------+----
 (0 rows)
@@ -632,6 +635,7 @@
 	ON seq.n = idx.n AND seq.id = idx.id AND
 		(seq.dist = idx.dist OR seq.dist IS NULL AND idx.dist IS NULL)
 WHERE seq.id IS NULL OR idx.id IS NULL;
+INFO:  Path param info: 0.000000
  n | dist | id | n | dist | id 
 ---+------+----+---+------+----
 (0 rows)
diff -U3 /home/dbs/pg-queryplans/postgres/src/test/regress/expected/polygon.out /home/dbs/pg-queryplans/postgres/src/test/regress/results/polygon.out
--- /home/dbs/pg-queryplans/postgres/src/test/regress/expected/polygon.out	2024-02-20 13:16:25.967611274 +0900
+++ /home/dbs/pg-queryplans/postgres/src/test/regress/results/polygon.out	2024-02-20 16:07:30.416046122 +0900
@@ -53,6 +53,7 @@
 	SELECT (x - 1) * 100 + y, polygon(circle(point(x * 10, y * 10), 1 + (x + y) % 10))
 	FROM generate_series(1, 100) x,
 		 generate_series(1, 100) y;
+INFO:  Path param info: 0.000000
 INSERT INTO quad_poly_tbl
 	SELECT i, polygon '((200, 300),(210, 310),(230, 290))'
 	FROM generate_series(10001, 11000) AS i;
@@ -299,6 +300,7 @@
 	ON seq.n = idx.n AND seq.id = idx.id AND
 		(seq.dist = idx.dist OR seq.dist IS NULL AND idx.dist IS NULL)
 WHERE seq.id IS NULL OR idx.id IS NULL;
+INFO:  Path param info: 0.000000
  n | dist | id | n | dist | id 
 ---+------+----+---+------+----
 (0 rows)
diff -U3 /home/dbs/pg-queryplans/postgres/src/test/regress/expected/circle.out /home/dbs/pg-queryplans/postgres/src/test/regress/results/circle.out
--- /home/dbs/pg-queryplans/postgres/src/test/regress/expected/circle.out	2024-02-20 13:16:25.955611488 +0900
+++ /home/dbs/pg-queryplans/postgres/src/test/regress/results/circle.out	2024-02-20 16:07:30.348047114 +0900
@@ -111,6 +111,7 @@
   FROM CIRCLE_TBL c1, CIRCLE_TBL c2
   WHERE (c1.f1 < c2.f1) AND ((c1.f1 <-> c2.f1) > 0)
   ORDER BY distance, area(c1.f1), area(c2.f1);
+INFO:  Path param info: 0.000000
       one       |      two       |     distance     
 ----------------+----------------+------------------
  <(3,5),0>      | <(1,2),3>      | 0.60555127546399
diff -U3 /home/dbs/pg-queryplans/postgres/src/test/regress/expected/interval.out /home/dbs/pg-queryplans/postgres/src/test/regress/results/interval.out
--- /home/dbs/pg-queryplans/postgres/src/test/regress/expected/interval.out	2024-02-20 13:16:25.963611345 +0900
+++ /home/dbs/pg-queryplans/postgres/src/test/regress/results/interval.out	2024-02-20 16:07:30.368046823 +0900
@@ -189,6 +189,7 @@
    FROM INTERVAL_TBL r1, INTERVAL_TBL r2
    WHERE r1.f1 > r2.f1
    ORDER BY r1.f1, r2.f1;
+INFO:  Path param info: 0.000000
        f1        |       f1        
 -----------------+-----------------
  00:01:00        | -00:00:14
@@ -270,6 +271,7 @@
    FROM INTERVAL_TBL_OF r1, INTERVAL_TBL_OF r2
    WHERE r1.f1 > r2.f1
    ORDER BY r1.f1, r2.f1;
+INFO:  Path param info: 0.000000
                     f1                     |                    f1                     
 -------------------------------------------+-------------------------------------------
  -178956970 years -8 mons +2147483647 days | -178956970 years -8 mons -2147483648 days
diff -U3 /home/dbs/pg-queryplans/postgres/src/test/regress/expected/multirangetypes.out /home/dbs/pg-queryplans/postgres/src/test/regress/results/multirangetypes.out
--- /home/dbs/pg-queryplans/postgres/src/test/regress/expected/multirangetypes.out	2024-02-20 13:16:25.963611345 +0900
+++ /home/dbs/pg-queryplans/postgres/src/test/regress/results/multirangetypes.out	2024-02-20 16:07:30.440045773 +0900
@@ -2969,6 +2969,7 @@
 set enable_hashjoin=f;
 set enable_mergejoin=f;
 select * from nummultirange_test natural join nummultirange_test2 order by nmr;
+INFO:  Path param info: 0.000000
      nmr     
 -------------
  {}
@@ -2984,6 +2985,7 @@
 set enable_hashjoin=t;
 set enable_mergejoin=f;
 select * from nummultirange_test natural join nummultirange_test2 order by nmr;
+INFO:  Path param info: 0.000000
      nmr     
 -------------
  {}
@@ -2999,6 +3001,7 @@
 set enable_hashjoin=f;
 set enable_mergejoin=t;
 select * from nummultirange_test natural join nummultirange_test2 order by nmr;
+INFO:  Path param info: 0.000000
      nmr     
 -------------
  {}
diff -U3 /home/dbs/pg-queryplans/postgres/src/test/regress/expected/geometry.out /home/dbs/pg-queryplans/postgres/src/test/regress/results/geometry.out
--- /home/dbs/pg-queryplans/postgres/src/test/regress/expected/geometry.out	2024-02-20 13:16:25.959611416 +0900
+++ /home/dbs/pg-queryplans/postgres/src/test/regress/results/geometry.out	2024-02-20 16:07:30.752041218 +0900
@@ -111,6 +111,7 @@
 
 -- Slope
 SELECT p1.f1, p2.f1, slope(p1.f1, p2.f1) FROM POINT_TBL p1, POINT_TBL p2;
+INFO:  Path param info: 0.000000
         f1         |        f1         |     slope      
 -------------------+-------------------+----------------
  (0,0)             | (0,0)             |       Infinity
@@ -217,6 +218,7 @@
 
 -- Add point
 SELECT p1.f1, p2.f1, p1.f1 + p2.f1 FROM POINT_TBL p1, POINT_TBL p2;
+INFO:  Path param info: 0.000000
         f1         |        f1         |      ?column?       
 -------------------+-------------------+---------------------
  (0,0)             | (0,0)             | (0,0)
@@ -323,6 +325,7 @@
 
 -- Subtract point
 SELECT p1.f1, p2.f1, p1.f1 - p2.f1 FROM POINT_TBL p1, POINT_TBL p2;
+INFO:  Path param info: 0.000000
         f1         |        f1         |       ?column?       
 -------------------+-------------------+----------------------
  (0,0)             | (0,0)             | (0,0)
@@ -429,6 +432,7 @@
 
 -- Multiply with point
 SELECT p1.f1, p2.f1, p1.f1 * p2.f1 FROM POINT_TBL p1, POINT_TBL p2 WHERE p1.f1[0] BETWEEN 1 AND 1000;
+INFO:  Path param info: 0.000000
      f1     |        f1         |       ?column?        
 ------------+-------------------+-----------------------
  (5.1,34.5) | (0,0)             | (0,0)
@@ -455,9 +459,11 @@
 
 -- Underflow error
 SELECT p1.f1, p2.f1, p1.f1 * p2.f1 FROM POINT_TBL p1, POINT_TBL p2 WHERE p1.f1[0] < 1;
+INFO:  Path param info: 0.000000
 ERROR:  value out of range: underflow
 -- Divide by point
 SELECT p1.f1, p2.f1, p1.f1 / p2.f1 FROM POINT_TBL p1, POINT_TBL p2 WHERE p2.f1[0] BETWEEN 1 AND 1000;
+INFO:  Path param info: 0.000000
         f1         |     f1     |                 ?column?                  
 -------------------+------------+-------------------------------------------
  (0,0)             | (5.1,34.5) | (0,0)
@@ -484,12 +490,15 @@
 
 -- Overflow error
 SELECT p1.f1, p2.f1, p1.f1 / p2.f1 FROM POINT_TBL p1, POINT_TBL p2 WHERE p2.f1[0] > 1000;
+INFO:  Path param info: 0.000000
 ERROR:  value out of range: overflow
 -- Division by 0 error
 SELECT p1.f1, p2.f1, p1.f1 / p2.f1 FROM POINT_TBL p1, POINT_TBL p2 WHERE p2.f1 ~= '(0,0)'::point;
+INFO:  Path param info: 0.000000
 ERROR:  division by zero
 -- Distance to line
 SELECT p.f1, l.s, p.f1 <-> l.s AS dist_pl, l.s <-> p.f1 AS dist_lp FROM POINT_TBL p, LINE_TBL l;
+INFO:  Path param info: 0.000000
         f1         |                   s                   |      dist_pl       |      dist_lp       
 -------------------+---------------------------------------+--------------------+--------------------
  (0,0)             | {0,-1,5}                              |                  5 |                  5
@@ -596,6 +605,7 @@
 
 -- Distance to line segment
 SELECT p.f1, l.s, p.f1 <-> l.s AS dist_ps, l.s <-> p.f1 AS dist_sp FROM POINT_TBL p, LSEG_TBL l;
+INFO:  Path param info: 0.000000
         f1         |               s               |      dist_ps       |      dist_sp       
 -------------------+-------------------------------+--------------------+--------------------
  (0,0)             | [(1,2),(3,4)]                 |       2.2360679775 |       2.2360679775
@@ -682,6 +692,7 @@
 
 -- Distance to box
 SELECT p.f1, b.f1, p.f1 <-> b.f1 AS dist_pb, b.f1 <-> p.f1 AS dist_bp FROM POINT_TBL p, BOX_TBL b;
+INFO:  Path param info: 0.000000
         f1         |         f1          |      dist_pb       |      dist_bp       
 -------------------+---------------------+--------------------+--------------------
  (0,0)             | (2,2),(0,0)         |                  0 |                  0
@@ -738,6 +749,7 @@
 
 -- Distance to path
 SELECT p.f1, p1.f1, p.f1 <-> p1.f1 AS dist_ppath, p1.f1 <-> p.f1 AS dist_pathp FROM POINT_TBL p, PATH_TBL p1;
+INFO:  Path param info: 0.000000
         f1         |            f1             |     dist_ppath     |     dist_pathp     
 -------------------+---------------------------+--------------------+--------------------
  (0,0)             | [(1,2),(3,4)]             |       2.2360679775 |       2.2360679775
@@ -834,6 +846,7 @@
 
 -- Distance to polygon
 SELECT p.f1, p1.f1, p.f1 <-> p1.f1 AS dist_ppoly, p1.f1 <-> p.f1 AS dist_polyp FROM POINT_TBL p, POLYGON_TBL p1;
+INFO:  Path param info: 0.000000
         f1         |             f1             |  dist_ppoly   |  dist_polyp   
 -------------------+----------------------------+---------------+---------------
  (0,0)             | ((2,0),(2,4),(0,0))        |             0 |             0
@@ -911,6 +924,7 @@
 -- Construct line through two points
 SELECT p1.f1, p2.f1, line(p1.f1, p2.f1)
   FROM POINT_TBL p1, POINT_TBL p2 WHERE p1.f1 <> p2.f1;
+INFO:  Path param info: 0.000000
         f1         |        f1         |                  line                  
 -------------------+-------------------+----------------------------------------
  (0,0)             | (-10,0)           | {0,-1,0}
@@ -1005,6 +1019,7 @@
 
 -- Closest point to line
 SELECT p.f1, l.s, p.f1 ## l.s FROM POINT_TBL p, LINE_TBL l;
+INFO:  Path param info: 0.000000
         f1         |                   s                   |             ?column?             
 -------------------+---------------------------------------+----------------------------------
  (0,0)             | {0,-1,5}                              | (0,5)
@@ -1111,6 +1126,7 @@
 
 -- Closest point to line segment
 SELECT p.f1, l.s, p.f1 ## l.s FROM POINT_TBL p, LSEG_TBL l;
+INFO:  Path param info: 0.000000
         f1         |               s               |             ?column?             
 -------------------+-------------------------------+----------------------------------
  (0,0)             | [(1,2),(3,4)]                 | (1,2)
@@ -1197,6 +1213,7 @@
 
 -- Closest point to box
 SELECT p.f1, b.f1, p.f1 ## b.f1 FROM POINT_TBL p, BOX_TBL b;
+INFO:  Path param info: 0.000000
         f1         |         f1          |   ?column?   
 -------------------+---------------------+--------------
  (0,0)             | (2,2),(0,0)         | (0,0)
@@ -1253,6 +1270,7 @@
 
 -- On line
 SELECT p.f1, l.s FROM POINT_TBL p, LINE_TBL l WHERE p.f1 <@ l.s;
+INFO:  Path param info: 0.000000
         f1        |    s     
 ------------------+----------
  (0,0)            | {0,3,0}
@@ -1266,6 +1284,7 @@
 
 -- On line segment
 SELECT p.f1, l.s FROM POINT_TBL p, LSEG_TBL l WHERE p.f1 <@ l.s;
+INFO:  Path param info: 0.000000
         f1        |       s       
 ------------------+---------------
  (0,0)            | [(0,0),(6,6)]
@@ -1274,6 +1293,7 @@
 
 -- On path
 SELECT p.f1, p1.f1 FROM POINT_TBL p, PATH_TBL p1 WHERE p.f1 <@ p1.f1;
+INFO:  Path param info: 0.000000
         f1        |            f1             
 ------------------+---------------------------
  (0,0)            | [(0,0),(3,0),(4,5),(1,6)]
@@ -1307,6 +1327,7 @@
 
 -- Same as line
 SELECT l1.s, l2.s FROM LINE_TBL l1, LINE_TBL l2 WHERE l1.s = l2.s;
+INFO:  Path param info: 0.000000
                    s                   |                   s                   
 ---------------------------------------+---------------------------------------
  {0,-1,5}                              | {0,-1,5}
@@ -1323,6 +1344,7 @@
 
 -- Parallel to line
 SELECT l1.s, l2.s FROM LINE_TBL l1, LINE_TBL l2 WHERE l1.s ?|| l2.s;
+INFO:  Path param info: 0.000000
                    s                   |                   s                   
 ---------------------------------------+---------------------------------------
  {0,-1,5}                              | {0,-1,5}
@@ -1345,6 +1367,7 @@
 
 -- Perpendicular to line
 SELECT l1.s, l2.s FROM LINE_TBL l1, LINE_TBL l2 WHERE l1.s ?-| l2.s;
+INFO:  Path param info: 0.000000
     s     |    s     
 ----------+----------
  {0,-1,5} | {1,0,5}
@@ -1363,6 +1386,7 @@
 
 -- Distance to line
 SELECT l1.s, l2.s, l1.s <-> l2.s FROM LINE_TBL l1, LINE_TBL l2;
+INFO:  Path param info: 0.000000
                    s                   |                   s                   | ?column? 
 ---------------------------------------+---------------------------------------+----------
  {0,-1,5}                              | {0,-1,5}                              |        0
@@ -1469,6 +1493,7 @@
 
 -- Intersect with line
 SELECT l1.s, l2.s FROM LINE_TBL l1, LINE_TBL l2 WHERE l1.s ?# l2.s;
+INFO:  Path param info: 0.000000
                    s                   |                   s                   
 ---------------------------------------+---------------------------------------
  {0,-1,5}                              | {1,0,5}
@@ -1559,6 +1584,7 @@
 
 -- Intersect with box
 SELECT l.s, b.f1 FROM LINE_TBL l, BOX_TBL b WHERE l.s ?# b.f1;
+INFO:  Path param info: 0.000000
       s       |         f1          
 --------------+---------------------
  {1,0,5}      | (-2,2),(-8,-10)
@@ -1578,6 +1604,7 @@
 
 -- Intersection point with line
 SELECT l1.s, l2.s, l1.s # l2.s FROM LINE_TBL l1, LINE_TBL l2;
+INFO:  Path param info: 0.000000
                    s                   |                   s                   |             ?column?              
 ---------------------------------------+---------------------------------------+-----------------------------------
  {0,-1,5}                              | {0,-1,5}                              | 
@@ -1684,6 +1711,7 @@
 
 -- Closest point to line segment
 SELECT l.s, l1.s, l.s ## l1.s FROM LINE_TBL l, LSEG_TBL l1;
+INFO:  Path param info: 0.000000
                    s                   |               s               |             ?column?              
 ---------------------------------------+-------------------------------+-----------------------------------
  {0,-1,5}                              | [(1,2),(3,4)]                 | (3,4)
@@ -1836,6 +1864,7 @@
 
 -- Has points less than line segment
 SELECT l1.s, l2.s FROM LSEG_TBL l1, LSEG_TBL l2 WHERE l1.s < l2.s;
+INFO:  Path param info: 0.000000
          s          |               s               
 --------------------+-------------------------------
  [(1,2),(3,4)]      | [(0,0),(6,6)]
@@ -1863,6 +1892,7 @@
 
 -- Has points less than or equal to line segment
 SELECT l1.s, l2.s FROM LSEG_TBL l1, LSEG_TBL l2 WHERE l1.s <= l2.s;
+INFO:  Path param info: 0.000000
                s               |               s               
 -------------------------------+-------------------------------
  [(1,2),(3,4)]                 | [(1,2),(3,4)]
@@ -1897,6 +1927,7 @@
 
 -- Has points equal to line segment
 SELECT l1.s, l2.s FROM LSEG_TBL l1, LSEG_TBL l2 WHERE l1.s = l2.s;
+INFO:  Path param info: 0.000000
                s               |               s               
 -------------------------------+-------------------------------
  [(1,2),(3,4)]                 | [(1,2),(3,4)]
@@ -1911,6 +1942,7 @@
 
 -- Has points greater than or equal to line segment
 SELECT l1.s, l2.s FROM LSEG_TBL l1, LSEG_TBL l2 WHERE l1.s >= l2.s;
+INFO:  Path param info: 0.000000
                s               |               s               
 -------------------------------+-------------------------------
  [(1,2),(3,4)]                 | [(1,2),(3,4)]
@@ -1945,6 +1977,7 @@
 
 -- Has points greater than line segment
 SELECT l1.s, l2.s FROM LSEG_TBL l1, LSEG_TBL l2 WHERE l1.s > l2.s;
+INFO:  Path param info: 0.000000
                s               |         s          
 -------------------------------+--------------------
  [(1,2),(3,4)]                 | [(-10,2),(-10,3)]
@@ -1972,6 +2005,7 @@
 
 -- Has points not equal to line segment
 SELECT l1.s, l2.s FROM LSEG_TBL l1, LSEG_TBL l2 WHERE l1.s != l2.s;
+INFO:  Path param info: 0.000000
                s               |               s               
 -------------------------------+-------------------------------
  [(1,2),(3,4)]                 | [(0,0),(6,6)]
@@ -2034,6 +2068,7 @@
 
 -- Parallel with line segment
 SELECT l1.s, l2.s FROM LSEG_TBL l1, LSEG_TBL l2 WHERE l1.s ?|| l2.s;
+INFO:  Path param info: 0.000000
                s               |               s               
 -------------------------------+-------------------------------
  [(1,2),(3,4)]                 | [(1,2),(3,4)]
@@ -2053,6 +2088,7 @@
 
 -- Perpendicular with line segment
 SELECT l1.s, l2.s FROM LSEG_TBL l1, LSEG_TBL l2 WHERE l1.s ?-| l2.s;
+INFO:  Path param info: 0.000000
          s          |         s          
 --------------------+--------------------
  [(-10,2),(-10,3)]  | [(0,-20),(30,-20)]
@@ -2061,6 +2097,7 @@
 
 -- Distance to line
 SELECT l.s, l1.s, l.s <-> l1.s AS dist_sl, l1.s <-> l.s AS dist_ls FROM LSEG_TBL l, LINE_TBL l1;
+INFO:  Path param info: 0.000000
                s               |                   s                   |    dist_sl     |    dist_ls     
 -------------------------------+---------------------------------------+----------------+----------------
  [(1,2),(3,4)]                 | {0,-1,5}                              |              1 |              1
@@ -2147,6 +2184,7 @@
 
 -- Distance to line segment
 SELECT l1.s, l2.s, l1.s <-> l2.s FROM LSEG_TBL l1, LSEG_TBL l2;
+INFO:  Path param info: 0.000000
                s               |               s               |    ?column?    
 -------------------------------+-------------------------------+----------------
  [(1,2),(3,4)]                 | [(1,2),(3,4)]                 |              0
@@ -2217,6 +2255,7 @@
 
 -- Distance to box
 SELECT l.s, b.f1, l.s <-> b.f1 AS dist_sb, b.f1 <-> l.s AS dist_bs FROM LSEG_TBL l, BOX_TBL b;
+INFO:  Path param info: 0.000000
                s               |         f1          |    dist_sb     |    dist_bs     
 -------------------------------+---------------------+----------------+----------------
  [(1,2),(3,4)]                 | (2,2),(0,0)         |              0 |              0
@@ -2263,6 +2302,7 @@
 
 -- Intersect with line segment
 SELECT l.s, l1.s FROM LSEG_TBL l, LINE_TBL l1 WHERE l.s ?# l1.s;
+INFO:  Path param info: 0.000000
                s               |      s       
 -------------------------------+--------------
  [(0,0),(6,6)]                 | {0,-1,5}
@@ -2286,6 +2326,7 @@
 
 -- Intersect with box
 SELECT l.s, b.f1 FROM LSEG_TBL l, BOX_TBL b WHERE l.s ?# b.f1;
+INFO:  Path param info: 0.000000
          s          |         f1          
 --------------------+---------------------
  [(1,2),(3,4)]      | (2,2),(0,0)
@@ -2300,6 +2341,7 @@
 
 -- Intersection point with line segment
 SELECT l1.s, l2.s, l1.s # l2.s FROM LSEG_TBL l1, LSEG_TBL l2;
+INFO:  Path param info: 0.000000
                s               |               s               | ?column? 
 -------------------------------+-------------------------------+----------
  [(1,2),(3,4)]                 | [(1,2),(3,4)]                 | 
@@ -2370,6 +2412,7 @@
 
 -- Closest point to line segment
 SELECT l1.s, l2.s, l1.s ## l2.s FROM LSEG_TBL l1, LSEG_TBL l2;
+INFO:  Path param info: 0.000000
                s               |               s               |            ?column?             
 -------------------------------+-------------------------------+---------------------------------
  [(1,2),(3,4)]                 | [(1,2),(3,4)]                 | 
@@ -2440,6 +2483,7 @@
 
 -- Closest point to box
 SELECT l.s, b.f1, l.s ## b.f1 FROM LSEG_TBL l, BOX_TBL b;
+INFO:  Path param info: 0.000000
                s               |         f1          |  ?column?   
 -------------------------------+---------------------+-------------
  [(1,2),(3,4)]                 | (2,2),(0,0)         | (1,2)
@@ -2486,6 +2530,7 @@
 
 -- On line
 SELECT l.s, l1.s FROM LSEG_TBL l, LINE_TBL l1 WHERE l.s <@ l1.s;
+INFO:  Path param info: 0.000000
                s               |                   s                   
 -------------------------------+---------------------------------------
  [(0,0),(6,6)]                 | {1,-1,0}
@@ -2494,6 +2539,7 @@
 
 -- On box
 SELECT l.s, b.f1 FROM LSEG_TBL l, BOX_TBL b WHERE l.s <@ b.f1;
+INFO:  Path param info: 0.000000
  s | f1 
 ---+----
 (0 rows)
@@ -2517,6 +2563,7 @@
 -- translation
 SELECT b.f1 + p.f1 AS translation
    FROM BOX_TBL b, POINT_TBL p;
+INFO:  Path param info: 0.000000
              translation             
 -------------------------------------
  (2,2),(0,0)
@@ -2573,6 +2620,7 @@
 
 SELECT b.f1 - p.f1 AS translation
    FROM BOX_TBL b, POINT_TBL p;
+INFO:  Path param info: 0.000000
                translation               
 -----------------------------------------
  (2,2),(0,0)
@@ -2629,6 +2677,7 @@
 
 -- Multiply with point
 SELECT b.f1, p.f1, b.f1 * p.f1 FROM BOX_TBL b, POINT_TBL p WHERE p.f1[0] BETWEEN 1 AND 1000;
+INFO:  Path param info: 0.000000
          f1          |     f1     |          ?column?           
 ---------------------+------------+-----------------------------
  (2,2),(0,0)         | (5.1,34.5) | (0,79.2),(-58.8,0)
@@ -2645,6 +2694,7 @@
 
 -- Overflow error
 SELECT b.f1, p.f1, b.f1 * p.f1 FROM BOX_TBL b, POINT_TBL p WHERE p.f1[0] > 1000;
+INFO:  Path param info: 0.000000
          f1          |        f1         |                  ?column?                  
 ---------------------+-------------------+--------------------------------------------
  (2,2),(0,0)         | (1e+300,Infinity) | (NaN,NaN),(-Infinity,Infinity)
@@ -2666,6 +2716,7 @@
 
 -- Divide by point
 SELECT b.f1, p.f1, b.f1 / p.f1 FROM BOX_TBL b, POINT_TBL p WHERE p.f1[0] BETWEEN 1 AND 1000;
+INFO:  Path param info: 0.000000
          f1          |     f1     |                               ?column?                               
 ---------------------+------------+----------------------------------------------------------------------
  (2,2),(0,0)         | (5.1,34.5) | (0.0651176557644,0),(0,-0.0483449262493)
@@ -2699,6 +2750,7 @@
 
 SELECT bound_box(a.f1, b.f1)
 	FROM BOX_TBL a, BOX_TBL b;
+INFO:  Path param info: 0.000000
       bound_box      
 ---------------------
  (2,2),(0,0)
@@ -2730,6 +2782,7 @@
 
 -- Below box
 SELECT b1.f1, b2.f1, b1.f1 <^ b2.f1 FROM BOX_TBL b1, BOX_TBL b2;
+INFO:  Path param info: 0.000000
          f1          |         f1          | ?column? 
 ---------------------+---------------------+----------
  (2,2),(0,0)         | (2,2),(0,0)         | f
@@ -2761,6 +2814,7 @@
 
 -- Above box
 SELECT b1.f1, b2.f1, b1.f1 >^ b2.f1 FROM BOX_TBL b1, BOX_TBL b2;
+INFO:  Path param info: 0.000000
          f1          |         f1          | ?column? 
 ---------------------+---------------------+----------
  (2,2),(0,0)         | (2,2),(0,0)         | f
@@ -2792,6 +2846,7 @@
 
 -- Intersection point with box
 SELECT b1.f1, b2.f1, b1.f1 # b2.f1 FROM BOX_TBL b1, BOX_TBL b2;
+INFO:  Path param info: 0.000000
          f1          |         f1          |      ?column?       
 ---------------------+---------------------+---------------------
  (2,2),(0,0)         | (2,2),(0,0)         | (2,2),(0,0)
@@ -2834,6 +2889,7 @@
 
 -- Distance to box
 SELECT b1.f1, b2.f1, b1.f1 <-> b2.f1 FROM BOX_TBL b1, BOX_TBL b2;
+INFO:  Path param info: 0.000000
          f1          |         f1          |   ?column?    
 ---------------------+---------------------+---------------
  (2,2),(0,0)         | (2,2),(0,0)         |             0
@@ -2927,6 +2983,7 @@
 ERROR:  open path cannot be converted to polygon
 -- Has points less than path
 SELECT p1.f1, p2.f1 FROM PATH_TBL p1, PATH_TBL p2 WHERE p1.f1 < p2.f1;
+INFO:  Path param info: 0.000000
         f1         |            f1             
 -------------------+---------------------------
  [(1,2),(3,4)]     | [(0,0),(3,0),(4,5),(1,6)]
@@ -2948,6 +3005,7 @@
 
 -- Has points less than or equal to path
 SELECT p1.f1, p2.f1 FROM PATH_TBL p1, PATH_TBL p2 WHERE p1.f1 <= p2.f1;
+INFO:  Path param info: 0.000000
             f1             |            f1             
 ---------------------------+---------------------------
  [(1,2),(3,4)]             | [(1,2),(3,4)]
@@ -3020,6 +3078,7 @@
 
 -- Has points equal to path
 SELECT p1.f1, p2.f1 FROM PATH_TBL p1, PATH_TBL p2 WHERE p1.f1 = p2.f1;
+INFO:  Path param info: 0.000000
             f1             |            f1             
 ---------------------------+---------------------------
  [(1,2),(3,4)]             | [(1,2),(3,4)]
@@ -3077,6 +3136,7 @@
 
 -- Has points greater than or equal to path
 SELECT p1.f1, p2.f1 FROM PATH_TBL p1, PATH_TBL p2 WHERE p1.f1 >= p2.f1;
+INFO:  Path param info: 0.000000
             f1             |            f1             
 ---------------------------+---------------------------
  [(1,2),(3,4)]             | [(1,2),(3,4)]
@@ -3149,6 +3209,7 @@
 
 -- Has points greater than path
 SELECT p1.f1, p2.f1 FROM PATH_TBL p1, PATH_TBL p2 WHERE p1.f1 > p2.f1;
+INFO:  Path param info: 0.000000
             f1             |        f1         
 ---------------------------+-------------------
  [(1,2),(3,4)]             | ((10,20))
@@ -3170,6 +3231,7 @@
 
 -- Add path
 SELECT p1.f1, p2.f1, p1.f1 + p2.f1 FROM PATH_TBL p1, PATH_TBL p2;
+INFO:  Path param info: 0.000000
             f1             |            f1             |                     ?column?                      
 ---------------------------+---------------------------+---------------------------------------------------
  [(1,2),(3,4)]             | [(1,2),(3,4)]             | [(1,2),(3,4),(1,2),(3,4)]
@@ -3257,6 +3319,7 @@
 
 -- Add point
 SELECT p.f1, p1.f1, p.f1 + p1.f1 FROM PATH_TBL p, POINT_TBL p1;
+INFO:  Path param info: 0.000000
             f1             |        f1         |                                 ?column?                                  
 ---------------------------+-------------------+---------------------------------------------------------------------------
  [(1,2),(3,4)]             | (0,0)             | [(1,2),(3,4)]
@@ -3353,6 +3416,7 @@
 
 -- Subtract point
 SELECT p.f1, p1.f1, p.f1 - p1.f1 FROM PATH_TBL p, POINT_TBL p1;
+INFO:  Path param info: 0.000000
             f1             |        f1         |                                     ?column?                                      
 ---------------------------+-------------------+-----------------------------------------------------------------------------------
  [(1,2),(3,4)]             | (0,0)             | [(1,2),(3,4)]
@@ -3449,6 +3513,7 @@
 
 -- Multiply with point
 SELECT p.f1, p1.f1, p.f1 * p1.f1 FROM PATH_TBL p, POINT_TBL p1;
+INFO:  Path param info: 0.000000
             f1             |        f1         |                               ?column?                               
 ---------------------------+-------------------+----------------------------------------------------------------------
  [(1,2),(3,4)]             | (0,0)             | [(0,0),(0,0)]
@@ -3545,6 +3610,7 @@
 
 -- Divide by point
 SELECT p.f1, p1.f1, p.f1 / p1.f1 FROM PATH_TBL p, POINT_TBL p1 WHERE p1.f1[0] BETWEEN 1 AND 1000;
+INFO:  Path param info: 0.000000
             f1             |     f1     |                                                    ?column?                                                     
 ---------------------------+------------+-----------------------------------------------------------------------------------------------------------------
  [(1,2),(3,4)]             | (5.1,34.5) | [(0.0609244733856,-0.0199792807459),(0.12604212915,-0.0683242069952)]
@@ -3569,9 +3635,11 @@
 
 -- Division by 0 error
 SELECT p.f1, p1.f1, p.f1 / p1.f1 FROM PATH_TBL p, POINT_TBL p1 WHERE p1.f1 ~= '(0,0)'::point;
+INFO:  Path param info: 0.000000
 ERROR:  division by zero
 -- Distance to path
 SELECT p1.f1, p2.f1, p1.f1 <-> p2.f1 FROM PATH_TBL p1, PATH_TBL p2;
+INFO:  Path param info: 0.000000
             f1             |            f1             |    ?column?    
 ---------------------------+---------------------------+----------------
  [(1,2),(3,4)]             | [(1,2),(3,4)]             |              0
@@ -3663,6 +3731,7 @@
 -- containment
 SELECT p.f1, poly.f1, poly.f1 @> p.f1 AS contains
    FROM POLYGON_TBL poly, POINT_TBL p;
+INFO:  Path param info: 0.000000
         f1         |             f1             | contains 
 -------------------+----------------------------+----------
  (0,0)             | ((2,0),(2,4),(0,0))        | t
@@ -3739,6 +3808,7 @@
 
 SELECT p.f1, poly.f1, p.f1 <@ poly.f1 AS contained
    FROM POLYGON_TBL poly, POINT_TBL p;
+INFO:  Path param info: 0.000000
         f1         |             f1             | contained 
 -------------------+----------------------------+-----------
  (0,0)             | ((2,0),(2,4),(0,0))        | t
@@ -3887,6 +3957,7 @@
 
 -- Same as polygon
 SELECT p1.f1, p2.f1 FROM POLYGON_TBL p1, POLYGON_TBL p2 WHERE p1.f1 ~= p2.f1;
+INFO:  Path param info: 0.000000
              f1             |             f1             
 ----------------------------+----------------------------
  ((2,0),(2,4),(0,0))        | ((2,0),(2,4),(0,0))
@@ -3902,6 +3973,7 @@
 
 -- Contained by polygon
 SELECT p1.f1, p2.f1 FROM POLYGON_TBL p1, POLYGON_TBL p2 WHERE p1.f1 <@ p2.f1;
+INFO:  Path param info: 0.000000
              f1             |             f1             
 ----------------------------+----------------------------
  ((2,0),(2,4),(0,0))        | ((2,0),(2,4),(0,0))
@@ -3920,6 +3992,7 @@
 
 -- Contains polygon
 SELECT p1.f1, p2.f1 FROM POLYGON_TBL p1, POLYGON_TBL p2 WHERE p1.f1 @> p2.f1;
+INFO:  Path param info: 0.000000
              f1             |             f1             
 ----------------------------+----------------------------
  ((2,0),(2,4),(0,0))        | ((2,0),(2,4),(0,0))
@@ -3938,6 +4011,7 @@
 
 -- Overlap with polygon
 SELECT p1.f1, p2.f1 FROM POLYGON_TBL p1, POLYGON_TBL p2 WHERE p1.f1 && p2.f1;
+INFO:  Path param info: 0.000000
              f1             |             f1             
 ----------------------------+----------------------------
  ((2,0),(2,4),(0,0))        | ((2,0),(2,4),(0,0))
@@ -3969,6 +4043,7 @@
 
 -- Left of polygon
 SELECT p1.f1, p2.f1 FROM POLYGON_TBL p1, POLYGON_TBL p2 WHERE p1.f1 << p2.f1;
+INFO:  Path param info: 0.000000
       f1       |             f1             
 ---------------+----------------------------
  ((0,0))       | ((3,1),(3,3),(1,0))
@@ -3983,6 +4058,7 @@
 
 -- Overlap of left of polygon
 SELECT p1.f1, p2.f1 FROM POLYGON_TBL p1, POLYGON_TBL p2 WHERE p1.f1 &< p2.f1;
+INFO:  Path param info: 0.000000
              f1             |             f1             
 ----------------------------+----------------------------
  ((2,0),(2,4),(0,0))        | ((2,0),(2,4),(0,0))
@@ -4021,6 +4097,7 @@
 
 -- Right of polygon
 SELECT p1.f1, p2.f1 FROM POLYGON_TBL p1, POLYGON_TBL p2 WHERE p1.f1 >> p2.f1;
+INFO:  Path param info: 0.000000
              f1             |      f1       
 ----------------------------+---------------
  ((3,1),(3,3),(1,0))        | ((0,0))
@@ -4035,6 +4112,7 @@
 
 -- Overlap of right of polygon
 SELECT p1.f1, p2.f1 FROM POLYGON_TBL p1, POLYGON_TBL p2 WHERE p1.f1 &> p2.f1;
+INFO:  Path param info: 0.000000
              f1             |             f1             
 ----------------------------+----------------------------
  ((2,0),(2,4),(0,0))        | ((2,0),(2,4),(0,0))
@@ -4078,6 +4156,7 @@
 
 -- Below polygon
 SELECT p1.f1, p2.f1 FROM POLYGON_TBL p1, POLYGON_TBL p2 WHERE p1.f1 <<| p2.f1;
+INFO:  Path param info: 0.000000
       f1       |            f1             
 ---------------+---------------------------
  ((0,0))       | ((1,2),(3,4),(5,6),(7,8))
@@ -4089,6 +4168,7 @@
 
 -- Overlap or below polygon
 SELECT p1.f1, p2.f1 FROM POLYGON_TBL p1, POLYGON_TBL p2 WHERE p1.f1 &<| p2.f1;
+INFO:  Path param info: 0.000000
              f1             |             f1             
 ----------------------------+----------------------------
  ((2,0),(2,4),(0,0))        | ((2,0),(2,4),(0,0))
@@ -4126,6 +4206,7 @@
 
 -- Above polygon
 SELECT p1.f1, p2.f1 FROM POLYGON_TBL p1, POLYGON_TBL p2 WHERE p1.f1 |>> p2.f1;
+INFO:  Path param info: 0.000000
             f1             |      f1       
 ---------------------------+---------------
  ((1,2),(3,4),(5,6),(7,8)) | ((0,0))
@@ -4137,6 +4218,7 @@
 
 -- Overlap or above polygon
 SELECT p1.f1, p2.f1 FROM POLYGON_TBL p1, POLYGON_TBL p2 WHERE p1.f1 |&> p2.f1;
+INFO:  Path param info: 0.000000
              f1             |             f1             
 ----------------------------+----------------------------
  ((2,0),(2,4),(0,0))        | ((2,0),(2,4),(0,0))
@@ -4175,6 +4257,7 @@
 
 -- Distance to polygon
 SELECT p1.f1, p2.f1, p1.f1 <-> p2.f1 FROM POLYGON_TBL p1, POLYGON_TBL p2;
+INFO:  Path param info: 0.000000
              f1             |             f1             |    ?column?    
 ----------------------------+----------------------------+----------------
  ((2,0),(2,4),(0,0))        | ((2,0),(2,4),(0,0))        |              0
@@ -4274,6 +4357,7 @@
    FROM CIRCLE_TBL c1, POINT_TBL p1
    WHERE (p1.f1 <-> c1.f1) > 0
    ORDER BY distance, area(c1.f1), p1.f1[0];
+INFO:  Path param info: 0.000000
      circle     |       point       |   distance    
 ----------------+-------------------+---------------
  <(1,2),3>      | (-3,4)            |   1.472135955
@@ -4371,6 +4455,7 @@
 ERROR:  cannot convert circle with radius zero to polygon
 -- Same as circle
 SELECT c1.f1, c2.f1 FROM CIRCLE_TBL c1, CIRCLE_TBL c2 WHERE c1.f1 ~= c2.f1;
+INFO:  Path param info: 0.000000
        f1       |       f1       
 ----------------+----------------
  <(5,1),3>      | <(5,1),3>
@@ -4385,6 +4470,7 @@
 
 -- Overlap with circle
 SELECT c1.f1, c2.f1 FROM CIRCLE_TBL c1, CIRCLE_TBL c2 WHERE c1.f1 && c2.f1;
+INFO:  Path param info: 0.000000
        f1       |       f1       
 ----------------+----------------
  <(5,1),3>      | <(5,1),3>
@@ -4424,6 +4510,7 @@
 
 -- Overlap or left of circle
 SELECT c1.f1, c2.f1 FROM CIRCLE_TBL c1, CIRCLE_TBL c2 WHERE c1.f1 &< c2.f1;
+INFO:  Path param info: 0.000000
        f1       |       f1       
 ----------------+----------------
  <(5,1),3>      | <(5,1),3>
@@ -4458,6 +4545,7 @@
 
 -- Left of circle
 SELECT c1.f1, c2.f1 FROM CIRCLE_TBL c1, CIRCLE_TBL c2 WHERE c1.f1 << c2.f1;
+INFO:  Path param info: 0.000000
     f1     |       f1       
 -----------+----------------
  <(5,1),3> | <(100,200),10>
@@ -4468,6 +4556,7 @@
 
 -- Right of circle
 SELECT c1.f1, c2.f1 FROM CIRCLE_TBL c1, CIRCLE_TBL c2 WHERE c1.f1 >> c2.f1;
+INFO:  Path param info: 0.000000
        f1       |    f1     
 ----------------+-----------
  <(100,200),10> | <(5,1),3>
@@ -4478,6 +4567,7 @@
 
 -- Overlap or right of circle
 SELECT c1.f1, c2.f1 FROM CIRCLE_TBL c1, CIRCLE_TBL c2 WHERE c1.f1 &> c2.f1;
+INFO:  Path param info: 0.000000
        f1       |       f1       
 ----------------+----------------
  <(5,1),3>      | <(5,1),3>
@@ -4512,6 +4602,7 @@
 
 -- Contained by circle
 SELECT c1.f1, c2.f1 FROM CIRCLE_TBL c1, CIRCLE_TBL c2 WHERE c1.f1 <@ c2.f1;
+INFO:  Path param info: 0.000000
        f1       |       f1       
 ----------------+----------------
  <(5,1),3>      | <(5,1),3>
@@ -4535,6 +4626,7 @@
 
 -- Contain by circle
 SELECT c1.f1, c2.f1 FROM CIRCLE_TBL c1, CIRCLE_TBL c2 WHERE c1.f1 @> c2.f1;
+INFO:  Path param info: 0.000000
        f1       |       f1       
 ----------------+----------------
  <(5,1),3>      | <(5,1),3>
@@ -4558,6 +4650,7 @@
 
 -- Below circle
 SELECT c1.f1, c2.f1 FROM CIRCLE_TBL c1, CIRCLE_TBL c2 WHERE c1.f1 <<| c2.f1;
+INFO:  Path param info: 0.000000
       f1       |       f1       
 ---------------+----------------
  <(5,1),3>     | <(100,200),10>
@@ -4571,6 +4664,7 @@
 
 -- Above circle
 SELECT c1.f1, c2.f1 FROM CIRCLE_TBL c1, CIRCLE_TBL c2 WHERE c1.f1 |>> c2.f1;
+INFO:  Path param info: 0.000000
        f1       |      f1       
 ----------------+---------------
  <(100,200),10> | <(5,1),3>
@@ -4584,6 +4678,7 @@
 
 -- Overlap or below circle
 SELECT c1.f1, c2.f1 FROM CIRCLE_TBL c1, CIRCLE_TBL c2 WHERE c1.f1 &<| c2.f1;
+INFO:  Path param info: 0.000000
        f1       |       f1       
 ----------------+----------------
  <(5,1),3>      | <(5,1),3>
@@ -4619,6 +4714,7 @@
 
 -- Overlap or above circle
 SELECT c1.f1, c2.f1 FROM CIRCLE_TBL c1, CIRCLE_TBL c2 WHERE c1.f1 |&> c2.f1;
+INFO:  Path param info: 0.000000
        f1       |       f1       
 ----------------+----------------
  <(5,1),3>      | <(5,1),3>
@@ -4654,6 +4750,7 @@
 
 -- Area equal with circle
 SELECT c1.f1, c2.f1 FROM CIRCLE_TBL c1, CIRCLE_TBL c2 WHERE c1.f1 = c2.f1;
+INFO:  Path param info: 0.000000
        f1       |       f1       
 ----------------+----------------
  <(5,1),3>      | <(5,1),3>
@@ -4669,6 +4766,7 @@
 
 -- Area not equal with circle
 SELECT c1.f1, c2.f1 FROM CIRCLE_TBL c1, CIRCLE_TBL c2 WHERE c1.f1 != c2.f1;
+INFO:  Path param info: 0.000000
        f1       |       f1       
 ----------------+----------------
  <(5,1),3>      | <(1,2),100>
@@ -4715,6 +4813,7 @@
 
 -- Area less than circle
 SELECT c1.f1, c2.f1 FROM CIRCLE_TBL c1, CIRCLE_TBL c2 WHERE c1.f1 < c2.f1;
+INFO:  Path param info: 0.000000
        f1       |       f1       
 ----------------+----------------
  <(5,1),3>      | <(1,2),100>
@@ -4741,6 +4840,7 @@
 
 -- Area greater than circle
 SELECT c1.f1, c2.f1 FROM CIRCLE_TBL c1, CIRCLE_TBL c2 WHERE c1.f1 > c2.f1;
+INFO:  Path param info: 0.000000
        f1       |       f1       
 ----------------+----------------
  <(5,1),3>      | <(3,5),0>
@@ -4767,6 +4867,7 @@
 
 -- Area less than or equal circle
 SELECT c1.f1, c2.f1 FROM CIRCLE_TBL c1, CIRCLE_TBL c2 WHERE c1.f1 <= c2.f1;
+INFO:  Path param info: 0.000000
        f1       |       f1       
 ----------------+----------------
  <(5,1),3>      | <(5,1),3>
@@ -4802,6 +4903,7 @@
 
 -- Area greater than or equal circle
 SELECT c1.f1, c2.f1 FROM CIRCLE_TBL c1, CIRCLE_TBL c2 WHERE c1.f1 >= c2.f1;
+INFO:  Path param info: 0.000000
        f1       |       f1       
 ----------------+----------------
  <(5,1),3>      | <(5,1),3>
@@ -4837,6 +4939,7 @@
 
 -- Area less than circle
 SELECT c1.f1, c2.f1 FROM CIRCLE_TBL c1, CIRCLE_TBL c2 WHERE c1.f1 < c2.f1;
+INFO:  Path param info: 0.000000
        f1       |       f1       
 ----------------+----------------
  <(5,1),3>      | <(1,2),100>
@@ -4863,6 +4966,7 @@
 
 -- Area greater than circle
 SELECT c1.f1, c2.f1 FROM CIRCLE_TBL c1, CIRCLE_TBL c2 WHERE c1.f1 < c2.f1;
+INFO:  Path param info: 0.000000
        f1       |       f1       
 ----------------+----------------
  <(5,1),3>      | <(1,2),100>
@@ -4889,6 +4993,7 @@
 
 -- Add point
 SELECT c.f1, p.f1, c.f1 + p.f1 FROM CIRCLE_TBL c, POINT_TBL p;
+INFO:  Path param info: 0.000000
        f1       |        f1         |        ?column?         
 ----------------+-------------------+-------------------------
  <(5,1),3>      | (0,0)             | <(5,1),3>
@@ -4975,6 +5080,7 @@
 
 -- Subtract point
 SELECT c.f1, p.f1, c.f1 - p.f1 FROM CIRCLE_TBL c, POINT_TBL p;
+INFO:  Path param info: 0.000000
        f1       |        f1         |         ?column?          
 ----------------+-------------------+---------------------------
  <(5,1),3>      | (0,0)             | <(5,1),3>
@@ -5061,6 +5167,7 @@
 
 -- Multiply with point
 SELECT c.f1, p.f1, c.f1 * p.f1 FROM CIRCLE_TBL c, POINT_TBL p;
+INFO:  Path param info: 0.000000
        f1       |        f1         |                  ?column?                  
 ----------------+-------------------+--------------------------------------------
  <(5,1),3>      | (0,0)             | <(0,0),0>
@@ -5147,6 +5254,7 @@
 
 -- Divide by point
 SELECT c.f1, p.f1, c.f1 / p.f1 FROM CIRCLE_TBL c, POINT_TBL p WHERE p.f1[0] BETWEEN 1 AND 1000;
+INFO:  Path param info: 0.000000
        f1       |     f1     |                       ?column?                       
 ----------------+------------+------------------------------------------------------
  <(5,1),3>      | (5.1,34.5) | <(0.0493315573973,-0.137635045138),0.0860217042937>
@@ -5169,12 +5277,15 @@
 
 -- Overflow error
 SELECT c.f1, p.f1, c.f1 / p.f1 FROM CIRCLE_TBL c, POINT_TBL p WHERE p.f1[0] > 1000;
+INFO:  Path param info: 0.000000
 ERROR:  value out of range: overflow
 -- Division by 0 error
 SELECT c.f1, p.f1, c.f1 / p.f1 FROM CIRCLE_TBL c, POINT_TBL p WHERE p.f1 ~= '(0,0)'::point;
+INFO:  Path param info: 0.000000
 ERROR:  division by zero
 -- Distance to polygon
 SELECT c.f1, p.f1, c.f1 <-> p.f1 FROM CIRCLE_TBL c, POLYGON_TBL p;
+INFO:  Path param info: 0.000000
        f1       |             f1             |    ?column?    
 ----------------+----------------------------+----------------
  <(5,1),3>      | ((2,0),(2,4),(0,0))        |              0
diff -U3 /home/dbs/pg-queryplans/postgres/src/test/regress/expected/horology.out /home/dbs/pg-queryplans/postgres/src/test/regress/results/horology.out
--- /home/dbs/pg-queryplans/postgres/src/test/regress/expected/horology.out	2024-02-20 13:16:25.959611416 +0900
+++ /home/dbs/pg-queryplans/postgres/src/test/regress/results/horology.out	2024-02-20 16:07:30.740041393 +0900
@@ -1053,6 +1053,7 @@
   WHERE t.d1 BETWEEN '1990-01-01' AND '2001-01-01'
     AND i.f1 BETWEEN '00:00' AND '23:00'
   ORDER BY 1,2;
+INFO:  Path param info: 0.000000
              t              |     i     |            add             |          subtract          
 ----------------------------+-----------+----------------------------+----------------------------
  Wed Feb 28 17:32:01 1996   | @ 1 min   | Wed Feb 28 17:33:01 1996   | Wed Feb 28 17:31:01 1996
@@ -1164,6 +1165,7 @@
 SELECT t.f1 AS t, i.f1 AS i, t.f1 + i.f1 AS "add", t.f1 - i.f1 AS "subtract"
   FROM TIME_TBL t, INTERVAL_TBL i
   ORDER BY 1,2;
+INFO:  Path param info: 0.000000
       t      |               i               |     add     |  subtract   
 -------------+-------------------------------+-------------+-------------
  00:00:00    | @ 14 secs ago                 | 23:59:46    | 00:00:14
@@ -1271,6 +1273,7 @@
 SELECT t.f1 AS t, i.f1 AS i, t.f1 + i.f1 AS "add", t.f1 - i.f1 AS "subtract"
   FROM TIMETZ_TBL t, INTERVAL_TBL i
   ORDER BY 1,2;
+INFO:  Path param info: 0.000000
        t        |               i               |      add       |    subtract    
 ----------------+-------------------------------+----------------+----------------
  00:01:00-07    | @ 14 secs ago                 | 00:00:46-07    | 00:01:14-07
@@ -1546,6 +1549,7 @@
 SELECT d.f1 AS "timestamp", t.f1 AS "interval", d.f1 + t.f1 AS plus
   FROM TEMP_TIMESTAMP d, INTERVAL_TBL t
   ORDER BY plus, "timestamp", "interval";
+INFO:  Path param info: 0.000000
           timestamp           |           interval            |             plus             
 ------------------------------+-------------------------------+------------------------------
  Thu Jan 01 00:00:00 1970 PST | @ 14 secs ago                 | Wed Dec 31 23:59:46 1969 PST
@@ -1714,6 +1718,7 @@
   FROM TEMP_TIMESTAMP d, INTERVAL_TBL t
   WHERE isfinite(d.f1)
   ORDER BY minus, "timestamp", "interval";
+INFO:  Path param info: 0.000000
           timestamp           |           interval            |            minus             
 ------------------------------+-------------------------------+------------------------------
  Thu Jan 01 00:00:00 1970 PST | @ 34 years                    | Wed Jan 01 00:00:00 1936 PST
@@ -1906,6 +1911,7 @@
 SELECT d1.f1 AS timestamp1, d2.f1 AS timestamp2, d1.f1 - d2.f1 AS difference
   FROM TEMP_TIMESTAMP d1, TEMP_TIMESTAMP d2
   ORDER BY timestamp1, timestamp2, difference;
+INFO:  Path param info: 0.000000
           timestamp1          |          timestamp2          |                difference                 
 ------------------------------+------------------------------+-------------------------------------------
  Thu Jan 01 00:00:00 1970 PST | Thu Jan 01 00:00:00 1970 PST | @ 0
diff -U3 /home/dbs/pg-queryplans/postgres/src/test/regress/expected/type_sanity.out /home/dbs/pg-queryplans/postgres/src/test/regress/results/type_sanity.out
--- /home/dbs/pg-queryplans/postgres/src/test/regress/expected/type_sanity.out	2024-02-20 13:16:25.975611131 +0900
+++ /home/dbs/pg-queryplans/postgres/src/test/regress/results/type_sanity.out	2024-02-20 16:07:30.744041334 +0900
@@ -67,6 +67,8 @@
      WHERE t2.typname = ('_' || t1.typname)::name AND
            t2.typelem = t1.oid and t1.typarray = t2.oid)
 ORDER BY t1.oid;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  oid  |           typname            
 ------+------------------------------
   194 | pg_node_tree
@@ -84,6 +86,7 @@
 WHERE  t1.typarray <> 0 AND
        (t2.oid IS NULL OR
         t2.typsubscript <> 'array_subscript_handler'::regproc);
+INFO:  Path param info: 0.000000
  oid | basetype | arraytype | typsubscript 
 -----+----------+-----------+--------------
 (0 rows)
@@ -93,6 +96,7 @@
 FROM pg_type as t1
 WHERE t1.typtype = 'r' AND
    NOT EXISTS(SELECT 1 FROM pg_range r WHERE rngtypid = t1.oid);
+INFO:  Path param info: 0.000000
  oid | typname 
 -----+---------
 (0 rows)
@@ -106,6 +110,11 @@
     (t1.typalign != (CASE WHEN t2.typalign = 'd' THEN 'd'::"char"
                           ELSE 'i'::"char" END)
      OR t2.oid IS NULL);
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  oid | typname | typalign | typname | typalign 
 -----+---------+----------+---------+----------
 (0 rows)
@@ -128,6 +137,7 @@
      (p1.pronargs = 3 AND p1.proargtypes[0] = 'cstring'::regtype AND
       p1.proargtypes[1] = 'oid'::regtype AND
       p1.proargtypes[2] = 'int4'::regtype));
+INFO:  Path param info: 0.000000
  oid | typname | oid | proname 
 -----+---------+-----+---------
 (0 rows)
@@ -140,6 +150,8 @@
     (t1.typelem != 0 AND t1.typlen < 0) AND NOT
     (p1.prorettype = t1.oid AND NOT p1.proretset)
 ORDER BY 1;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  oid  |  typname  | oid | proname 
 ------+-----------+-----+---------
  1790 | refcursor |  46 | textin
@@ -153,6 +165,8 @@
     (t1.typelem != 0 AND t1.typlen < 0) AND NOT
     (p1.oid = 'array_in'::regproc)
 ORDER BY 1;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  oid |  typname   | oid |   proname    
 -----+------------+-----+--------------
   22 | int2vector |  40 | int2vectorin
@@ -163,6 +177,7 @@
 SELECT t1.oid, t1.typname, p1.oid, p1.proname
 FROM pg_type AS t1, pg_proc AS p1
 WHERE t1.typinput = p1.oid AND p1.provolatile NOT IN ('i', 's');
+INFO:  Path param info: 0.000000
  oid | typname | oid | proname 
 -----+---------+-----+---------
 (0 rows)
@@ -192,6 +207,8 @@
       (p1.oid = 'array_out'::regproc AND
        t1.typelem != 0 AND t1.typlen = -1)))
 ORDER BY 1;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  oid  |  typname  | oid | proname 
 ------+-----------+-----+---------
  1790 | refcursor |  47 | textout
@@ -201,6 +218,7 @@
 FROM pg_type AS t1, pg_proc AS p1
 WHERE t1.typoutput = p1.oid AND NOT
     (p1.prorettype = 'cstring'::regtype AND NOT p1.proretset);
+INFO:  Path param info: 0.000000
  oid | typname | oid | proname 
 -----+---------+-----+---------
 (0 rows)
@@ -209,6 +227,7 @@
 SELECT t1.oid, t1.typname, p1.oid, p1.proname
 FROM pg_type AS t1, pg_proc AS p1
 WHERE t1.typoutput = p1.oid AND p1.provolatile NOT IN ('i', 's');
+INFO:  Path param info: 0.000000
  oid | typname | oid | proname 
 -----+---------+-----+---------
 (0 rows)
@@ -230,6 +249,7 @@
 SELECT t1.oid, t1.typname, t2.oid, t2.typname
 FROM pg_type AS t1 LEFT JOIN pg_type AS t2 ON t1.typbasetype = t2.oid
 WHERE t1.typtype = 'd' AND t1.typoutput IS DISTINCT FROM t2.typoutput;
+INFO:  Path param info: 0.000000
  oid | typname | oid | typname 
 -----+---------+-----+---------
 (0 rows)
@@ -244,6 +264,7 @@
      (p1.pronargs = 3 AND p1.proargtypes[0] = 'internal'::regtype AND
       p1.proargtypes[1] = 'oid'::regtype AND
       p1.proargtypes[2] = 'int4'::regtype));
+INFO:  Path param info: 0.000000
  oid | typname | oid | proname 
 -----+---------+-----+---------
 (0 rows)
@@ -256,6 +277,8 @@
     (t1.typelem != 0 AND t1.typlen < 0) AND NOT
     (p1.prorettype = t1.oid AND NOT p1.proretset)
 ORDER BY 1;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  oid  |  typname  | oid  | proname  
 ------+-----------+------+----------
  1790 | refcursor | 2414 | textrecv
@@ -269,6 +292,8 @@
     (t1.typelem != 0 AND t1.typlen < 0) AND NOT
     (p1.oid = 'array_recv'::regproc)
 ORDER BY 1;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  oid |  typname   | oid  |    proname     
 -----+------------+------+----------------
   22 | int2vector | 2410 | int2vectorrecv
@@ -280,6 +305,12 @@
 FROM pg_type AS t1, pg_proc AS p1, pg_proc AS p2
 WHERE t1.typinput = p1.oid AND t1.typreceive = p2.oid AND
     p1.pronargs != p2.pronargs;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  oid | typname | oid | proname | oid | proname 
 -----+---------+-----+---------+-----+---------
 (0 rows)
@@ -288,6 +319,7 @@
 SELECT t1.oid, t1.typname, p1.oid, p1.proname
 FROM pg_type AS t1, pg_proc AS p1
 WHERE t1.typreceive = p1.oid AND p1.provolatile NOT IN ('i', 's');
+INFO:  Path param info: 0.000000
  oid | typname | oid | proname 
 -----+---------+-----+---------
 (0 rows)
@@ -317,6 +349,8 @@
       (p1.oid = 'array_send'::regproc AND
        t1.typelem != 0 AND t1.typlen = -1)))
 ORDER BY 1;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  oid  |  typname  | oid  | proname  
 ------+-----------+------+----------
  1790 | refcursor | 2415 | textsend
@@ -326,6 +360,7 @@
 FROM pg_type AS t1, pg_proc AS p1
 WHERE t1.typsend = p1.oid AND NOT
     (p1.prorettype = 'bytea'::regtype AND NOT p1.proretset);
+INFO:  Path param info: 0.000000
  oid | typname | oid | proname 
 -----+---------+-----+---------
 (0 rows)
@@ -334,6 +369,7 @@
 SELECT t1.oid, t1.typname, p1.oid, p1.proname
 FROM pg_type AS t1, pg_proc AS p1
 WHERE t1.typsend = p1.oid AND p1.provolatile NOT IN ('i', 's');
+INFO:  Path param info: 0.000000
  oid | typname | oid | proname 
 -----+---------+-----+---------
 (0 rows)
@@ -355,6 +391,7 @@
 SELECT t1.oid, t1.typname, t2.oid, t2.typname
 FROM pg_type AS t1 LEFT JOIN pg_type AS t2 ON t1.typbasetype = t2.oid
 WHERE t1.typtype = 'd' AND t1.typsend IS DISTINCT FROM t2.typsend;
+INFO:  Path param info: 0.000000
  oid | typname | oid | typname 
 -----+---------+-----+---------
 (0 rows)
@@ -366,6 +403,7 @@
     (p1.pronargs = 1 AND
      p1.proargtypes[0] = 'cstring[]'::regtype AND
      p1.prorettype = 'int4'::regtype AND NOT p1.proretset);
+INFO:  Path param info: 0.000000
  oid | typname | oid | proname 
 -----+---------+-----+---------
 (0 rows)
@@ -374,6 +412,7 @@
 SELECT t1.oid, t1.typname, p1.oid, p1.proname
 FROM pg_type AS t1, pg_proc AS p1
 WHERE t1.typmodin = p1.oid AND p1.provolatile NOT IN ('i', 's');
+INFO:  Path param info: 0.000000
  oid | typname | oid | proname 
 -----+---------+-----+---------
 (0 rows)
@@ -385,6 +424,7 @@
     (p1.pronargs = 1 AND
      p1.proargtypes[0] = 'int4'::regtype AND
      p1.prorettype = 'cstring'::regtype AND NOT p1.proretset);
+INFO:  Path param info: 0.000000
  oid | typname | oid | proname 
 -----+---------+-----+---------
 (0 rows)
@@ -393,6 +433,7 @@
 SELECT t1.oid, t1.typname, p1.oid, p1.proname
 FROM pg_type AS t1, pg_proc AS p1
 WHERE t1.typmodout = p1.oid AND p1.provolatile NOT IN ('i', 's');
+INFO:  Path param info: 0.000000
  oid | typname | oid | proname 
 -----+---------+-----+---------
 (0 rows)
@@ -402,6 +443,7 @@
 FROM pg_type AS t1, pg_type AS t2
 WHERE t1.typelem = t2.oid AND NOT
     (t1.typmodin = t2.typmodin AND t1.typmodout = t2.typmodout);
+INFO:  Path param info: 0.000000
  oid | typname | oid | typname 
 -----+---------+-----+---------
 (0 rows)
@@ -410,6 +452,7 @@
 SELECT t1.oid, t1.typname, t2.oid, t2.typname
 FROM pg_type AS t1, pg_type AS t2
 WHERE t1.typarray = t2.oid AND NOT (t1.typdelim = t2.typdelim);
+INFO:  Path param info: 0.000000
  oid | typname | oid | typname 
 -----+---------+-----+---------
 (0 rows)
@@ -420,6 +463,7 @@
 WHERE t1.typarray = t2.oid AND
     t2.typalign != (CASE WHEN t1.typalign = 'd' THEN 'd'::"char"
                          ELSE 'i'::"char" END);
+INFO:  Path param info: 0.000000
  oid | typname | typalign | typname | typalign 
 -----+---------+----------+---------+----------
 (0 rows)
@@ -458,6 +502,7 @@
     (p1.pronargs = 1 AND
      p1.proargtypes[0] = 'internal'::regtype AND
      p1.prorettype = 'bool'::regtype AND NOT p1.proretset);
+INFO:  Path param info: 0.000000
  oid | typname | oid | proname 
 -----+---------+-----+---------
 (0 rows)
@@ -467,6 +512,7 @@
 SELECT d.oid, d.typname, d.typanalyze, t.oid, t.typname, t.typanalyze
 FROM pg_type d JOIN pg_type t ON d.typbasetype = t.oid
 WHERE d.typanalyze != t.typanalyze;
+INFO:  Path param info: 0.000000
  oid | typname | typanalyze | oid | typname | typanalyze 
 -----+---------+------------+-----+---------+------------
 (0 rows)
@@ -477,6 +523,7 @@
 FROM pg_type t LEFT JOIN pg_range r on t.oid = r.rngtypid
 WHERE t.typbasetype = 0 AND
     (t.typanalyze = 'range_typanalyze'::regproc) != (r.rngtypid IS NOT NULL);
+INFO:  Path param info: 0.000000
  oid | typname | typanalyze 
 -----+---------+------------
 (0 rows)
@@ -530,6 +577,7 @@
 FROM pg_class as pc JOIN pg_am AS pa ON (pc.relam = pa.oid)
 WHERE pc.relkind IN ('i') and
     pa.amtype != 'i';
+INFO:  Path param info: 0.000000
  oid | relname | amname | amtype 
 -----+---------+--------+--------
 (0 rows)
@@ -539,6 +587,7 @@
 FROM pg_class as pc JOIN pg_am AS pa ON (pc.relam = pa.oid)
 WHERE pc.relkind IN ('r', 't', 'm') and
     pa.amtype != 't';
+INFO:  Path param info: 0.000000
  oid | relname | amname | amtype 
 -----+---------+--------+--------
 (0 rows)
@@ -558,6 +607,7 @@
 SELECT a1.attrelid, a1.attname, c1.oid, c1.relname
 FROM pg_attribute AS a1, pg_class AS c1
 WHERE a1.attrelid = c1.oid AND a1.attnum > c1.relnatts;
+INFO:  Path param info: 0.000000
  attrelid | attname | oid | relname 
 ----------+---------+-----+---------
 (0 rows)
@@ -582,6 +632,7 @@
      a1.attalign != t1.typalign OR
      a1.attbyval != t1.typbyval OR
      (a1.attstorage != t1.typstorage AND a1.attstorage != 'p'));
+INFO:  Path param info: 0.000000
  attrelid | attname | oid | typname 
 ----------+---------+-----+---------
 (0 rows)
@@ -599,6 +650,7 @@
 SELECT r.rngtypid, r.rngsubtype, r.rngcollation, t.typcollation
 FROM pg_range r JOIN pg_type t ON t.oid = r.rngsubtype
 WHERE (rngcollation = 0) != (typcollation = 0);
+INFO:  Path param info: 0.000000
  rngtypid | rngsubtype | rngcollation | typcollation 
 ----------+------------+--------------+--------------
 (0 rows)
@@ -613,6 +665,7 @@
       EXISTS(select 1 from pg_catalog.pg_type where
              oid = r.rngsubtype and typelem != 0 and
              typsubscript = 'array_subscript_handler'::regproc)));
+INFO:  Path param info: 0.000000
  rngtypid | rngsubtype | opcmethod | opcname 
 ----------+------------+-----------+---------
 (0 rows)
@@ -621,6 +674,7 @@
 SELECT r.rngtypid, r.rngsubtype, p.proname
 FROM pg_range r JOIN pg_proc p ON p.oid = r.rngcanonical
 WHERE pronargs != 1 OR proargtypes[0] != rngtypid OR prorettype != rngtypid;
+INFO:  Path param info: 0.000000
  rngtypid | rngsubtype | proname 
 ----------+------------+---------
 (0 rows)
@@ -631,6 +685,7 @@
 WHERE pronargs != 2
     OR proargtypes[0] != rngsubtype OR proargtypes[1] != rngsubtype
     OR prorettype != 'pg_catalog.float8'::regtype;
+INFO:  Path param info: 0.000000
  rngtypid | rngsubtype | proname 
 ----------+------------+---------
 (0 rows)
@@ -736,6 +791,11 @@
                     WHERE a.atttypid=t.oid AND
                           a.attnum > 0 AND
                           a.attrelid='tab_core_types'::regclass);
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  oid | typname | typtype | typelem | typarray 
 -----+---------+---------+---------+----------
 (0 rows)
diff -U3 /home/dbs/pg-queryplans/postgres/src/test/regress/expected/opr_sanity.out /home/dbs/pg-queryplans/postgres/src/test/regress/results/opr_sanity.out
--- /home/dbs/pg-queryplans/postgres/src/test/regress/expected/opr_sanity.out	2024-02-20 13:16:25.967611274 +0900
+++ /home/dbs/pg-queryplans/postgres/src/test/regress/results/opr_sanity.out	2024-02-20 16:07:30.824040167 +0900
@@ -101,6 +101,7 @@
     p1.proname = p2.proname AND
     p1.pronargs = p2.pronargs AND
     p1.proargtypes = p2.proargtypes;
+INFO:  Path param info: 0.000000
  oid | proname | oid | proname 
 -----+---------+-----+---------
 (0 rows)
@@ -126,6 +127,7 @@
      p1.proretset != p2.proretset OR
      p1.provolatile != p2.provolatile OR
      p1.pronargs != p2.pronargs);
+INFO:  Path param info: 0.000000
  oid | proname | oid | proname 
 -----+---------+-----+---------
 (0 rows)
@@ -153,6 +155,7 @@
     p2.prosrc NOT LIKE E'multirange\\_constructor_' AND
     (p1.prorettype < p2.prorettype)
 ORDER BY 1, 2;
+INFO:  Path param info: 0.000000
          prorettype          |        prorettype        
 -----------------------------+--------------------------
  bigint                      | xid8
@@ -173,6 +176,7 @@
     p2.prosrc NOT LIKE E'multirange\\_constructor_' AND
     (p1.proargtypes[0] < p2.proargtypes[0])
 ORDER BY 1, 2;
+INFO:  Path param info: 0.000000
          proargtypes         |       proargtypes        
 -----------------------------+--------------------------
  bigint                      | xid8
@@ -195,6 +199,7 @@
     p2.prosrc NOT LIKE E'multirange\\_constructor_' AND
     (p1.proargtypes[1] < p2.proargtypes[1])
 ORDER BY 1, 2;
+INFO:  Path param info: 0.000000
          proargtypes         |       proargtypes        
 -----------------------------+--------------------------
  integer                     | xid
@@ -212,6 +217,7 @@
     p1.prokind != 'a' AND p2.prokind != 'a' AND
     (p1.proargtypes[2] < p2.proargtypes[2])
 ORDER BY 1, 2;
+INFO:  Path param info: 0.000000
          proargtypes         |       proargtypes        
 -----------------------------+--------------------------
  timestamp without time zone | timestamp with time zone
@@ -225,6 +231,7 @@
     p1.prokind != 'a' AND p2.prokind != 'a' AND
     (p1.proargtypes[3] < p2.proargtypes[3])
 ORDER BY 1, 2;
+INFO:  Path param info: 0.000000
          proargtypes         |       proargtypes        
 -----------------------------+--------------------------
  timestamp without time zone | timestamp with time zone
@@ -238,6 +245,7 @@
     p1.prokind != 'a' AND p2.prokind != 'a' AND
     (p1.proargtypes[4] < p2.proargtypes[4])
 ORDER BY 1, 2;
+INFO:  Path param info: 0.000000
  proargtypes | proargtypes 
 -------------+-------------
 (0 rows)
@@ -250,6 +258,7 @@
     p1.prokind != 'a' AND p2.prokind != 'a' AND
     (p1.proargtypes[5] < p2.proargtypes[5])
 ORDER BY 1, 2;
+INFO:  Path param info: 0.000000
  proargtypes | proargtypes 
 -------------+-------------
 (0 rows)
@@ -262,6 +271,7 @@
     p1.prokind != 'a' AND p2.prokind != 'a' AND
     (p1.proargtypes[6] < p2.proargtypes[6])
 ORDER BY 1, 2;
+INFO:  Path param info: 0.000000
  proargtypes | proargtypes 
 -------------+-------------
 (0 rows)
@@ -274,6 +284,7 @@
     p1.prokind != 'a' AND p2.prokind != 'a' AND
     (p1.proargtypes[7] < p2.proargtypes[7])
 ORDER BY 1, 2;
+INFO:  Path param info: 0.000000
  proargtypes | proargtypes 
 -------------+-------------
 (0 rows)
@@ -388,6 +399,12 @@
     AND NOT EXISTS(SELECT 1 FROM pg_conversion WHERE conproc = p1.oid)
     AND p1.oid != 'shell_in(cstring)'::regprocedure
 ORDER BY 1;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  oid  |   proname    
 ------+--------------
  2293 | cstring_out
@@ -405,6 +422,12 @@
     AND NOT EXISTS(SELECT 1 FROM pg_type WHERE typmodout = p1.oid)
     AND p1.oid != 'shell_out(void)'::regprocedure
 ORDER BY 1;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  oid  |   proname    
 ------+--------------
  2292 | cstring_in
@@ -509,6 +532,7 @@
 WHERE p2.oid = p1.prosupport AND
     (p2.prorettype != 'internal'::regtype OR p2.proretset OR p2.pronargs != 1
      OR p2.proargtypes[0] != 'internal'::regtype);
+INFO:  Path param info: 0.000000
  oid | proname | oid | proname 
 -----+---------+-----+---------
 (0 rows)
@@ -518,6 +542,7 @@
 FROM pg_proc as p1 LEFT JOIN pg_description as d
      ON p1.tableoid = d.classoid and p1.oid = d.objoid and d.objsubid = 0
 WHERE d.classoid IS NULL AND p1.oid <= 9999;
+INFO:  Path param info: 0.000000
  oid | proname 
 -----+---------
 (0 rows)
@@ -535,6 +560,8 @@
      ON pronamespace = pn.oid
 WHERE nspname = 'pg_catalog' AND proleakproof
 ORDER BY 1;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
 boollt(boolean,boolean)
 boolgt(boolean,boolean)
 booleq(boolean,boolean)
@@ -956,6 +983,7 @@
 SELECT c.*
 FROM pg_cast c, pg_proc p
 WHERE c.castfunc = p.oid AND p.pronargs < 2 AND castsource = casttarget;
+INFO:  Path param info: 0.000000
  oid | castsource | casttarget | castfunc | castcontext | castmethod 
 -----+------------+------------+----------+-------------+------------
 (0 rows)
@@ -975,6 +1003,7 @@
              OR (c.castsource = 'character'::regtype AND
                  p.proargtypes[0] = 'text'::regtype))
      OR NOT binary_coercible(p.prorettype, c.casttarget));
+INFO:  Path param info: 0.000000
  oid | castsource | casttarget | castfunc | castcontext | castmethod 
 -----+------------+------------+----------+-------------+------------
 (0 rows)
@@ -984,6 +1013,7 @@
 WHERE c.castfunc = p.oid AND
     ((p.pronargs > 1 AND p.proargtypes[1] != 'int4'::regtype) OR
      (p.pronargs > 2 AND p.proargtypes[2] != 'bool'::regtype));
+INFO:  Path param info: 0.000000
  oid | castsource | casttarget | castfunc | castcontext | castmethod 
 -----+------------+------------+----------+-------------+------------
 (0 rows)
@@ -1007,6 +1037,7 @@
                 WHERE k.castmethod = 'b' AND
                     k.castsource = c.casttarget AND
                     k.casttarget = c.castsource);
+INFO:  Path param info: 0.000000
     castsource     |    casttarget     | castfunc | castcontext 
 -------------------+-------------------+----------+-------------
  text              | character         |        0 | i
@@ -1044,6 +1075,7 @@
      p.proargtypes[3] != 'internal'::regtype OR
      p.proargtypes[4] != 'int4'::regtype OR
      p.proargtypes[5] != 'bool'::regtype);
+INFO:  Path param info: 0.000000
  oid | proname | oid | conname 
 -----+---------+-----+---------
 (0 rows)
@@ -1094,6 +1126,7 @@
     o1.oprkind = o2.oprkind AND
     o1.oprleft = o2.oprleft AND
     o1.oprright = o2.oprright;
+INFO:  Path param info: 0.000000
  oid | oprcode | oid | oprcode 
 -----+---------+-----+---------
 (0 rows)
@@ -1110,6 +1143,7 @@
      o1.oprright != o2.oprleft OR
      o1.oprresult != o2.oprresult OR
      o1.oid != o2.oprcom);
+INFO:  Path param info: 0.000000
  oid | oprcode | oid | oprcode 
 -----+---------+-----+---------
 (0 rows)
@@ -1131,6 +1165,7 @@
      o2.oprresult != 'bool'::regtype OR
      o1.oid != o2.oprnegate OR
      o1.oid = o2.oid);
+INFO:  Path param info: 0.000000
  oid | oprcode | oid | oprcode 
 -----+---------+-----+---------
 (0 rows)
@@ -1142,6 +1177,8 @@
 FROM pg_operator o1, pg_operator o2
 WHERE o1.oprcom = o2.oid AND o1.oprname <= o2.oprname
 ORDER BY 1, 2;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  op1  | op2  
 ------+------
  #    | #
@@ -1180,6 +1217,8 @@
 FROM pg_operator o1, pg_operator o2
 WHERE o1.oprnegate = o2.oid AND o1.oprname <= o2.oprname
 ORDER BY 1, 2;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  op1  | op2  
 ------+------
  !~   | ~
@@ -1213,6 +1252,7 @@
 WHERE o1.oprcom = o2.oid AND
     (o1.oprcanmerge != o2.oprcanmerge OR
      o1.oprcanhash != o2.oprcanhash);
+INFO:  Path param info: 0.000000
  oid | oprname | oid | oprname 
 -----+---------+-----+---------
 (0 rows)
@@ -1225,6 +1265,7 @@
   (SELECT 1 FROM pg_amop
    WHERE amopmethod = (SELECT oid FROM pg_am WHERE amname = 'btree') AND
          amopopr = o1.oid AND amopstrategy = 3);
+INFO:  Path param info: 0.000000
  oid | oprname 
 -----+---------
 (0 rows)
@@ -1236,6 +1277,7 @@
   AND amopmethod = (SELECT oid FROM pg_am WHERE amname = 'btree')
   AND amopstrategy = 3
   AND NOT o1.oprcanmerge;
+INFO:  Path param info: 0.000000
  oid | oprname | amopfamily 
 -----+---------+------------
 (0 rows)
@@ -1247,6 +1289,7 @@
   (SELECT 1 FROM pg_amop
    WHERE amopmethod = (SELECT oid FROM pg_am WHERE amname = 'hash') AND
          amopopr = o1.oid AND amopstrategy = 1);
+INFO:  Path param info: 0.000000
  oid | oprname 
 -----+---------
 (0 rows)
@@ -1257,6 +1300,7 @@
 WHERE amopopr = o1.oid
   AND amopmethod = (SELECT oid FROM pg_am WHERE amname = 'hash')
   AND NOT o1.oprcanhash;
+INFO:  Path param info: 0.000000
  oid | oprname | amopfamily 
 -----+---------+------------
 (0 rows)
@@ -1271,6 +1315,7 @@
      OR NOT binary_coercible(p1.prorettype, o1.oprresult)
      OR NOT binary_coercible(o1.oprleft, p1.proargtypes[0])
      OR NOT binary_coercible(o1.oprright, p1.proargtypes[1]));
+INFO:  Path param info: 0.000000
  oid | oprname | oid | proname 
 -----+---------+-----+---------
 (0 rows)
@@ -1283,6 +1328,7 @@
      OR NOT binary_coercible(p1.prorettype, o1.oprresult)
      OR NOT binary_coercible(o1.oprright, p1.proargtypes[0])
      OR o1.oprleft != 0);
+INFO:  Path param info: 0.000000
  oid | oprname | oid | proname 
 -----+---------+-----+---------
 (0 rows)
@@ -1294,6 +1340,7 @@
 WHERE o1.oprcode = p1.oid AND
     (o1.oprcanmerge OR o1.oprcanhash) AND
     p1.provolatile = 'v';
+INFO:  Path param info: 0.000000
  oid | oprname | oid | proname 
 -----+---------+-----+---------
 (0 rows)
@@ -1312,6 +1359,7 @@
      p2.proargtypes[1] != 'oid'::regtype OR
      p2.proargtypes[2] != 'internal'::regtype OR
      p2.proargtypes[3] != 'int4'::regtype);
+INFO:  Path param info: 0.000000
  oid | oprname | oid | proname 
 -----+---------+-----+---------
 (0 rows)
@@ -1333,6 +1381,7 @@
      p2.proargtypes[2] != 'internal'::regtype OR
      p2.proargtypes[3] != 'int2'::regtype OR
      p2.proargtypes[4] != 'internal'::regtype);
+INFO:  Path param info: 0.000000
  oid | oprname | oid | proname 
 -----+---------+-----+---------
 (0 rows)
@@ -1342,6 +1391,7 @@
 FROM pg_operator as o1 LEFT JOIN pg_description as d
      ON o1.tableoid = d.classoid and o1.oid = d.objoid and d.objsubid = 0
 WHERE d.classoid IS NULL AND o1.oid <= 9999;
+INFO:  Path param info: 0.000000
  oid | oprname 
 -----+---------
 (0 rows)
@@ -1370,6 +1420,19 @@
   WHERE prodesc IS DISTINCT FROM expecteddesc
     AND oprdesc NOT LIKE 'deprecated%'
     AND prodesc IS DISTINCT FROM oprdesc;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  p_oid | proname | o_oid | prodesc | expecteddesc | oprdesc 
 -------+---------+-------+---------+--------------+---------
 (0 rows)
@@ -1394,6 +1457,19 @@
   WHERE prodesc IS DISTINCT FROM expecteddesc
     AND oprdesc NOT LIKE 'deprecated%'
 ORDER BY 1;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  p_oid |         proname         |                     prodesc                     
 -------+-------------------------+-------------------------------------------------
    378 | array_append            | append element onto end of array
@@ -1414,6 +1490,19 @@
 WHERE o1.oprcom = o2.oid AND p1.oid = o1.oprcode AND p2.oid = o2.oprcode AND
     (p1.provolatile != p2.provolatile OR
      p1.proleakproof != p2.proleakproof);
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  oid | oprcode | oid | oprcode 
 -----+---------+-----+---------
 (0 rows)
@@ -1424,6 +1513,19 @@
 WHERE o1.oprnegate = o2.oid AND p1.oid = o1.oprcode AND p2.oid = o2.oprcode AND
     (p1.provolatile != p2.provolatile OR
      p1.proleakproof != p2.proleakproof);
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  oid | oprcode | oid | oprcode 
 -----+---------+-----+---------
 (0 rows)
@@ -1442,6 +1544,46 @@
     (pp.provolatile != po.provolatile OR
      pp.proleakproof != po.proleakproof)
 ORDER BY 1;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  proc | vp | lp | opr | vo | lo 
 ------+----+----+-----+----+----
 (0 rows)
@@ -1466,6 +1608,7 @@
 FROM pg_aggregate as a, pg_proc as p
 WHERE a.aggfnoid = p.oid AND
     (p.prokind != 'a' OR p.proretset OR p.pronargs < a.aggnumdirectargs);
+INFO:  Path param info: 0.000000
  aggfnoid | proname 
 ----------+---------
 (0 rows)
@@ -1475,6 +1618,7 @@
 FROM pg_proc as p
 WHERE p.prokind = 'a' AND
     NOT EXISTS (SELECT 1 FROM pg_aggregate a WHERE a.aggfnoid = p.oid);
+INFO:  Path param info: 0.000000
  oid | proname 
 -----+---------
 (0 rows)
@@ -1484,6 +1628,7 @@
 FROM pg_aggregate as a, pg_proc as p
 WHERE a.aggfnoid = p.oid AND
     a.aggfinalfn = 0 AND p.prorettype != a.aggtranstype;
+INFO:  Path param info: 0.000000
  aggfnoid | proname 
 ----------+---------
 (0 rows)
@@ -1510,6 +1655,13 @@
      -- we could carry the check further, but 4 args is enough for now
      OR (p.pronargs > 4)
     );
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  aggfnoid | proname | oid | proname 
 ----------+---------+-----+---------
 (0 rows)
@@ -1533,6 +1685,13 @@
      -- we could carry the check further, but 4 args is enough for now
      OR (pfn.pronargs > 4)
     );
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  aggfnoid | proname | oid | proname 
 ----------+---------+-----+---------
 (0 rows)
@@ -1546,6 +1705,10 @@
     a.aggtransfn = ptr.oid AND ptr.proisstrict AND
     a.agginitval IS NULL AND
     NOT binary_coercible(p.proargtypes[0], a.aggtranstype);
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  aggfnoid | proname | oid | proname 
 ----------+---------+-----+---------
 (0 rows)
@@ -1574,6 +1737,7 @@
 WHERE a.aggfnoid = p.oid AND
     a.aggmtransfn != 0 AND
     a.aggmfinalfn = 0 AND p.prorettype != a.aggmtranstype;
+INFO:  Path param info: 0.000000
  aggfnoid | proname 
 ----------+---------
 (0 rows)
@@ -1598,6 +1762,13 @@
      -- we could carry the check further, but 3 args is enough for now
      OR (p.pronargs > 3)
     );
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  aggfnoid | proname | oid | proname 
 ----------+---------+-----+---------
 (0 rows)
@@ -1622,6 +1793,13 @@
      -- we could carry the check further, but 3 args is enough for now
      OR (p.pronargs > 3)
     );
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  aggfnoid | proname | oid | proname 
 ----------+---------+-----+---------
 (0 rows)
@@ -1645,6 +1823,13 @@
      -- we could carry the check further, but 4 args is enough for now
      OR (pfn.pronargs > 4)
     );
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  aggfnoid | proname | oid | proname 
 ----------+---------+-----+---------
 (0 rows)
@@ -1658,6 +1843,10 @@
     a.aggmtransfn = ptr.oid AND ptr.proisstrict AND
     a.aggminitval IS NULL AND
     NOT binary_coercible(p.proargtypes[0], a.aggmtranstype);
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  aggfnoid | proname | oid | proname 
 ----------+---------+-----+---------
 (0 rows)
@@ -1669,6 +1858,19 @@
     a.aggmtransfn = ptr.oid AND
     a.aggminvtransfn = iptr.oid AND
     ptr.proisstrict != iptr.proisstrict;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  aggfnoid | proname | oid | proname | oid | proname 
 ----------+---------+-----+---------+-----+---------
 (0 rows)
@@ -1682,6 +1884,7 @@
      p.prorettype != p.proargtypes[0] OR
      p.prorettype != p.proargtypes[1] OR
      NOT binary_coercible(a.aggtranstype, p.proargtypes[0]));
+INFO:  Path param info: 0.000000
  aggfnoid | proname 
 ----------+---------
 (0 rows)
@@ -1691,6 +1894,7 @@
 FROM pg_aggregate as a, pg_proc as p
 WHERE a.aggcombinefn = p.oid AND
     a.aggtranstype = 'internal'::regtype AND p.proisstrict;
+INFO:  Path param info: 0.000000
  aggfnoid | proname 
 ----------+---------
 (0 rows)
@@ -1716,6 +1920,7 @@
     (p.prorettype != 'bytea'::regtype OR p.pronargs != 1 OR
      p.proargtypes[0] != 'internal'::regtype OR
      NOT p.proisstrict);
+INFO:  Path param info: 0.000000
  aggfnoid | proname 
 ----------+---------
 (0 rows)
@@ -1730,6 +1935,7 @@
      p.proargtypes[0] != 'bytea'::regtype OR
      p.proargtypes[1] != 'internal'::regtype OR
      NOT p.proisstrict);
+INFO:  Path param info: 0.000000
  aggfnoid | proname 
 ----------+---------
 (0 rows)
@@ -1745,6 +1951,7 @@
     a.aggfnoid < b.aggfnoid AND a.aggtransfn = b.aggtransfn AND
     (a.aggcombinefn != b.aggcombinefn OR a.aggserialfn != b.aggserialfn
      OR a.aggdeserialfn != b.aggdeserialfn);
+INFO:  Path param info: 0.000000
  aggfnoid | aggcombinefn | aggserialfn | aggdeserialfn | aggfnoid | aggcombinefn | aggserialfn | aggdeserialfn 
 ----------+--------------+-------------+---------------+----------+--------------+-------------+---------------
 (0 rows)
@@ -1755,6 +1962,12 @@
 FROM pg_operator AS o, pg_aggregate AS a, pg_proc AS p
 WHERE a.aggfnoid = p.oid AND a.aggsortop = o.oid
 ORDER BY 1, 2;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  proname  | oprname 
 ----------+---------
  bool_and | <
@@ -1770,6 +1983,13 @@
 WHERE a.aggfnoid = p.oid AND a.aggsortop = o.oid AND
     (oprkind != 'b' OR oprresult != 'boolean'::regtype
      OR oprleft != p.proargtypes[0] OR oprright != p.proargtypes[0]);
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  aggfnoid | oid 
 ----------+-----
 (0 rows)
@@ -1783,6 +2003,17 @@
                      AND amopopr = o.oid
                      AND amoplefttype = o.oprleft
                      AND amoprighttype = o.oprright);
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  aggfnoid | oid 
 ----------+-----
 (0 rows)
@@ -1795,6 +2026,26 @@
     amopopr = o.oid AND
     amopmethod = (SELECT oid FROM pg_am WHERE amname = 'btree')
 ORDER BY 1, 2;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  proname  | oprname | amopstrategy 
 ----------+---------+--------------
  bool_and | <       |            1
@@ -1818,6 +2069,8 @@
     p1.prokind = 'a' AND p2.prokind = 'a' AND
     array_dims(p1.proargtypes) != array_dims(p2.proargtypes)
 ORDER BY 1;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
      oid      |   oid   
 --------------+---------
  count("any") | count()
@@ -1837,6 +2090,7 @@
 SELECT p.oid, proname
 FROM pg_proc AS p JOIN pg_aggregate AS a ON a.aggfnoid = p.oid
 WHERE prokind = 'a' AND provariadic != 0 AND a.aggkind = 'n';
+INFO:  Path param info: 0.000000
  oid | proname 
 -----+---------
 (0 rows)
@@ -1856,6 +2110,7 @@
 -- get noticed.
 SELECT oid, opfname FROM pg_opfamily f
 WHERE NOT EXISTS (SELECT 1 FROM pg_opclass WHERE opcfamily = f.oid);
+INFO:  Path param info: 0.000000
  oid | opfname 
 -----+---------
 (0 rows)
@@ -1874,6 +2129,7 @@
 SELECT c1.oid, f1.oid
 FROM pg_opclass AS c1, pg_opfamily AS f1
 WHERE c1.opcfamily = f1.oid AND c1.opcmethod != f1.opfmethod;
+INFO:  Path param info: 0.000000
  oid | oid 
 -----+-----
 (0 rows)
@@ -1885,6 +2141,7 @@
 WHERE c1.oid != c2.oid AND
     c1.opcmethod = c2.opcmethod AND c1.opcintype = c2.opcintype AND
     c1.opcdefault AND c2.opcdefault;
+INFO:  Path param info: 0.000000
  oid | oid 
 -----+-----
 (0 rows)
@@ -1913,6 +2170,7 @@
      OR p1.proretset
      OR p1.pronargs != 1
      OR p1.proargtypes[0] != 'internal'::regtype);
+INFO:  Path param info: 0.000000
  oid | amname | oid | proname 
 -----+--------+-----+---------
 (0 rows)
@@ -1925,6 +2183,7 @@
      OR p1.proretset
      OR p1.pronargs != 1
      OR p1.proargtypes[0] != 'internal'::regtype);
+INFO:  Path param info: 0.000000
  oid | amname | oid | proname 
 -----+--------+-----+---------
 (0 rows)
@@ -1951,6 +2210,7 @@
 SELECT a1.oid, f1.oid
 FROM pg_amop AS a1, pg_opfamily AS f1
 WHERE a1.amopfamily = f1.oid AND a1.amopmethod != f1.opfmethod;
+INFO:  Path param info: 0.000000
  oid | oid 
 -----+-----
 (0 rows)
@@ -1962,6 +2222,7 @@
 SELECT DISTINCT amopmethod, amopstrategy, oprname
 FROM pg_amop a1 LEFT JOIN pg_operator o1 ON amopopr = o1.oid
 ORDER BY 1, 2, 3;
+INFO:  Path param info: 0.000000
  amopmethod | amopstrategy | oprname 
 ------------+--------------+---------
         403 |            1 | *<
@@ -2097,6 +2358,7 @@
 FROM pg_amop AS a1, pg_operator AS o1
 WHERE a1.amopopr = o1.oid AND a1.amoppurpose = 's' AND
     (o1.oprrest = 0 OR o1.oprjoin = 0);
+INFO:  Path param info: 0.000000
  amopfamily | amopopr | oid | oprname 
 ------------+---------+-----+---------
 (0 rows)
@@ -2108,6 +2370,7 @@
 WHERE NOT EXISTS(SELECT 1 FROM pg_amop AS a1
                  WHERE a1.amopfamily = c1.opcfamily
                    AND binary_coercible(c1.opcintype, a1.amoplefttype));
+INFO:  Path param info: 0.000000
  opcname | opcfamily 
 ---------+-----------
 (0 rows)
@@ -2123,6 +2386,7 @@
 WHERE NOT EXISTS(SELECT 1 FROM pg_opclass AS c1
                  WHERE c1.opcfamily = a1.amopfamily
                    AND binary_coercible(c1.opcintype, a1.amoplefttype));
+INFO:  Path param info: 0.000000
  amopfamily | amopstrategy | amopopr 
 ------------+--------------+---------
 (0 rows)
@@ -2136,6 +2400,10 @@
 WHERE a1.amopopr = o1.oid AND o1.oprcode = p1.oid AND
     a1.amoplefttype = a1.amoprighttype AND
     p1.provolatile != 'i';
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  amopfamily | amopopr | oprname | prosrc 
 ------------+---------+---------+--------
 (0 rows)
@@ -2145,6 +2413,10 @@
 WHERE a1.amopopr = o1.oid AND o1.oprcode = p1.oid AND
     a1.amoplefttype != a1.amoprighttype AND
     p1.provolatile = 'v';
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  amopfamily | amopopr | oprname | prosrc 
 ------------+---------+---------+--------
 (0 rows)
@@ -2168,6 +2440,7 @@
 WHERE a1.amproc = p1.oid AND
     a1.amproclefttype = a1.amprocrighttype AND
     p1.provolatile != 'i';
+INFO:  Path param info: 0.000000
  amprocfamily | amproc | prosrc 
 --------------+--------+--------
 (0 rows)
@@ -2177,6 +2450,7 @@
 WHERE a1.amproc = p1.oid AND
     a1.amproclefttype != a1.amprocrighttype AND
     p1.provolatile = 'v';
+INFO:  Path param info: 0.000000
  amprocfamily | amproc | prosrc 
 --------------+--------+--------
 (0 rows)
@@ -2199,6 +2473,15 @@
 WHERE am.amname = 'btree' AND
     amp.amproc IS DISTINCT FROM 'btequalimage'::regproc
 ORDER BY 1, 2, 3;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
         proc        |  opfamily_name   |   opclass_name   |    opcintype     
 --------------------+------------------+------------------+------------------
  btvarstrequalimage | bpchar_ops       | bpchar_ops       | character
@@ -2250,6 +2533,12 @@
       pg_opclass opc
 WHERE a.attrelid = indrelid AND a.attnum = ikey AND opc.oid = iclass AND
       (NOT binary_coercible(atttypid, opcintype) OR icoll != attcollation);
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  indexrelid | indrelid | attname | atttypid | opcname 
 ------------+----------+---------+----------+---------
 (0 rows)
@@ -2267,6 +2556,12 @@
 WHERE a.attrelid = indrelid AND a.attnum = ikey AND opc.oid = iclass AND
       (opcintype != atttypid OR icoll != attcollation)
 ORDER BY 1;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
         indexrelid        |   indrelid   | attname  | atttypid | opcname 
 --------------------------+--------------+----------+----------+---------
  pg_aggregate_fnoid_index | pg_aggregate | aggfnoid | regproc  | oid_ops
@@ -2283,6 +2578,7 @@
     c.relkind != 'v' AND  -- we don't care about columns in views
     attcollation != 0 AND
     attcollation != (SELECT oid FROM pg_collation WHERE collname = 'C');
+INFO:  Path param info: 0.000000
  relname | attname | attcollation 
 ---------+---------+--------------
 (0 rows)
diff -U3 /home/dbs/pg-queryplans/postgres/src/test/regress/expected/misc_sanity.out /home/dbs/pg-queryplans/postgres/src/test/regress/results/misc_sanity.out
--- /home/dbs/pg-queryplans/postgres/src/test/regress/expected/misc_sanity.out	2024-02-20 13:16:25.963611345 +0900
+++ /home/dbs/pg-queryplans/postgres/src/test/regress/results/misc_sanity.out	2024-02-20 16:07:30.716041743 +0900
@@ -47,6 +47,8 @@
       relkind = 'r' AND
       attstorage != 'p'
 ORDER BY 1, 2;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
          relname         |    attname    |   atttypid   
 -------------------------+---------------+--------------
  pg_attribute            | attacl        | aclitem[]
@@ -85,6 +87,8 @@
       AND i.indisunique
       AND c.oid NOT IN (SELECT conindid FROM pg_constraint)
 ORDER BY 1;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  relname 
 ---------
 (0 rows)
diff -U3 /home/dbs/pg-queryplans/postgres/src/test/regress/expected/expressions.out /home/dbs/pg-queryplans/postgres/src/test/regress/results/expressions.out
--- /home/dbs/pg-queryplans/postgres/src/test/regress/expected/expressions.out	2024-02-20 13:16:25.959611416 +0900
+++ /home/dbs/pg-queryplans/postgres/src/test/regress/results/expressions.out	2024-02-20 16:07:30.728041567 +0900
@@ -127,6 +127,11 @@
     f2, f2::numeric(16,4) as f2164, f2::numeric as f2n
   from numeric_tbl;
 \d+ numeric_view
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                            View "public.numeric_view"
  Column |     Type      | Collation | Nullable | Default | Storage | Description 
 --------+---------------+-----------+----------+---------+---------+-------------
@@ -161,6 +166,11 @@
     f2, f2::character(14) as f214, f2::bpchar as f2n
   from bpchar_tbl;
 \d+ bpchar_view
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                             View "public.bpchar_view"
  Column |     Type      | Collation | Nullable | Default | Storage  | Description 
 --------+---------------+-----------+----------+---------+----------+-------------
diff -U3 /home/dbs/pg-queryplans/postgres/src/test/regress/expected/xid.out /home/dbs/pg-queryplans/postgres/src/test/regress/results/xid.out
--- /home/dbs/pg-queryplans/postgres/src/test/regress/expected/xid.out	2024-02-20 13:16:25.979611060 +0900
+++ /home/dbs/pg-queryplans/postgres/src/test/regress/results/xid.out	2024-02-20 16:07:30.724041627 +0900
@@ -306,6 +306,7 @@
 select id, pg_visible_in_snapshot(id::text::xid8, snap)
 from snapshot_test, generate_series(11, 21) id
 where nr = 2;
+INFO:  Path param info: 0.000000
  id | pg_visible_in_snapshot 
 ----+------------------------
  11 | t
@@ -325,6 +326,7 @@
 select id, pg_visible_in_snapshot(id::text::xid8, snap)
 from snapshot_test, generate_series(90, 160) id
 where nr = 4;
+INFO:  Path param info: 0.000000
  id  | pg_visible_in_snapshot 
 -----+------------------------
   90 | t
diff -U3 /home/dbs/pg-queryplans/postgres/src/test/regress/expected/copyselect.out /home/dbs/pg-queryplans/postgres/src/test/regress/results/copyselect.out
--- /home/dbs/pg-queryplans/postgres/src/test/regress/expected/copyselect.out	2024-02-20 13:16:25.955611488 +0900
+++ /home/dbs/pg-queryplans/postgres/src/test/regress/results/copyselect.out	2024-02-20 16:07:30.904038998 +0900
@@ -63,6 +63,7 @@
 -- Test JOIN
 --
 copy (select * from test1 join test2 using (id)) to stdout;
+INFO:  Path param info: 0.000000
 1	a	A
 2	b	B
 3	c	C
diff -U3 /home/dbs/pg-queryplans/postgres/src/test/regress/expected/insert.out /home/dbs/pg-queryplans/postgres/src/test/regress/results/insert.out
--- /home/dbs/pg-queryplans/postgres/src/test/regress/expected/insert.out	2024-02-20 13:16:25.963611345 +0900
+++ /home/dbs/pg-queryplans/postgres/src/test/regress/results/insert.out	2024-02-20 16:07:30.996037656 +0900
@@ -163,6 +163,25 @@
   insert into inserttest (f4[1].if1, f4[1].if2[2])
   select new.f1, new.f2;
 \d+ inserttest2
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                 Table "public.inserttest2"
  Column |  Type  | Collation | Nullable | Default | Storage  | Stats target | Description 
 --------+--------+-----------+----------+---------+----------+--------------+-------------
@@ -447,6 +466,28 @@
 -- test \d+ output on a table which has both partitioned and unpartitioned
 -- partitions
 \d+ list_parted
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                           Partitioned table "public.list_parted"
  Column |  Type   | Collation | Nullable | Default | Storage  | Stats target | Description 
 --------+---------+-----------+----------+---------+----------+--------------+-------------
@@ -469,6 +510,26 @@
 create table list_parted (a int) partition by list (a);
 create table part_default partition of list_parted default;
 \d+ part_default
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                Table "public.part_default"
  Column |  Type   | Collation | Nullable | Default | Storage | Stats target | Description 
 --------+---------+-----------+----------+---------+---------+--------------+-------------
@@ -852,6 +913,28 @@
 create table mcrparted7_gt_common_lt_d partition of mcrparted for values from ('common', maxvalue) to ('d', minvalue);
 create table mcrparted8_ge_d partition of mcrparted for values from ('d', minvalue) to (maxvalue, maxvalue);
 \d+ mcrparted
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                            Partitioned table "public.mcrparted"
  Column |  Type   | Collation | Nullable | Default | Storage  | Stats target | Description 
 --------+---------+-----------+----------+---------+----------+--------------+-------------
@@ -868,6 +951,26 @@
             mcrparted8_ge_d FOR VALUES FROM ('d', MINVALUE) TO (MAXVALUE, MAXVALUE)
 
 \d+ mcrparted1_lt_b
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                               Table "public.mcrparted1_lt_b"
  Column |  Type   | Collation | Nullable | Default | Storage  | Stats target | Description 
 --------+---------+-----------+----------+---------+----------+--------------+-------------
@@ -877,6 +980,26 @@
 Partition constraint: ((a IS NOT NULL) AND (b IS NOT NULL) AND (a < 'b'::text))
 
 \d+ mcrparted2_b
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                 Table "public.mcrparted2_b"
  Column |  Type   | Collation | Nullable | Default | Storage  | Stats target | Description 
 --------+---------+-----------+----------+---------+----------+--------------+-------------
@@ -886,6 +1009,26 @@
 Partition constraint: ((a IS NOT NULL) AND (b IS NOT NULL) AND (a >= 'b'::text) AND (a < 'c'::text))
 
 \d+ mcrparted3_c_to_common
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                            Table "public.mcrparted3_c_to_common"
  Column |  Type   | Collation | Nullable | Default | Storage  | Stats target | Description 
 --------+---------+-----------+----------+---------+----------+--------------+-------------
@@ -895,6 +1038,26 @@
 Partition constraint: ((a IS NOT NULL) AND (b IS NOT NULL) AND (a >= 'c'::text) AND (a < 'common'::text))
 
 \d+ mcrparted4_common_lt_0
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                            Table "public.mcrparted4_common_lt_0"
  Column |  Type   | Collation | Nullable | Default | Storage  | Stats target | Description 
 --------+---------+-----------+----------+---------+----------+--------------+-------------
@@ -904,6 +1067,26 @@
 Partition constraint: ((a IS NOT NULL) AND (b IS NOT NULL) AND (a = 'common'::text) AND (b < 0))
 
 \d+ mcrparted5_common_0_to_10
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                          Table "public.mcrparted5_common_0_to_10"
  Column |  Type   | Collation | Nullable | Default | Storage  | Stats target | Description 
 --------+---------+-----------+----------+---------+----------+--------------+-------------
@@ -913,6 +1096,26 @@
 Partition constraint: ((a IS NOT NULL) AND (b IS NOT NULL) AND (a = 'common'::text) AND (b >= 0) AND (b < 10))
 
 \d+ mcrparted6_common_ge_10
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                           Table "public.mcrparted6_common_ge_10"
  Column |  Type   | Collation | Nullable | Default | Storage  | Stats target | Description 
 --------+---------+-----------+----------+---------+----------+--------------+-------------
@@ -922,6 +1125,26 @@
 Partition constraint: ((a IS NOT NULL) AND (b IS NOT NULL) AND (a = 'common'::text) AND (b >= 10))
 
 \d+ mcrparted7_gt_common_lt_d
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                          Table "public.mcrparted7_gt_common_lt_d"
  Column |  Type   | Collation | Nullable | Default | Storage  | Stats target | Description 
 --------+---------+-----------+----------+---------+----------+--------------+-------------
@@ -931,6 +1154,26 @@
 Partition constraint: ((a IS NOT NULL) AND (b IS NOT NULL) AND (a > 'common'::text) AND (a < 'd'::text))
 
 \d+ mcrparted8_ge_d
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                               Table "public.mcrparted8_ge_d"
  Column |  Type   | Collation | Nullable | Default | Storage  | Stats target | Description 
 --------+---------+-----------+----------+---------+----------+--------------+-------------
diff -U3 /home/dbs/pg-queryplans/postgres/src/test/regress/expected/create_procedure.out /home/dbs/pg-queryplans/postgres/src/test/regress/results/create_procedure.out
--- /home/dbs/pg-queryplans/postgres/src/test/regress/expected/create_procedure.out	2024-02-20 13:16:25.955611488 +0900
+++ /home/dbs/pg-queryplans/postgres/src/test/regress/results/create_procedure.out	2024-02-20 16:07:31.028037189 +0900
@@ -16,6 +16,7 @@
 INSERT INTO cp_test VALUES (1, x);
 $$;
 \df ptest1
+INFO:  Path param info: 0.000000
                         List of functions
  Schema |  Name  | Result data type | Argument data types | Type 
 --------+--------+------------------+---------------------+------
@@ -35,6 +36,8 @@
 
 -- show only normal functions
 \dfn public.*test*1
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                            List of functions
  Schema |     Name     | Result data type | Argument data types | Type 
 --------+--------------+------------------+---------------------+------
@@ -43,6 +46,8 @@
 
 -- show only procedures
 \dfp public.*test*1
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                         List of functions
  Schema |  Name  | Result data type | Argument data types | Type 
 --------+--------+------------------+---------------------+------
@@ -72,6 +77,7 @@
   INSERT INTO cp_test VALUES (1, x);
 END;
 \df ptest1s
+INFO:  Path param info: 0.000000
                         List of functions
  Schema |  Name   | Result data type | Argument data types | Type 
 --------+---------+------------------+---------------------+------
@@ -193,6 +199,7 @@
 BEGIN ATOMIC
 END;
 \df ptest8
+INFO:  Path param info: 0.000000
                         List of functions
  Schema |  Name  | Result data type | Argument data types | Type 
 --------+--------+------------------+---------------------+------
@@ -282,6 +289,7 @@
 CREATE PROCEDURE ptest10(IN a int, IN b int, IN c int)
 LANGUAGE SQL AS $$ SELECT a + b - c $$;
 \df ptest10
+INFO:  Path param info: 0.000000
                                    List of functions
  Schema |  Name   | Result data type |            Argument data types            | Type 
 --------+---------+------------------+-------------------------------------------+------
@@ -297,6 +305,7 @@
 begin;
 drop procedure ptest10(out int, int, int);
 \df ptest10
+INFO:  Path param info: 0.000000
                                    List of functions
  Schema |  Name   | Result data type |           Argument data types            | Type 
 --------+---------+------------------+------------------------------------------+------
@@ -308,6 +317,7 @@
 begin;
 drop procedure ptest10(in int, int, int);
 \df ptest10
+INFO:  Path param info: 0.000000
                                    List of functions
  Schema |  Name   | Result data type |            Argument data types            | Type 
 --------+---------+------------------+-------------------------------------------+------
diff -U3 /home/dbs/pg-queryplans/postgres/src/test/regress/expected/create_table.out /home/dbs/pg-queryplans/postgres/src/test/regress/results/create_table.out
--- /home/dbs/pg-queryplans/postgres/src/test/regress/expected/create_table.out	2024-02-20 13:16:25.955611488 +0900
+++ /home/dbs/pg-queryplans/postgres/src/test/regress/results/create_table.out	2024-02-20 16:07:31.132035671 +0900
@@ -282,6 +282,26 @@
 ERROR:  cannot inherit from partitioned table "partitioned2"
 -- Partition key in describe output
 \d partitioned
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
       Partitioned table "public.partitioned"
  Column |  Type   | Collation | Nullable | Default 
 --------+---------+-----------+----------+---------
@@ -293,6 +313,28 @@
 Number of partitions: 0
 
 \d+ partitioned2
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                           Partitioned table "public.partitioned2"
  Column |  Type   | Collation | Nullable | Default | Storage  | Stats target | Description 
 --------+---------+-----------+----------+---------+----------+--------------+-------------
@@ -306,6 +348,26 @@
 DETAIL:  Partition key of the failing row contains ((a + 1), substr(b, 1, 5)) = (2, hello).
 CREATE TABLE part2_1 PARTITION OF partitioned2 FOR VALUES FROM (-1, 'aaaaa') TO (100, 'ccccc');
 \d+ part2_1
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                   Table "public.part2_1"
  Column |  Type   | Collation | Nullable | Default | Storage  | Stats target | Description 
 --------+---------+-----------+----------+---------+----------+--------------+-------------
@@ -347,6 +409,26 @@
 (2 rows)
 
 \d+ partitioned1
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                Table "public.partitioned1"
  Column |  Type   | Collation | Nullable | Default | Storage | Stats target | Description 
 --------+---------+-----------+----------+---------+---------+--------------+-------------
@@ -404,6 +486,28 @@
 CREATE TABLE part_p3 PARTITION OF list_parted FOR VALUES IN ((2+1));
 CREATE TABLE part_null PARTITION OF list_parted FOR VALUES IN (null);
 \d+ list_parted
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                           Partitioned table "public.list_parted"
  Column |  Type   | Collation | Nullable | Default | Storage | Stats target | Description 
 --------+---------+-----------+----------+---------+---------+--------------+-------------
@@ -813,6 +917,24 @@
 DETAIL:  Failing row contains (1, null).
 -- note that while b's default is overridden, a's default is preserved
 \d parted_notnull_inh_test1
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
       Table "public.parted_notnull_inh_test1"
  Column |  Type   | Collation | Nullable | Default 
 --------+---------+-----------+----------+---------
@@ -852,6 +974,26 @@
 drop table test_part_coll_posix;
 -- Partition bound in describe output
 \d+ part_b
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                    Table "public.part_b"
  Column |  Type   | Collation | Nullable | Default | Storage  | Stats target | Description 
 --------+---------+-----------+----------+---------+----------+--------------+-------------
@@ -862,6 +1004,29 @@
 
 -- Both partition bound and partition key in describe output
 \d+ part_c
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                              Partitioned table "public.part_c"
  Column |  Type   | Collation | Nullable | Default | Storage  | Stats target | Description 
 --------+---------+-----------+----------+---------+----------+--------------+-------------
@@ -874,6 +1039,26 @@
 
 -- a level-2 partition's constraint will include the parent's expressions
 \d+ part_c_1_10
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                 Table "public.part_c_1_10"
  Column |  Type   | Collation | Nullable | Default | Storage  | Stats target | Description 
 --------+---------+-----------+----------+---------+----------+--------------+-------------
@@ -887,6 +1072,26 @@
 -- output could vary depending on the order in which partition oids are
 -- returned.
 \d parted
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
          Partitioned table "public.parted"
  Column |  Type   | Collation | Nullable | Default 
 --------+---------+-----------+----------+---------
@@ -896,6 +1101,26 @@
 Number of partitions: 3 (Use \d+ to list them.)
 
 \d hash_parted
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
       Partitioned table "public.hash_parted"
  Column |  Type   | Collation | Nullable | Default 
 --------+---------+-----------+----------+---------
@@ -907,6 +1132,26 @@
 CREATE TABLE range_parted4 (a int, b int, c int) PARTITION BY RANGE (abs(a), abs(b), c);
 CREATE TABLE unbounded_range_part PARTITION OF range_parted4 FOR VALUES FROM (MINVALUE, MINVALUE, MINVALUE) TO (MAXVALUE, MAXVALUE, MAXVALUE);
 \d+ unbounded_range_part
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                            Table "public.unbounded_range_part"
  Column |  Type   | Collation | Nullable | Default | Storage | Stats target | Description 
 --------+---------+-----------+----------+---------+---------+--------------+-------------
@@ -919,6 +1164,26 @@
 DROP TABLE unbounded_range_part;
 CREATE TABLE range_parted4_1 PARTITION OF range_parted4 FOR VALUES FROM (MINVALUE, MINVALUE, MINVALUE) TO (1, MAXVALUE, MAXVALUE);
 \d+ range_parted4_1
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                               Table "public.range_parted4_1"
  Column |  Type   | Collation | Nullable | Default | Storage | Stats target | Description 
 --------+---------+-----------+----------+---------+---------+--------------+-------------
@@ -930,6 +1195,26 @@
 
 CREATE TABLE range_parted4_2 PARTITION OF range_parted4 FOR VALUES FROM (3, 4, 5) TO (6, 7, MAXVALUE);
 \d+ range_parted4_2
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                               Table "public.range_parted4_2"
  Column |  Type   | Collation | Nullable | Default | Storage | Stats target | Description 
 --------+---------+-----------+----------+---------+---------+--------------+-------------
@@ -941,6 +1226,26 @@
 
 CREATE TABLE range_parted4_3 PARTITION OF range_parted4 FOR VALUES FROM (6, 8, MINVALUE) TO (9, MAXVALUE, MAXVALUE);
 \d+ range_parted4_3
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                               Table "public.range_parted4_3"
  Column |  Type   | Collation | Nullable | Default | Storage | Stats target | Description 
 --------+---------+-----------+----------+---------+---------+--------------+-------------
@@ -978,6 +1283,28 @@
 (1 row)
 
 \d+ parted_col_comment
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                         Partitioned table "public.parted_col_comment"
  Column |  Type   | Collation | Nullable | Default | Storage  | Stats target |  Description  
 --------+---------+-----------+----------+---------+----------+--------------+---------------
@@ -995,6 +1322,26 @@
 CREATE TABLE arrlp (a int[]) PARTITION BY LIST (a);
 CREATE TABLE arrlp12 PARTITION OF arrlp FOR VALUES IN ('{1}', '{2}');
 \d+ arrlp12
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                    Table "public.arrlp12"
  Column |   Type    | Collation | Nullable | Default | Storage  | Stats target | Description 
 --------+-----------+-----------+----------+---------+----------+--------------+-------------
@@ -1008,6 +1355,28 @@
 create table boolspart_t partition of boolspart for values in (true);
 create table boolspart_f partition of boolspart for values in (false);
 \d+ boolspart
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                            Partitioned table "public.boolspart"
  Column |  Type   | Collation | Nullable | Default | Storage | Stats target | Description 
 --------+---------+-----------+----------+---------+---------+--------------+-------------
@@ -1089,6 +1458,38 @@
 create table part_column_drop_1_10 partition of
   part_column_drop for values from (1) to (10);
 \d part_column_drop
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
     Partitioned table "public.part_column_drop"
  Column |  Type   | Collation | Nullable | Default 
 --------+---------+-----------+----------+---------
@@ -1104,6 +1505,36 @@
 Number of partitions: 1 (Use \d+ to list them.)
 
 \d part_column_drop_1_10
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
        Table "public.part_column_drop_1_10"
  Column |  Type   | Collation | Nullable | Default 
 --------+---------+-----------+----------+---------
diff -U3 /home/dbs/pg-queryplans/postgres/src/test/regress/expected/create_schema.out /home/dbs/pg-queryplans/postgres/src/test/regress/results/create_schema.out
--- /home/dbs/pg-queryplans/postgres/src/test/regress/expected/create_schema.out	2024-02-20 13:16:25.955611488 +0900
+++ /home/dbs/pg-queryplans/postgres/src/test/regress/results/create_schema.out	2024-02-20 16:07:31.024037247 +0900
@@ -63,6 +63,24 @@
 CREATE SCHEMA AUTHORIZATION regress_create_schema_role
   CREATE TABLE regress_create_schema_role.tab (id int);
 \d regress_create_schema_role.tab
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
       Table "regress_create_schema_role.tab"
  Column |  Type   | Collation | Nullable | Default 
 --------+---------+-----------+----------+---------
@@ -75,6 +93,24 @@
 CREATE SCHEMA AUTHORIZATION CURRENT_ROLE
   CREATE TABLE regress_create_schema_role.tab (id int);
 \d regress_create_schema_role.tab
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
       Table "regress_create_schema_role.tab"
  Column |  Type   | Collation | Nullable | Default 
 --------+---------+-----------+----------+---------
@@ -86,6 +122,24 @@
 CREATE SCHEMA regress_schema_1 AUTHORIZATION CURRENT_ROLE
   CREATE TABLE regress_schema_1.tab (id int);
 \d regress_schema_1.tab
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
            Table "regress_schema_1.tab"
  Column |  Type   | Collation | Nullable | Default 
 --------+---------+-----------+----------+---------
diff -U3 /home/dbs/pg-queryplans/postgres/src/test/regress/expected/create_index.out /home/dbs/pg-queryplans/postgres/src/test/regress/results/create_index.out
--- /home/dbs/pg-queryplans/postgres/src/test/regress/expected/create_index.out	2024-02-20 13:16:25.955611488 +0900
+++ /home/dbs/pg-queryplans/postgres/src/test/regress/results/create_index.out	2024-02-20 16:07:31.408031643 +0900
@@ -1198,6 +1198,18 @@
 CREATE INDEX gin_relopts_test ON array_index_op_test USING gin (i)
   WITH (FASTUPDATE=on, GIN_PENDING_LIST_LIMIT=128);
 \d+ gin_relopts_test
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                 Index "public.gin_relopts_test"
  Column |  Type   | Key? | Definition | Storage | Stats target 
 --------+---------+------+------------+---------+--------------
@@ -1260,6 +1272,35 @@
 DELETE FROM unique_tbl WHERE t = 'seven';
 CREATE UNIQUE INDEX unique_idx4 ON unique_tbl (i) NULLS NOT DISTINCT;  -- ok now
 \d unique_tbl
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
              Table "public.unique_tbl"
  Column |  Type   | Collation | Nullable | Default 
 --------+---------+-----------+----------+---------
@@ -1270,6 +1311,16 @@
     "unique_idx4" UNIQUE, btree (i) NULLS NOT DISTINCT
 
 \d unique_idx3
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
       Index "public.unique_idx3"
  Column |  Type   | Key? | Definition 
 --------+---------+------+------------
@@ -1277,6 +1328,16 @@
 unique, btree, for table "public.unique_tbl"
 
 \d unique_idx4
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
       Index "public.unique_idx4"
  Column |  Type   | Key? | Definition 
 --------+---------+------+------------
@@ -1312,6 +1373,35 @@
 INSERT INTO func_index_heap VALUES('QWERTY');
 -- while we're here, see that the metadata looks sane
 \d func_index_heap
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
          Table "public.func_index_heap"
  Column | Type | Collation | Nullable | Default 
 --------+------+-----------+----------+---------
@@ -1321,6 +1411,16 @@
     "func_index_index" UNIQUE, btree (textcat(f1, f2))
 
 \d func_index_index
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
      Index "public.func_index_index"
  Column  | Type | Key? |   Definition    
 ---------+------+------+-----------------
@@ -1344,6 +1444,35 @@
 INSERT INTO func_index_heap VALUES('QWERTY');
 -- while we're here, see that the metadata looks sane
 \d func_index_heap
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
          Table "public.func_index_heap"
  Column | Type | Collation | Nullable | Default 
 --------+------+-----------+----------+---------
@@ -1353,6 +1482,16 @@
     "func_index_index" UNIQUE, btree ((f1 || f2))
 
 \d func_index_index
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
   Index "public.func_index_index"
  Column | Type | Key? | Definition 
 --------+------+------+------------
@@ -1439,6 +1578,35 @@
 DELETE FROM concur_heap WHERE f1 = 'b';
 VACUUM FULL concur_heap;
 \d concur_heap
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
            Table "public.concur_heap"
  Column | Type | Collation | Nullable | Default 
 --------+------+-----------+----------+---------
@@ -1455,6 +1623,35 @@
 
 REINDEX TABLE concur_heap;
 \d concur_heap
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
            Table "public.concur_heap"
  Column | Type | Collation | Nullable | Default 
 --------+------+-----------+----------+---------
@@ -1514,6 +1711,35 @@
 DROP INDEX CONCURRENTLY "concur_index1";
 DROP INDEX CONCURRENTLY "concur_heap_expr_idx";
 \d concur_heap
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
            Table "public.concur_heap"
  Column | Type | Collation | Nullable | Default 
 --------+------+-----------+----------+---------
@@ -1532,6 +1758,35 @@
 CREATE UNIQUE INDEX cwi_uniq_idx ON cwi_test(a , b);
 ALTER TABLE cwi_test ADD primary key USING INDEX cwi_uniq_idx;
 \d cwi_test
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                      Table "public.cwi_test"
  Column |         Type          | Collation | Nullable | Default 
 --------+-----------------------+-----------+----------+---------
@@ -1542,6 +1797,16 @@
     "cwi_uniq_idx" PRIMARY KEY, btree (a, b)
 
 \d cwi_uniq_idx
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
             Index "public.cwi_uniq_idx"
  Column |         Type          | Key? | Definition 
 --------+-----------------------+------+------------
@@ -1555,6 +1820,35 @@
 		USING INDEX cwi_uniq2_idx;
 NOTICE:  ALTER TABLE / ADD CONSTRAINT USING INDEX will rename index "cwi_uniq2_idx" to "cwi_replaced_pkey"
 \d cwi_test
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                      Table "public.cwi_test"
  Column |         Type          | Collation | Nullable | Default 
 --------+-----------------------+-----------+----------+---------
@@ -1565,6 +1859,16 @@
     "cwi_replaced_pkey" PRIMARY KEY, btree (b, a)
 
 \d cwi_replaced_pkey
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
           Index "public.cwi_replaced_pkey"
  Column |         Type          | Key? | Definition 
 --------+-----------------------+------+------------
@@ -2207,6 +2511,35 @@
   USING gist (k tsvector_ops (siglen='300'), j tsvector_ops);
 REINDEX TABLE CONCURRENTLY concur_appclass_tab;
 \d concur_appclass_tab
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
          Table "public.concur_appclass_tab"
  Column |   Type   | Collation | Nullable | Default 
 --------+----------+-----------+----------+---------
@@ -2414,6 +2747,7 @@
   $func$ LANGUAGE plpgsql;
 --  Check that expected relfilenodes are changed, non-concurrent case.
 SELECT create_relfilenode_part('reindex_index_status', 'concur_reindex_part_index');
+INFO:  Path param info: 0.000000
  create_relfilenode_part 
 -------------------------
  
@@ -2421,6 +2755,8 @@
 
 REINDEX INDEX concur_reindex_part_index;
 SELECT * FROM compare_relfilenode_part('reindex_index_status');
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
             relname            | relkind |          state           
 -------------------------------+---------+--------------------------
  concur_reindex_part_index     | I       | relfilenode is unchanged
@@ -2433,6 +2769,7 @@
 DROP TABLE reindex_index_status;
 -- concurrent case.
 SELECT create_relfilenode_part('reindex_index_status', 'concur_reindex_part_index');
+INFO:  Path param info: 0.000000
  create_relfilenode_part 
 -------------------------
  
@@ -2440,6 +2777,8 @@
 
 REINDEX INDEX CONCURRENTLY concur_reindex_part_index;
 SELECT * FROM compare_relfilenode_part('reindex_index_status');
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
             relname            | relkind |          state           
 -------------------------------+---------+--------------------------
  concur_reindex_part_index     | I       | relfilenode is unchanged
@@ -2471,6 +2810,7 @@
 -- Check that expected relfilenodes are changed, non-concurrent case.
 -- Note that the partition tree changes of the *indexes* need to be checked.
 SELECT create_relfilenode_part('reindex_index_status', 'concur_reindex_part_index');
+INFO:  Path param info: 0.000000
  create_relfilenode_part 
 -------------------------
  
@@ -2478,6 +2818,8 @@
 
 REINDEX TABLE concur_reindex_part;
 SELECT * FROM compare_relfilenode_part('reindex_index_status');
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
             relname            | relkind |          state           
 -------------------------------+---------+--------------------------
  concur_reindex_part_index     | I       | relfilenode is unchanged
@@ -2490,6 +2832,7 @@
 DROP TABLE reindex_index_status;
 -- concurrent case.
 SELECT create_relfilenode_part('reindex_index_status', 'concur_reindex_part_index');
+INFO:  Path param info: 0.000000
  create_relfilenode_part 
 -------------------------
  
@@ -2497,6 +2840,8 @@
 
 REINDEX TABLE CONCURRENTLY concur_reindex_part;
 SELECT * FROM compare_relfilenode_part('reindex_index_status');
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
             relname            | relkind |          state           
 -------------------------------+---------+--------------------------
  concur_reindex_part_index     | I       | relfilenode is unchanged
@@ -2540,6 +2885,40 @@
 ERROR:  can only reindex the currently open database
 -- Check the relation status, there should not be invalid indexes
 \d concur_reindex_tab
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
          Table "public.concur_reindex_tab"
  Column |  Type   | Collation | Nullable | Default 
 --------+---------+-----------+----------+---------
@@ -2568,6 +2947,35 @@
 ERROR:  could not create unique index "concur_reindex_ind5_ccnew"
 DETAIL:  Key (c1)=(1) is duplicated.
 \d concur_reindex_tab4
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
         Table "public.concur_reindex_tab4"
  Column |  Type   | Collation | Nullable | Default 
 --------+---------+-----------+----------+---------
@@ -2584,6 +2992,35 @@
 WARNING:  cannot reindex invalid index "public.concur_reindex_ind5" concurrently, skipping
 NOTICE:  table "concur_reindex_tab4" has no indexes that can be reindexed concurrently
 \d concur_reindex_tab4
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
         Table "public.concur_reindex_tab4"
  Column |  Type   | Collation | Nullable | Default 
 --------+---------+-----------+----------+---------
@@ -2594,6 +3031,35 @@
 -- But it is fixed with REINDEX INDEX.
 REINDEX INDEX CONCURRENTLY concur_reindex_ind5;
 \d concur_reindex_tab4
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
         Table "public.concur_reindex_tab4"
  Column |  Type   | Collation | Nullable | Default 
 --------+---------+-----------+----------+---------
@@ -2753,6 +3219,7 @@
         ELSE 'relfilenode has changed' END
   FROM reindex_temp_before b JOIN pg_class a ON b.oid = a.oid
   ORDER BY 1;
+INFO:  Path param info: 0.000000
       relname      | relkind |          case           
 -------------------+---------+-------------------------
  concur_temp_ind_1 | i       | relfilenode has changed
@@ -2783,11 +3250,16 @@
 SELECT oid, 'pg_toast_TABLE', relfilenode, relkind, reltoastrelid
 FROM pg_class WHERE oid IN
 	(SELECT reltoastrelid FROM reindex_before WHERE reltoastrelid > 0);
+INFO:  Path param info: 0.000000
 INSERT INTO reindex_before
 SELECT oid, 'pg_toast_TABLE_index', relfilenode, relkind, reltoastrelid
 FROM pg_class where oid in
 	(select indexrelid from pg_index where indrelid in
 		(select reltoastrelid from reindex_before where reltoastrelid > 0));
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
 REINDEX SCHEMA schema_to_reindex;
 CREATE TABLE reindex_after AS SELECT oid, relname, relfilenode, relkind
 	FROM pg_class
@@ -2798,6 +3270,7 @@
         ELSE 'relfilenode has changed' END
   FROM reindex_before b JOIN pg_class a ON b.oid = a.oid
   ORDER BY 1;
+INFO:  Path param info: 0.000000
        relname        | relkind |           case           
 ----------------------+---------+--------------------------
  matview              | m       | relfilenode is unchanged
diff -U3 /home/dbs/pg-queryplans/postgres/src/test/regress/expected/create_index_spgist.out /home/dbs/pg-queryplans/postgres/src/test/regress/results/create_index_spgist.out
--- /home/dbs/pg-queryplans/postgres/src/test/regress/expected/create_index_spgist.out	2024-02-20 13:16:25.955611488 +0900
+++ /home/dbs/pg-queryplans/postgres/src/test/regress/results/create_index_spgist.out	2024-02-20 16:07:31.316032984 +0900
@@ -342,6 +342,7 @@
 SELECT * FROM quad_point_tbl_ord_seq1 seq FULL JOIN quad_point_tbl_ord_idx1 idx
 ON seq.n = idx.n
 WHERE seq.dist IS DISTINCT FROM idx.dist;
+INFO:  Path param info: 0.000000
  n | dist | p | n | dist | p 
 ---+------+---+---+------+---
 (0 rows)
@@ -363,6 +364,7 @@
 SELECT * FROM quad_point_tbl_ord_seq2 seq FULL JOIN quad_point_tbl_ord_idx2 idx
 ON seq.n = idx.n
 WHERE seq.dist IS DISTINCT FROM idx.dist;
+INFO:  Path param info: 0.000000
  n | dist | p | n | dist | p 
 ---+------+---+---+------+---
 (0 rows)
@@ -384,6 +386,7 @@
 SELECT * FROM quad_point_tbl_ord_seq3 seq FULL JOIN quad_point_tbl_ord_idx3 idx
 ON seq.n = idx.n
 WHERE seq.dist IS DISTINCT FROM idx.dist;
+INFO:  Path param info: 0.000000
  n | dist | p | n | dist | p 
 ---+------+---+---+------+---
 (0 rows)
@@ -509,6 +512,7 @@
 SELECT * FROM quad_point_tbl_ord_seq1 seq FULL JOIN kd_point_tbl_ord_idx1 idx
 ON seq.n = idx.n
 WHERE seq.dist IS DISTINCT FROM idx.dist;
+INFO:  Path param info: 0.000000
  n | dist | p | n | dist | p 
 ---+------+---+---+------+---
 (0 rows)
@@ -530,6 +534,7 @@
 SELECT * FROM quad_point_tbl_ord_seq2 seq FULL JOIN kd_point_tbl_ord_idx2 idx
 ON seq.n = idx.n
 WHERE seq.dist IS DISTINCT FROM idx.dist;
+INFO:  Path param info: 0.000000
  n | dist | p | n | dist | p 
 ---+------+---+---+------+---
 (0 rows)
@@ -551,6 +556,7 @@
 SELECT * FROM quad_point_tbl_ord_seq3 seq FULL JOIN kd_point_tbl_ord_idx3 idx
 ON seq.n = idx.n
 WHERE seq.dist IS DISTINCT FROM idx.dist;
+INFO:  Path param info: 0.000000
  n | dist | p | n | dist | p 
 ---+------+---+---+------+---
 (0 rows)
diff -U3 /home/dbs/pg-queryplans/postgres/src/test/regress/expected/create_view.out /home/dbs/pg-queryplans/postgres/src/test/regress/results/create_view.out
--- /home/dbs/pg-queryplans/postgres/src/test/regress/expected/create_view.out	2024-02-20 13:16:25.955611488 +0900
+++ /home/dbs/pg-queryplans/postgres/src/test/regress/results/create_view.out	2024-02-20 16:07:31.228034269 +0900
@@ -193,6 +193,8 @@
     WHERE relname LIKE 'v%'
     AND relnamespace IN (SELECT oid FROM pg_namespace WHERE nspname LIKE 'pg_temp%')
     ORDER BY relname;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  relname  
 ----------
  v10_temp
@@ -242,6 +244,7 @@
     WHERE relname LIKE 'temporal%'
     AND relnamespace IN (SELECT oid FROM pg_namespace WHERE nspname LIKE 'pg_temp%')
     ORDER BY relname;
+INFO:  Path param info: 0.000000
   relname  
 -----------
  temporal1
@@ -261,6 +264,7 @@
 AND EXISTS (SELECT g FROM tbl4 LEFT JOIN tbl3 ON tbl4.h = tbl3.f);
 SELECT count(*) FROM pg_class where relname = 'pubview'
 AND relnamespace IN (SELECT OID FROM pg_namespace WHERE nspname = 'testviewschm2');
+INFO:  Path param info: 0.000000
  count 
 -------
      1
@@ -274,6 +278,7 @@
 NOTICE:  view "mytempview" will be a temporary view
 SELECT count(*) FROM pg_class where relname LIKE 'mytempview'
 And relnamespace IN (SELECT OID FROM pg_namespace WHERE nspname LIKE 'pg_temp%');
+INFO:  Path param info: 0.000000
  count 
 -------
      1
@@ -358,6 +363,11 @@
 CREATE VIEW unspecified_types AS
   SELECT 42 as i, 42.5 as num, 'foo' as u, 'foo'::unknown as u2, null as n;
 \d+ unspecified_types
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                    View "testviewschm2.unspecified_types"
  Column |  Type   | Collation | Nullable | Default | Storage  | Description 
 --------+---------+-----------+----------+---------+----------+-------------
@@ -387,6 +397,11 @@
        ('0123456789', 'abc'::varchar(3), 42.12, 'abc'::varchar(4))
   ) vv(a,b,c,d);
 \d+ tt1
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                 View "testviewschm2.tt1"
  Column |         Type         | Collation | Nullable | Default | Storage  | Description 
 --------+----------------------+-----------+----------+---------+----------+-------------
@@ -433,6 +448,11 @@
   select * from temp_view_test.tt1
     where exists (select 1 from tt1 where temp_view_test.tt1.y1 = tt1.f1);
 \d+ aliased_view_1
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                     View "testviewschm2.aliased_view_1"
  Column |  Type   | Collation | Nullable | Default | Storage  | Description 
 --------+---------+-----------+----------+---------+----------+-------------
@@ -449,6 +469,11 @@
           WHERE tt1.f1 = tx1.x1));
 
 \d+ aliased_view_2
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                     View "testviewschm2.aliased_view_2"
  Column |  Type   | Collation | Nullable | Default | Storage  | Description 
 --------+---------+-----------+----------+---------+----------+-------------
@@ -465,6 +490,11 @@
           WHERE a1.f1 = tx1.x1));
 
 \d+ aliased_view_3
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                     View "testviewschm2.aliased_view_3"
  Column |  Type   | Collation | Nullable | Default | Storage  | Description 
 --------+---------+-----------+----------+---------+----------+-------------
@@ -481,6 +511,11 @@
           WHERE tt1.f1 = a2.x1));
 
 \d+ aliased_view_4
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                     View "testviewschm2.aliased_view_4"
  Column |  Type   | Collation | Nullable | Default | Storage  | Description 
 --------+---------+-----------+----------+---------+----------+-------------
@@ -498,6 +533,11 @@
 
 ALTER TABLE tx1 RENAME TO a1;
 \d+ aliased_view_1
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                     View "testviewschm2.aliased_view_1"
  Column |  Type   | Collation | Nullable | Default | Storage  | Description 
 --------+---------+-----------+----------+---------+----------+-------------
@@ -514,6 +554,11 @@
           WHERE tt1.f1 = a1.x1));
 
 \d+ aliased_view_2
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                     View "testviewschm2.aliased_view_2"
  Column |  Type   | Collation | Nullable | Default | Storage  | Description 
 --------+---------+-----------+----------+---------+----------+-------------
@@ -530,6 +575,11 @@
           WHERE a1.f1 = a1_1.x1));
 
 \d+ aliased_view_3
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                     View "testviewschm2.aliased_view_3"
  Column |  Type   | Collation | Nullable | Default | Storage  | Description 
 --------+---------+-----------+----------+---------+----------+-------------
@@ -546,6 +596,11 @@
           WHERE tt1.f1 = a2.x1));
 
 \d+ aliased_view_4
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                     View "testviewschm2.aliased_view_4"
  Column |  Type   | Collation | Nullable | Default | Storage  | Description 
 --------+---------+-----------+----------+---------+----------+-------------
@@ -563,6 +618,11 @@
 
 ALTER TABLE tt1 RENAME TO a2;
 \d+ aliased_view_1
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                     View "testviewschm2.aliased_view_1"
  Column |  Type   | Collation | Nullable | Default | Storage  | Description 
 --------+---------+-----------+----------+---------+----------+-------------
@@ -579,6 +639,11 @@
           WHERE a2.f1 = a1.x1));
 
 \d+ aliased_view_2
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                     View "testviewschm2.aliased_view_2"
  Column |  Type   | Collation | Nullable | Default | Storage  | Description 
 --------+---------+-----------+----------+---------+----------+-------------
@@ -595,6 +660,11 @@
           WHERE a1.f1 = a1_1.x1));
 
 \d+ aliased_view_3
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                     View "testviewschm2.aliased_view_3"
  Column |  Type   | Collation | Nullable | Default | Storage  | Description 
 --------+---------+-----------+----------+---------+----------+-------------
@@ -611,6 +681,11 @@
           WHERE a2.f1 = a2_1.x1));
 
 \d+ aliased_view_4
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                     View "testviewschm2.aliased_view_4"
  Column |  Type   | Collation | Nullable | Default | Storage  | Description 
 --------+---------+-----------+----------+---------+----------+-------------
@@ -628,6 +703,11 @@
 
 ALTER TABLE a1 RENAME TO tt1;
 \d+ aliased_view_1
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                     View "testviewschm2.aliased_view_1"
  Column |  Type   | Collation | Nullable | Default | Storage  | Description 
 --------+---------+-----------+----------+---------+----------+-------------
@@ -644,6 +724,11 @@
           WHERE a2.f1 = tt1.x1));
 
 \d+ aliased_view_2
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                     View "testviewschm2.aliased_view_2"
  Column |  Type   | Collation | Nullable | Default | Storage  | Description 
 --------+---------+-----------+----------+---------+----------+-------------
@@ -660,6 +745,11 @@
           WHERE a1.f1 = tt1.x1));
 
 \d+ aliased_view_3
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                     View "testviewschm2.aliased_view_3"
  Column |  Type   | Collation | Nullable | Default | Storage  | Description 
 --------+---------+-----------+----------+---------+----------+-------------
@@ -676,6 +766,11 @@
           WHERE a2.f1 = a2_1.x1));
 
 \d+ aliased_view_4
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                     View "testviewschm2.aliased_view_4"
  Column |  Type   | Collation | Nullable | Default | Storage  | Description 
 --------+---------+-----------+----------+---------+----------+-------------
@@ -694,6 +789,11 @@
 ALTER TABLE a2 RENAME TO tx1;
 ALTER TABLE tx1 SET SCHEMA temp_view_test;
 \d+ aliased_view_1
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                     View "testviewschm2.aliased_view_1"
  Column |  Type   | Collation | Nullable | Default | Storage  | Description 
 --------+---------+-----------+----------+---------+----------+-------------
@@ -710,6 +810,11 @@
           WHERE tx1.f1 = tt1.x1));
 
 \d+ aliased_view_2
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                     View "testviewschm2.aliased_view_2"
  Column |  Type   | Collation | Nullable | Default | Storage  | Description 
 --------+---------+-----------+----------+---------+----------+-------------
@@ -726,6 +831,11 @@
           WHERE a1.f1 = tt1.x1));
 
 \d+ aliased_view_3
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                     View "testviewschm2.aliased_view_3"
  Column |  Type   | Collation | Nullable | Default | Storage  | Description 
 --------+---------+-----------+----------+---------+----------+-------------
@@ -742,6 +852,11 @@
           WHERE tx1.f1 = a2.x1));
 
 \d+ aliased_view_4
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                     View "testviewschm2.aliased_view_4"
  Column |  Type   | Collation | Nullable | Default | Storage  | Description 
 --------+---------+-----------+----------+---------+----------+-------------
@@ -761,6 +876,11 @@
 ALTER TABLE temp_view_test.tmp1 SET SCHEMA testviewschm2;
 ALTER TABLE tmp1 RENAME TO tx1;
 \d+ aliased_view_1
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                     View "testviewschm2.aliased_view_1"
  Column |  Type   | Collation | Nullable | Default | Storage  | Description 
 --------+---------+-----------+----------+---------+----------+-------------
@@ -777,6 +897,11 @@
           WHERE tx1.f1 = tt1.x1));
 
 \d+ aliased_view_2
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                     View "testviewschm2.aliased_view_2"
  Column |  Type   | Collation | Nullable | Default | Storage  | Description 
 --------+---------+-----------+----------+---------+----------+-------------
@@ -793,6 +918,11 @@
           WHERE a1.f1 = tt1.x1));
 
 \d+ aliased_view_3
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                     View "testviewschm2.aliased_view_3"
  Column |  Type   | Collation | Nullable | Default | Storage  | Description 
 --------+---------+-----------+----------+---------+----------+-------------
@@ -809,6 +939,11 @@
           WHERE tx1.f1 = a2.x1));
 
 \d+ aliased_view_4
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                     View "testviewschm2.aliased_view_4"
  Column |  Type   | Collation | Nullable | Default | Storage  | Description 
 --------+---------+-----------+----------+---------+----------+-------------
@@ -830,6 +965,11 @@
   (select * from (tbl1 cross join tbl2) same) ss,
   (tbl3 cross join tbl4) same;
 \d+ view_of_joins
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                     View "testviewschm2.view_of_joins"
  Column |  Type   | Collation | Nullable | Default | Storage | Description 
 --------+---------+-----------+----------+---------+---------+-------------
@@ -1826,6 +1966,11 @@
 create rule updlog as on update to tt15v do also
   insert into tt15v_log values(old, new, row(old,old) < row(new,new));
 \d+ tt15v
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                              View "testviewschm2.tt15v"
  Column |      Type       | Collation | Nullable | Default | Storage  | Description 
 --------+-----------------+-----------+----------+---------+----------+-------------
@@ -2141,6 +2286,7 @@
 -- also check cases seen only in EXPLAIN
 explain (verbose, costs off)
 select * from tt24v;
+INFO:  Path param info: 0.000000
                                         QUERY PLAN                                        
 ------------------------------------------------------------------------------------------
  Hash Join
diff -U3 /home/dbs/pg-queryplans/postgres/src/test/regress/expected/index_including.out /home/dbs/pg-queryplans/postgres/src/test/regress/results/index_including.out
--- /home/dbs/pg-queryplans/postgres/src/test/regress/expected/index_including.out	2024-02-20 13:16:25.959611416 +0900
+++ /home/dbs/pg-queryplans/postgres/src/test/regress/results/index_including.out	2024-02-20 16:07:31.188034853 +0900
@@ -13,6 +13,8 @@
 SELECT pg_get_indexdef(i.indexrelid)
 FROM pg_index i JOIN pg_class c ON i.indexrelid = c.oid
 WHERE i.indrelid = 'tbl_include_reg'::regclass ORDER BY c.relname;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                                 pg_get_indexdef                                                
 ---------------------------------------------------------------------------------------------------------------
  CREATE INDEX tbl_include_reg_c1_c2_c11_c3_idx ON public.tbl_include_reg USING btree (c1, c2) INCLUDE (c1, c3)
@@ -20,6 +22,16 @@
 (2 rows)
 
 \d tbl_include_reg_idx
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
   Index "public.tbl_include_reg_idx"
  Column |  Type   | Key? | Definition 
 --------+---------+------+------------
@@ -38,6 +50,8 @@
 SELECT pg_get_indexdef(i.indexrelid)
 FROM pg_index i JOIN pg_class c ON i.indexrelid = c.oid
 WHERE i.indrelid = 'tbl_include_unique1'::regclass ORDER BY c.relname;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                                        pg_get_indexdef                                                       
 -----------------------------------------------------------------------------------------------------------------------------
  CREATE UNIQUE INDEX tbl_include_unique1_c1_c2_c3_c4_key ON public.tbl_include_unique1 USING btree (c1, c2) INCLUDE (c3, c4)
@@ -60,6 +74,8 @@
 SELECT pg_get_indexdef(i.indexrelid)
 FROM pg_index i JOIN pg_class c ON i.indexrelid = c.oid
 WHERE i.indrelid = 'tbl_include_pk'::regclass ORDER BY c.relname;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                             pg_get_indexdef                                             
 --------------------------------------------------------------------------------------------------------
  CREATE UNIQUE INDEX tbl_include_pk_pkey ON public.tbl_include_pk USING btree (c1, c2) INCLUDE (c3, c4)
@@ -72,6 +88,8 @@
 SELECT pg_get_indexdef(i.indexrelid)
 FROM pg_index i JOIN pg_class c ON i.indexrelid = c.oid
 WHERE i.indrelid = 'tbl_include_box'::regclass ORDER BY c.relname;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                                 pg_get_indexdef                                                 
 ----------------------------------------------------------------------------------------------------------------
  CREATE UNIQUE INDEX tbl_include_box_idx_unique ON public.tbl_include_box USING btree (c1, c2) INCLUDE (c3, c4)
@@ -233,6 +251,13 @@
 CREATE TABLE tbl (c1 int,c2 int, c3 int, c4 int);
 CREATE UNIQUE INDEX tbl_idx ON tbl using btree(c1, c2, c3, c4);
 SELECT indexdef FROM pg_indexes WHERE tablename = 'tbl' ORDER BY indexname;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                 indexdef                                
 ------------------------------------------------------------------------
  CREATE UNIQUE INDEX tbl_idx ON public.tbl USING btree (c1, c2, c3, c4)
@@ -240,6 +265,13 @@
 
 ALTER TABLE tbl DROP COLUMN c3;
 SELECT indexdef FROM pg_indexes WHERE tablename = 'tbl' ORDER BY indexname;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  indexdef 
 ----------
 (0 rows)
@@ -253,6 +285,13 @@
 CREATE TABLE tbl (c1 int,c2 int, c3 int, c4 box);
 CREATE UNIQUE INDEX tbl_idx ON tbl using btree(c1, c2) INCLUDE(c3,c4);
 SELECT indexdef FROM pg_indexes WHERE tablename = 'tbl' ORDER BY indexname;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                     indexdef                                     
 ---------------------------------------------------------------------------------
  CREATE UNIQUE INDEX tbl_idx ON public.tbl USING btree (c1, c2) INCLUDE (c3, c4)
@@ -260,6 +299,13 @@
 
 ALTER TABLE tbl DROP COLUMN c3;
 SELECT indexdef FROM pg_indexes WHERE tablename = 'tbl' ORDER BY indexname;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  indexdef 
 ----------
 (0 rows)
@@ -272,6 +318,13 @@
  */
 CREATE TABLE tbl (c1 int,c2 int, c3 int, c4 box, UNIQUE(c1, c2) INCLUDE(c3,c4));
 SELECT indexdef FROM pg_indexes WHERE tablename = 'tbl' ORDER BY indexname;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                           indexdef                                           
 ---------------------------------------------------------------------------------------------
  CREATE UNIQUE INDEX tbl_c1_c2_c3_c4_key ON public.tbl USING btree (c1, c2) INCLUDE (c3, c4)
@@ -279,12 +332,26 @@
 
 ALTER TABLE tbl DROP COLUMN c3;
 SELECT indexdef FROM pg_indexes WHERE tablename = 'tbl' ORDER BY indexname;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  indexdef 
 ----------
 (0 rows)
 
 ALTER TABLE tbl DROP COLUMN c1;
 SELECT indexdef FROM pg_indexes WHERE tablename = 'tbl' ORDER BY indexname;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  indexdef 
 ----------
 (0 rows)
@@ -311,6 +378,13 @@
 INSERT INTO tbl SELECT x, 2*x, 3*x, box('4,4,4,4') FROM generate_series(1,1000) AS x;
 CREATE UNIQUE INDEX CONCURRENTLY on tbl (c1, c2) INCLUDE (c3, c4);
 SELECT indexdef FROM pg_indexes WHERE tablename = 'tbl' ORDER BY indexname;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                           indexdef                                           
 ---------------------------------------------------------------------------------------------
  CREATE UNIQUE INDEX tbl_c1_c2_c3_c4_idx ON public.tbl USING btree (c1, c2) INCLUDE (c3, c4)
@@ -323,6 +397,13 @@
  */
 CREATE TABLE tbl (c1 int,c2 int, c3 int, c4 box, UNIQUE(c1, c2) INCLUDE(c3,c4));
 SELECT indexdef FROM pg_indexes WHERE tablename = 'tbl' ORDER BY indexname;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                           indexdef                                           
 ---------------------------------------------------------------------------------------------
  CREATE UNIQUE INDEX tbl_c1_c2_c3_c4_key ON public.tbl USING btree (c1, c2) INCLUDE (c3, c4)
@@ -330,6 +411,13 @@
 
 ALTER TABLE tbl DROP COLUMN c3;
 SELECT indexdef FROM pg_indexes WHERE tablename = 'tbl' ORDER BY indexname;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  indexdef 
 ----------
 (0 rows)
@@ -337,12 +425,26 @@
 REINDEX INDEX tbl_c1_c2_c3_c4_key;
 ERROR:  relation "tbl_c1_c2_c3_c4_key" does not exist
 SELECT indexdef FROM pg_indexes WHERE tablename = 'tbl' ORDER BY indexname;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  indexdef 
 ----------
 (0 rows)
 
 ALTER TABLE tbl DROP COLUMN c1;
 SELECT indexdef FROM pg_indexes WHERE tablename = 'tbl' ORDER BY indexname;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  indexdef 
 ----------
 (0 rows)
@@ -387,6 +489,35 @@
 ALTER TABLE tbl ALTER c1 TYPE bigint;
 ALTER TABLE tbl ALTER c3 TYPE bigint;
 \d tbl
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                 Table "public.tbl"
  Column |  Type   | Collation | Nullable | Default 
 --------+---------+-----------+----------+---------
diff -U3 /home/dbs/pg-queryplans/postgres/src/test/regress/expected/index_including_gist.out /home/dbs/pg-queryplans/postgres/src/test/regress/results/index_including_gist.out
--- /home/dbs/pg-queryplans/postgres/src/test/regress/expected/index_including_gist.out	2024-02-20 13:16:25.959611416 +0900
+++ /home/dbs/pg-queryplans/postgres/src/test/regress/results/index_including_gist.out	2024-02-20 16:07:31.228034269 +0900
@@ -9,6 +9,8 @@
 SELECT pg_get_indexdef(i.indexrelid)
 FROM pg_index i JOIN pg_class c ON i.indexrelid = c.oid
 WHERE i.indrelid = 'tbl_gist'::regclass ORDER BY c.relname;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                   pg_get_indexdef                                  
 -----------------------------------------------------------------------------------
  CREATE INDEX tbl_gist_idx ON public.tbl_gist USING gist (c4) INCLUDE (c1, c2, c3)
@@ -44,6 +46,8 @@
 SELECT pg_get_indexdef(i.indexrelid)
 FROM pg_index i JOIN pg_class c ON i.indexrelid = c.oid
 WHERE i.indrelid = 'tbl_gist'::regclass ORDER BY c.relname;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                   pg_get_indexdef                                  
 -----------------------------------------------------------------------------------
  CREATE INDEX tbl_gist_idx ON public.tbl_gist USING gist (c4) INCLUDE (c1, c2, c3)
@@ -75,6 +79,13 @@
 INSERT INTO tbl_gist SELECT x, 2*x, 3*x, box(point(x,x+1),point(2*x,2*x+1)) FROM generate_series(1,10) AS x;
 CREATE INDEX CONCURRENTLY tbl_gist_idx ON tbl_gist using gist (c4) INCLUDE (c1,c2,c3);
 SELECT indexdef FROM pg_indexes WHERE tablename = 'tbl_gist' ORDER BY indexname;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                      indexdef                                      
 -----------------------------------------------------------------------------------
  CREATE INDEX tbl_gist_idx ON public.tbl_gist USING gist (c4) INCLUDE (c1, c2, c3)
@@ -88,6 +99,13 @@
 INSERT INTO tbl_gist SELECT x, 2*x, 3*x, box(point(x,x+1),point(2*x,2*x+1)) FROM generate_series(1,10) AS x;
 CREATE INDEX tbl_gist_idx ON tbl_gist using gist (c4) INCLUDE (c1,c3);
 SELECT indexdef FROM pg_indexes WHERE tablename = 'tbl_gist' ORDER BY indexname;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                    indexdef                                    
 -------------------------------------------------------------------------------
  CREATE INDEX tbl_gist_idx ON public.tbl_gist USING gist (c4) INCLUDE (c1, c3)
@@ -95,6 +113,13 @@
 
 REINDEX INDEX tbl_gist_idx;
 SELECT indexdef FROM pg_indexes WHERE tablename = 'tbl_gist' ORDER BY indexname;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                    indexdef                                    
 -------------------------------------------------------------------------------
  CREATE INDEX tbl_gist_idx ON public.tbl_gist USING gist (c4) INCLUDE (c1, c3)
@@ -102,6 +127,13 @@
 
 ALTER TABLE tbl_gist DROP COLUMN c1;
 SELECT indexdef FROM pg_indexes WHERE tablename = 'tbl_gist' ORDER BY indexname;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  indexdef 
 ----------
 (0 rows)
@@ -126,6 +158,35 @@
 ALTER TABLE tbl_gist ALTER c1 TYPE bigint;
 ALTER TABLE tbl_gist ALTER c3 TYPE bigint;
 \d tbl_gist
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
               Table "public.tbl_gist"
  Column |  Type   | Collation | Nullable | Default 
 --------+---------+-----------+----------+---------
@@ -153,6 +214,35 @@
 (2 rows)
 
 \d tbl_gist
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
               Table "public.tbl_gist"
  Column |  Type   | Collation | Nullable | Default 
 --------+---------+-----------+----------+---------
diff -U3 /home/dbs/pg-queryplans/postgres/src/test/regress/expected/create_aggregate.out /home/dbs/pg-queryplans/postgres/src/test/regress/results/create_aggregate.out
--- /home/dbs/pg-queryplans/postgres/src/test/regress/expected/create_aggregate.out	2024-02-20 13:16:25.955611488 +0900
+++ /home/dbs/pg-queryplans/postgres/src/test/regress/results/create_aggregate.out	2024-02-20 16:07:31.436031233 +0900
@@ -112,6 +112,7 @@
 alter aggregate my_rank(VARIADIC "any" ORDER BY VARIADIC "any")
   rename to test_rank;
 \da test_*
+INFO:  Path param info: 0.000000
                                        List of aggregate functions
  Schema |         Name         | Result data type |          Argument data types           | Description 
 --------+----------------------+------------------+----------------------------------------+-------------
diff -U3 /home/dbs/pg-queryplans/postgres/src/test/regress/expected/create_function_sql.out /home/dbs/pg-queryplans/postgres/src/test/regress/results/create_function_sql.out
--- /home/dbs/pg-queryplans/postgres/src/test/regress/expected/create_function_sql.out	2024-02-20 13:16:25.955611488 +0900
+++ /home/dbs/pg-queryplans/postgres/src/test/regress/results/create_function_sql.out	2024-02-20 16:07:31.464030824 +0900
@@ -471,6 +471,73 @@
     FROM information_schema.parameters JOIN information_schema.routines USING (specific_schema, specific_name)
     WHERE routine_schema = 'temp_func_test' AND routine_name ~ '^functest_is_'
     ORDER BY 1, 2;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  routine_name  | ordinal_position | parameter_name | parameter_default 
 ---------------+------------------+----------------+-------------------
  functest_is_1 |                1 | a              | 
@@ -507,6 +574,71 @@
   WHERE r0.routine_schema = 'temp_func_test' AND
         r1.routine_schema = 'temp_func_test'
   ORDER BY 1, 2;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
   routine_name  |  routine_name  
 ----------------+----------------
  functest_is_4b | functest_is_4a
@@ -515,6 +647,22 @@
 SELECT routine_name, sequence_name FROM information_schema.routine_sequence_usage
   WHERE routine_schema = 'temp_func_test'
   ORDER BY 1, 2;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  routine_name  | sequence_name 
 ---------------+---------------
  functest_is_5 | functest1
@@ -524,6 +672,53 @@
 SELECT routine_name, table_name, column_name FROM information_schema.routine_column_usage
   WHERE routine_schema = 'temp_func_test'
   ORDER BY 1, 2;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  routine_name  | table_name | column_name 
 ---------------+------------+-------------
  functest_is_7 | functest2  | a
@@ -532,6 +727,22 @@
 SELECT routine_name, table_name FROM information_schema.routine_table_usage
   WHERE routine_schema = 'temp_func_test'
   ORDER BY 1, 2;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  routine_name  | table_name 
 ---------------+------------
  functest_is_7 | functest2
diff -U3 /home/dbs/pg-queryplans/postgres/src/test/regress/expected/constraints.out /home/dbs/pg-queryplans/postgres/src/test/regress/results/constraints.out
--- /home/dbs/pg-queryplans/postgres/src/test/regress/expected/constraints.out	2024-02-20 13:16:25.955611488 +0900
+++ /home/dbs/pg-queryplans/postgres/src/test/regress/results/constraints.out	2024-02-20 16:07:31.476030650 +0900
@@ -619,6 +619,7 @@
     CONSTRAINT dummy_constr CHECK (true)
 );
 ALTER TABLE parted_fk_naming ATTACH PARTITION parted_fk_naming_1 FOR VALUES IN ('1');
+INFO:  Path param info: -1.000000
 SELECT conname FROM pg_constraint WHERE conrelid = 'parted_fk_naming_1'::regclass AND contype = 'f';
             conname             
 --------------------------------
diff -U3 /home/dbs/pg-queryplans/postgres/src/test/regress/expected/triggers.out /home/dbs/pg-queryplans/postgres/src/test/regress/results/triggers.out
--- /home/dbs/pg-queryplans/postgres/src/test/regress/expected/triggers.out	2024-02-20 13:16:25.975611131 +0900
+++ /home/dbs/pg-queryplans/postgres/src/test/regress/results/triggers.out	2024-02-20 16:07:31.720027087 +0900
@@ -128,6 +128,17 @@
   FROM information_schema.triggers
   WHERE event_object_table in ('pkeys', 'fkeys', 'fkeys2')
   ORDER BY trigger_name COLLATE "C", 2;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
         trigger_name        | event_manipulation | event_object_schema | event_object_table | action_order | action_condition | action_orientation | action_timing | action_reference_old_table | action_reference_new_table 
 ----------------------------+--------------------+---------------------+--------------------+--------------+------------------+--------------------+---------------+----------------------------+----------------------------
  check_fkeys2_fkey_restrict | DELETE             | public              | fkeys2             |            1 |                  | ROW                | BEFORE        |                            | 
@@ -515,6 +526,19 @@
   FROM information_schema.triggers
   WHERE event_object_table IN ('main_table')
   ORDER BY trigger_name COLLATE "C", 2;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
      trigger_name     | event_manipulation | event_object_schema | event_object_table | action_order |        action_condition        | action_orientation | action_timing | action_reference_old_table | action_reference_new_table 
 ----------------------+--------------------+---------------------+--------------------+--------------+--------------------------------+--------------------+---------------+----------------------------+----------------------------
  after_ins_stmt_trig  | INSERT             | public              | main_table         |            1 |                                | STATEMENT          | AFTER         |                            | 
@@ -1251,6 +1275,11 @@
 \set QUIET true
 -- Describe view should list triggers
 \d main_view
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
               View "public.main_view"
  Column |  Type   | Collation | Nullable | Default 
 --------+---------+-----------+----------+---------
@@ -1271,6 +1300,13 @@
 DROP TRIGGER instead_of_insert_trig ON main_view;
 DROP TRIGGER instead_of_delete_trig ON main_view;
 \d+ main_view
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                           View "public.main_view"
  Column |  Type   | Collation | Nullable | Default | Storage | Description 
 --------+---------+-----------+----------+---------+---------+-------------
@@ -1424,11 +1460,14 @@
 INSERT 0 1
 -- UPDATE .. RETURNING
 UPDATE city_view SET country_name = 'Japon' WHERE city_name = 'Tokyo'; -- error
+INFO:  Path param info: 0.000000
 ERROR:  No such country: "Japon"
 CONTEXT:  PL/pgSQL function city_update() line 9 at RAISE
 UPDATE city_view SET country_name = 'Japan' WHERE city_name = 'Takyo'; -- no match
+INFO:  Path param info: 0.000000
 UPDATE 0
 UPDATE city_view SET country_name = 'Japan' WHERE city_name = 'Tokyo' RETURNING *; -- OK
+INFO:  Path param info: 0.000000
  city_id | city_name | population | country_name | continent 
 ---------+-----------+------------+--------------+-----------
        1 | Tokyo     |            | Japan        | Asia
@@ -1436,6 +1475,7 @@
 
 UPDATE 1
 UPDATE city_view SET population = 13010279 WHERE city_name = 'Tokyo' RETURNING *;
+INFO:  Path param info: 0.000000
  city_id | city_name | population | country_name | continent 
 ---------+-----------+------------+--------------+-----------
        1 | Tokyo     |   13010279 | Japan        | Asia
@@ -1443,6 +1483,7 @@
 
 UPDATE 1
 UPDATE city_view SET country_name = 'UK' WHERE city_name = 'New York' RETURNING *;
+INFO:  Path param info: 0.000000
  city_id | city_name | population | country_name | continent 
 ---------+-----------+------------+--------------+-----------
   123456 | New York  |            | UK           | Europe
@@ -1450,6 +1491,7 @@
 
 UPDATE 1
 UPDATE city_view SET country_name = 'USA', population = 8391881 WHERE city_name = 'New York' RETURNING *;
+INFO:  Path param info: 0.000000
  city_id | city_name | population | country_name |   continent   
 ---------+-----------+------------+--------------+---------------
   123456 | New York  |    8391881 | USA          | North America
@@ -1457,6 +1499,7 @@
 
 UPDATE 1
 UPDATE city_view SET continent = 'EU' WHERE continent = 'Europe' RETURNING *;
+INFO:  Path param info: 0.000000
  city_id | city_name  | population | country_name | continent 
 ---------+------------+------------+--------------+-----------
   234567 | Birmingham |    1016800 | UK           | Europe
@@ -1465,6 +1508,11 @@
 UPDATE 1
 UPDATE city_view v1 SET country_name = v2.country_name FROM city_view v2
     WHERE v2.city_name = 'Birmingham' AND v1.city_name = 'London' RETURNING *;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  city_id | city_name | population | country_name | continent | city_id | city_name  | population | country_name | continent 
 ---------+-----------+------------+--------------+-----------+---------+------------+------------+--------------+-----------
        2 | London    |    7556900 | UK           | Europe    |  234567 | Birmingham |    1016800 | UK           | Europe
@@ -1473,6 +1521,7 @@
 UPDATE 1
 -- DELETE .. RETURNING
 DELETE FROM city_view WHERE city_name = 'Birmingham' RETURNING *;
+INFO:  Path param info: 0.000000
  city_id | city_name  | population | country_name | continent 
 ---------+------------+------------+--------------+-----------
   234567 | Birmingham |    1016800 | UK           | Europe
@@ -1484,6 +1533,7 @@
 CREATE VIEW european_city_view AS
     SELECT * FROM city_view WHERE continent = 'Europe';
 SELECT count(*) FROM european_city_view;
+INFO:  Path param info: 0.000000
  count 
 -------
      1
@@ -1497,8 +1547,10 @@
 INSERT INTO european_city_view VALUES (0, 'x', 10000, 'y', 'z');
 INSERT 0 0
 UPDATE european_city_view SET population = 10000;
+INFO:  Path param info: 0.000000
 UPDATE 0
 DELETE FROM european_city_view;
+INFO:  Path param info: 0.000000
 DELETE 0
 \set QUIET true
 -- rules bypassing no-op triggers
@@ -1527,12 +1579,29 @@
 INSERT 0 1
 UPDATE european_city_view SET country_name = 'UK'
     WHERE city_name = 'Cambridge';
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
 UPDATE 0
 DELETE FROM european_city_view WHERE city_name = 'Cambridge';
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
 DELETE 0
 -- UPDATE and DELETE via rule and trigger
 UPDATE city_view SET country_name = 'UK'
     WHERE city_name = 'Cambridge' RETURNING *;
+INFO:  Path param info: 0.000000
  city_id | city_name | population | country_name | continent 
 ---------+-----------+------------+--------------+-----------
        4 | Cambridge |            | UK           | Europe
@@ -1541,6 +1610,14 @@
 UPDATE 1
 UPDATE european_city_view SET population = 122800
     WHERE city_name = 'Cambridge' RETURNING *;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  city_id | city_name | population | country_name | continent 
 ---------+-----------+------------+--------------+-----------
        4 | Cambridge |     122800 | UK           | Europe
@@ -1548,6 +1625,14 @@
 
 UPDATE 1
 DELETE FROM european_city_view WHERE city_name = 'Cambridge' RETURNING *;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  city_id | city_name | population | country_name | continent 
 ---------+-----------+------------+--------------+-----------
        4 | Cambridge |     122800 | UK           | Europe
@@ -1561,6 +1646,15 @@
     AND v.city_id = ci.city_id AND v.country_name = co.country_name
     RETURNING co.country_id, v.country_name,
               v.city_id, v.city_name, v.population;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  country_id | country_name | city_id |   city_name   | population 
 ------------+--------------+---------+---------------+------------
           3 | USA          |       3 | Washington DC |     599657
@@ -1569,6 +1663,7 @@
 UPDATE 1
 \set QUIET true
 SELECT * FROM city_view;
+INFO:  Path param info: 0.000000
  city_id |   city_name   | population | country_name |   continent   
 ---------+---------------+------------+--------------+---------------
        1 | Tokyo         |   13010279 | Japan        | Asia
@@ -2106,6 +2201,29 @@
 -- check detach behavior
 create trigger trg1 after insert on trigpart for each row execute procedure trigger_nothing();
 \d trigpart3
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
              Table "public.trigpart3"
  Column |  Type   | Collation | Nullable | Default 
 --------+---------+-----------+----------+---------
@@ -2137,6 +2255,27 @@
 create table trigpart3 (like trigpart);
 create trigger trg1 after insert on trigpart3 for each row execute procedure trigger_nothing();
 \d trigpart3
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
              Table "public.trigpart3"
  Column |  Type   | Collation | Nullable | Default 
 --------+---------+-----------+----------+---------
@@ -2152,6 +2291,29 @@
 create trigger samename after delete on trigpart execute function trigger_nothing();
 create trigger samename after delete on trigpart1 execute function trigger_nothing();
 \d trigpart1
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
              Table "public.trigpart1"
  Column |  Type   | Collation | Nullable | Default 
 --------+---------+-----------+----------+---------
@@ -2634,6 +2796,7 @@
   from pg_trigger t join pg_constraint c on (t.tgconstraint = c.oid)
   where tgname = 'parted_trigger'
   order by t.tgrelid::regclass::text;
+INFO:  Path param info: 0.000000
      tgname     |    conname     |      tgrelid       |   tgconstrrelid   |      conrelid      | confrelid 
 ----------------+----------------+--------------------+-------------------+--------------------+-----------
  parted_trigger | parted_trigger | parted_trigger     | parted_referenced | parted_trigger     | -
@@ -2836,6 +2999,7 @@
 SELECT tgrelid::regclass, tgenabled FROM pg_trigger
   WHERE tgrelid::regclass IN (SELECT oid from pg_class where relname LIKE 'trgfire%')
   ORDER BY tgrelid::regclass::text;
+INFO:  Path param info: 0.000000
    tgrelid   | tgenabled 
 -------------+-----------
  trgfire     | D
@@ -2958,6 +3122,17 @@
   FROM information_schema.triggers
   WHERE event_object_table IN ('parent', 'child1', 'child2', 'child3')
   ORDER BY trigger_name COLLATE "C", 2;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
     trigger_name    | event_manipulation | event_object_schema | event_object_table | action_order | action_condition | action_orientation | action_timing | action_reference_old_table | action_reference_new_table 
 --------------------+--------------------+---------------------+--------------------+--------------+------------------+--------------------+---------------+----------------------------+----------------------------
  child1_delete_trig | DELETE             | public              | child1             |            1 |                  | STATEMENT          | AFTER         | old_table                  | 
@@ -3415,6 +3590,7 @@
 on t.a = s.a
 when not matched then
   insert values (a, b);
+INFO:  Path param info: 0.000000
 NOTICE:  trigger = merge_target_table_insert_trig, new table = (1,initial1), (2,initial2), (3,initial3), (4,initial4)
 merge into merge_target_table t
 using merge_source_table s
@@ -3425,6 +3601,7 @@
 	delete
 when not matched then
   insert values (a, b);
+INFO:  Path param info: 0.000000
 NOTICE:  trigger = merge_target_table_delete_trig, old table = (3,initial3), (4,initial4)
 NOTICE:  trigger = merge_target_table_update_trig, old table = (1,initial1), (2,initial2), new table = (1,"initial1 updated by merge"), (2,"initial2 updated by merge")
 NOTICE:  trigger = merge_target_table_insert_trig, new table = <NULL>
@@ -3437,6 +3614,7 @@
 	delete
 when not matched then
   insert values (a, b);
+INFO:  Path param info: 0.000000
 NOTICE:  trigger = merge_target_table_delete_trig, old table = <NULL>
 NOTICE:  trigger = merge_target_table_update_trig, old table = (1,"initial1 updated by merge"), (2,"initial2 updated by merge"), new table = (1,"initial1 updated by merge updated again by merge"), (2,"initial2 updated by merge updated again by merge")
 NOTICE:  trigger = merge_target_table_insert_trig, new table = (3,initial3), (4,initial4)
@@ -3649,6 +3827,7 @@
 (select tgname from pg_trigger tr where tr.oid = pg_trigger.tgparentid) parent_tgname
 from pg_trigger where tgrelid in (select relid from pg_partition_tree('grandparent'))
 order by tgname, tgrelid::regclass::text COLLATE "C";
+INFO:  Path param info: 0.000000
    tgrelid   | tgname | parent_tgname 
 -------------+--------+---------------
  chi         | b      | b
@@ -3676,6 +3855,7 @@
 (select tgname from pg_trigger tr where tr.oid = pg_trigger.tgparentid) parent_tgname
 from pg_trigger where tgrelid in (select relid from pg_partition_tree('grandparent'))
 order by tgname, tgrelid::regclass::text COLLATE "C";
+INFO:  Path param info: 0.000000
    tgrelid   | tgname | parent_tgname 
 -------------+--------+---------------
  chi         | b      | b
@@ -3699,6 +3879,29 @@
 for each row execute procedure f();
 alter trigger parenttrig on parent rename to anothertrig;
 \d+ child
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                    Table "public.child"
  Column |  Type   | Collation | Nullable | Default | Storage | Stats target | Description 
 --------+---------+-----------+----------+---------+---------+--------------+-------------
diff -U3 /home/dbs/pg-queryplans/postgres/src/test/regress/expected/select.out /home/dbs/pg-queryplans/postgres/src/test/regress/results/select.out
--- /home/dbs/pg-queryplans/postgres/src/test/regress/expected/select.out	2024-02-20 13:16:25.971611203 +0900
+++ /home/dbs/pg-queryplans/postgres/src/test/regress/results/select.out	2024-02-20 16:07:31.444031117 +0900
@@ -458,6 +458,7 @@
 --
 select * from onek, (values(147, 'RFAAAA'), (931, 'VJAAAA')) as v (i, j)
     WHERE onek.unique1 = v.i and onek.stringu1 = v.j;
+INFO:  Path param info: 0.000000
  unique1 | unique2 | two | four | ten | twenty | hundred | thousand | twothousand | fivethous | tenthous | odd | even | stringu1 | stringu2 | string4 |  i  |   j    
 ---------+---------+-----+------+-----+--------+---------+----------+-------------+-----------+----------+-----+------+----------+----------+---------+-----+--------
      147 |       0 |   1 |    3 |   7 |      7 |       7 |       47 |         147 |       147 |      147 |  14 |   15 | RFAAAA   | AAAAAA   | AAAAxx  | 147 | RFAAAA
@@ -480,6 +481,8 @@
 select * from onek
     where (unique1,ten) in (values (1,1), (20,0), (99,9), (17,99))
     order by unique1;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  unique1 | unique2 | two | four | ten | twenty | hundred | thousand | twothousand | fivethous | tenthous | odd | even | stringu1 | stringu2 | string4 
 ---------+---------+-----+------+-----+--------+---------+----------+-------------+-----------+----------+-----+------+----------+----------+---------
        1 |     214 |   1 |    1 |   1 |      1 |       1 |        1 |           1 |         1 |        1 |   2 |    3 | BAAAAA   | GIAAAA   | OOOOxx
diff -U3 /home/dbs/pg-queryplans/postgres/src/test/regress/expected/inherit.out /home/dbs/pg-queryplans/postgres/src/test/regress/results/inherit.out
--- /home/dbs/pg-queryplans/postgres/src/test/regress/expected/inherit.out	2024-02-20 13:16:25.959611416 +0900
+++ /home/dbs/pg-queryplans/postgres/src/test/regress/results/inherit.out	2024-02-20 16:07:31.624028488 +0900
@@ -32,6 +32,7 @@
 INSERT INTO d(aa) VALUES('ddddddd');
 INSERT INTO d(aa) VALUES('dddddddd');
 SELECT relname, a.* FROM a, pg_class where a.tableoid = pg_class.oid;
+INFO:  Path param info: 0.000000
  relname |    aa    
 ---------+----------
  a       | aaa
@@ -61,6 +62,7 @@
 (24 rows)
 
 SELECT relname, b.* FROM b, pg_class where b.tableoid = pg_class.oid;
+INFO:  Path param info: 0.000000
  relname |    aa    | bb 
 ---------+----------+----
  b       | bbb      | 
@@ -78,6 +80,7 @@
 (12 rows)
 
 SELECT relname, c.* FROM c, pg_class where c.tableoid = pg_class.oid;
+INFO:  Path param info: 0.000000
  relname |    aa    | cc 
 ---------+----------+----
  c       | ccc      | 
@@ -95,6 +98,7 @@
 (12 rows)
 
 SELECT relname, d.* FROM d, pg_class where d.tableoid = pg_class.oid;
+INFO:  Path param info: 0.000000
  relname |    aa    | bb | cc | dd 
 ---------+----------+----+----+----
  d       | ddd      |    |    | 
@@ -106,6 +110,7 @@
 (6 rows)
 
 SELECT relname, a.* FROM ONLY a, pg_class where a.tableoid = pg_class.oid;
+INFO:  Path param info: 0.000000
  relname |    aa    
 ---------+----------
  a       | aaa
@@ -117,6 +122,7 @@
 (6 rows)
 
 SELECT relname, b.* FROM ONLY b, pg_class where b.tableoid = pg_class.oid;
+INFO:  Path param info: 0.000000
  relname |    aa    | bb 
 ---------+----------+----
  b       | bbb      | 
@@ -128,6 +134,7 @@
 (6 rows)
 
 SELECT relname, c.* FROM ONLY c, pg_class where c.tableoid = pg_class.oid;
+INFO:  Path param info: 0.000000
  relname |    aa    | cc 
 ---------+----------+----
  c       | ccc      | 
@@ -139,6 +146,7 @@
 (6 rows)
 
 SELECT relname, d.* FROM ONLY d, pg_class where d.tableoid = pg_class.oid;
+INFO:  Path param info: 0.000000
  relname |    aa    | bb | cc | dd 
 ---------+----------+----+----+----
  d       | ddd      |    |    | 
@@ -155,6 +163,7 @@
 UPDATE ONLY b SET aa='zzz' WHERE aa='aaa';
 UPDATE a SET aa='zzzzzz' WHERE aa LIKE 'aaa%';
 SELECT relname, a.* FROM a, pg_class where a.tableoid = pg_class.oid;
+INFO:  Path param info: 0.000000
  relname |    aa    
 ---------+----------
  a       | zzzz
@@ -184,6 +193,7 @@
 (24 rows)
 
 SELECT relname, b.* FROM b, pg_class where b.tableoid = pg_class.oid;
+INFO:  Path param info: 0.000000
  relname |    aa    | bb 
 ---------+----------+----
  b       | bbb      | 
@@ -201,6 +211,7 @@
 (12 rows)
 
 SELECT relname, c.* FROM c, pg_class where c.tableoid = pg_class.oid;
+INFO:  Path param info: 0.000000
  relname |    aa    | cc 
 ---------+----------+----
  c       | ccc      | 
@@ -218,6 +229,7 @@
 (12 rows)
 
 SELECT relname, d.* FROM d, pg_class where d.tableoid = pg_class.oid;
+INFO:  Path param info: 0.000000
  relname |    aa    | bb | cc | dd 
 ---------+----------+----+----+----
  d       | ddd      |    |    | 
@@ -229,6 +241,7 @@
 (6 rows)
 
 SELECT relname, a.* FROM ONLY a, pg_class where a.tableoid = pg_class.oid;
+INFO:  Path param info: 0.000000
  relname |   aa   
 ---------+--------
  a       | zzzz
@@ -240,6 +253,7 @@
 (6 rows)
 
 SELECT relname, b.* FROM ONLY b, pg_class where b.tableoid = pg_class.oid;
+INFO:  Path param info: 0.000000
  relname |    aa    | bb 
 ---------+----------+----
  b       | bbb      | 
@@ -251,6 +265,7 @@
 (6 rows)
 
 SELECT relname, c.* FROM ONLY c, pg_class where c.tableoid = pg_class.oid;
+INFO:  Path param info: 0.000000
  relname |    aa    | cc 
 ---------+----------+----
  c       | ccc      | 
@@ -262,6 +277,7 @@
 (6 rows)
 
 SELECT relname, d.* FROM ONLY d, pg_class where d.tableoid = pg_class.oid;
+INFO:  Path param info: 0.000000
  relname |    aa    | bb | cc | dd 
 ---------+----------+----+----+----
  d       | ddd      |    |    | 
@@ -274,6 +290,7 @@
 
 UPDATE b SET aa='new';
 SELECT relname, a.* FROM a, pg_class where a.tableoid = pg_class.oid;
+INFO:  Path param info: 0.000000
  relname |    aa    
 ---------+----------
  a       | zzzz
@@ -303,6 +320,7 @@
 (24 rows)
 
 SELECT relname, b.* FROM b, pg_class where b.tableoid = pg_class.oid;
+INFO:  Path param info: 0.000000
  relname | aa  | bb 
 ---------+-----+----
  b       | new | 
@@ -320,6 +338,7 @@
 (12 rows)
 
 SELECT relname, c.* FROM c, pg_class where c.tableoid = pg_class.oid;
+INFO:  Path param info: 0.000000
  relname |    aa    | cc 
 ---------+----------+----
  c       | ccc      | 
@@ -337,6 +356,7 @@
 (12 rows)
 
 SELECT relname, d.* FROM d, pg_class where d.tableoid = pg_class.oid;
+INFO:  Path param info: 0.000000
  relname | aa  | bb | cc | dd 
 ---------+-----+----+----+----
  d       | new |    |    | 
@@ -348,6 +368,7 @@
 (6 rows)
 
 SELECT relname, a.* FROM ONLY a, pg_class where a.tableoid = pg_class.oid;
+INFO:  Path param info: 0.000000
  relname |   aa   
 ---------+--------
  a       | zzzz
@@ -359,6 +380,7 @@
 (6 rows)
 
 SELECT relname, b.* FROM ONLY b, pg_class where b.tableoid = pg_class.oid;
+INFO:  Path param info: 0.000000
  relname | aa  | bb 
 ---------+-----+----
  b       | new | 
@@ -370,6 +392,7 @@
 (6 rows)
 
 SELECT relname, c.* FROM ONLY c, pg_class where c.tableoid = pg_class.oid;
+INFO:  Path param info: 0.000000
  relname |    aa    | cc 
 ---------+----------+----
  c       | ccc      | 
@@ -381,6 +404,7 @@
 (6 rows)
 
 SELECT relname, d.* FROM ONLY d, pg_class where d.tableoid = pg_class.oid;
+INFO:  Path param info: 0.000000
  relname | aa  | bb | cc | dd 
 ---------+-----+----+----+----
  d       | new |    |    | 
@@ -394,6 +418,7 @@
 UPDATE a SET aa='new';
 DELETE FROM ONLY c WHERE aa='new';
 SELECT relname, a.* FROM a, pg_class where a.tableoid = pg_class.oid;
+INFO:  Path param info: 0.000000
  relname | aa  
 ---------+-----
  a       | new
@@ -417,6 +442,7 @@
 (18 rows)
 
 SELECT relname, b.* FROM b, pg_class where b.tableoid = pg_class.oid;
+INFO:  Path param info: 0.000000
  relname | aa  | bb 
 ---------+-----+----
  b       | new | 
@@ -434,6 +460,7 @@
 (12 rows)
 
 SELECT relname, c.* FROM c, pg_class where c.tableoid = pg_class.oid;
+INFO:  Path param info: 0.000000
  relname | aa  | cc 
 ---------+-----+----
  d       | new | 
@@ -445,6 +472,7 @@
 (6 rows)
 
 SELECT relname, d.* FROM d, pg_class where d.tableoid = pg_class.oid;
+INFO:  Path param info: 0.000000
  relname | aa  | bb | cc | dd 
 ---------+-----+----+----+----
  d       | new |    |    | 
@@ -456,6 +484,7 @@
 (6 rows)
 
 SELECT relname, a.* FROM ONLY a, pg_class where a.tableoid = pg_class.oid;
+INFO:  Path param info: 0.000000
  relname | aa  
 ---------+-----
  a       | new
@@ -467,6 +496,7 @@
 (6 rows)
 
 SELECT relname, b.* FROM ONLY b, pg_class where b.tableoid = pg_class.oid;
+INFO:  Path param info: 0.000000
  relname | aa  | bb 
 ---------+-----+----
  b       | new | 
@@ -478,11 +508,13 @@
 (6 rows)
 
 SELECT relname, c.* FROM ONLY c, pg_class where c.tableoid = pg_class.oid;
+INFO:  Path param info: 0.000000
  relname | aa | cc 
 ---------+----+----
 (0 rows)
 
 SELECT relname, d.* FROM ONLY d, pg_class where d.tableoid = pg_class.oid;
+INFO:  Path param info: 0.000000
  relname | aa  | bb | cc | dd 
 ---------+-----+----+----+----
  d       | new |    |    | 
@@ -495,41 +527,49 @@
 
 DELETE FROM a;
 SELECT relname, a.* FROM a, pg_class where a.tableoid = pg_class.oid;
+INFO:  Path param info: 0.000000
  relname | aa 
 ---------+----
 (0 rows)
 
 SELECT relname, b.* FROM b, pg_class where b.tableoid = pg_class.oid;
+INFO:  Path param info: 0.000000
  relname | aa | bb 
 ---------+----+----
 (0 rows)
 
 SELECT relname, c.* FROM c, pg_class where c.tableoid = pg_class.oid;
+INFO:  Path param info: 0.000000
  relname | aa | cc 
 ---------+----+----
 (0 rows)
 
 SELECT relname, d.* FROM d, pg_class where d.tableoid = pg_class.oid;
+INFO:  Path param info: 0.000000
  relname | aa | bb | cc | dd 
 ---------+----+----+----+----
 (0 rows)
 
 SELECT relname, a.* FROM ONLY a, pg_class where a.tableoid = pg_class.oid;
+INFO:  Path param info: 0.000000
  relname | aa 
 ---------+----
 (0 rows)
 
 SELECT relname, b.* FROM ONLY b, pg_class where b.tableoid = pg_class.oid;
+INFO:  Path param info: 0.000000
  relname | aa | bb 
 ---------+----+----
 (0 rows)
 
 SELECT relname, c.* FROM ONLY c, pg_class where c.tableoid = pg_class.oid;
+INFO:  Path param info: 0.000000
  relname | aa | cc 
 ---------+----+----
 (0 rows)
 
 SELECT relname, d.* FROM ONLY d, pg_class where d.tableoid = pg_class.oid;
+INFO:  Path param info: 0.000000
  relname | aa | bb | cc | dd 
 ---------+----+----+----+----
 (0 rows)
@@ -623,6 +663,7 @@
 insert into bar2 values(3,3,3);
 insert into bar2 values(4,4,4);
 update bar set f2 = f2 + 100 where f1 in (select f1 from foo);
+INFO:  Path param info: 0.000000
 select tableoid::regclass::text as relname, bar.* from bar order by 1,2;
  relname | f1 | f2  
 ---------+----+-----
@@ -641,6 +682,7 @@
 from
   ( select f1 from foo union all select f1+3 from foo ) ss
 where bar.f1 = ss.f1;
+INFO:  Path param info: 0.000000
 select tableoid::regclass::text as relname, bar.* from bar order by 1,2;
  relname | f1 | f2  
 ---------+----+-----
@@ -668,6 +710,7 @@
 from
   (select a from some_tab union all select a+1 from some_tab) ss (a)
 where parted_tab.a = ss.a;
+INFO:  Path param info: 0.000000
 select tableoid::regclass::text as relname, parted_tab.* from parted_tab order by 1,2;
      relname      | a | b 
 ------------------+---+---
@@ -682,6 +725,7 @@
 from
   (select 0 from parted_tab union all select 1 from parted_tab) ss (a)
 where parted_tab.a = ss.a;
+INFO:  Path param info: 0.000000
 select tableoid::regclass::text as relname, parted_tab.* from parted_tab order by 1,2;
      relname      | a | b 
 ------------------+---+---
@@ -712,6 +756,7 @@
 from
   (select a from some_tab union all select a+1 from some_tab) ss (a)
 where (mlp.a = ss.a and mlp.b = 'b') or mlp.a = 3;
+INFO:  Path param info: 0.000000
 select tableoid::regclass::text as relname, mlparted_tab.* from mlparted_tab order by 1,2;
        relname       | a | b |  c  
 ---------------------+---+---+-----
@@ -764,6 +809,8 @@
 alter table p1 add constraint p2chk check (ff1 > 10);
 -- connoinherit should be true for NO INHERIT constraint
 select pc.relname, pgc.conname, pgc.contype, pgc.conislocal, pgc.coninhcount, pgc.connoinherit from pg_class as pc inner join pg_constraint as pgc on (pgc.conrelid = pc.oid) where pc.relname = 'p1' order by 1,2;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  relname | conname | contype | conislocal | coninhcount | connoinherit 
 ---------+---------+---------+------------+-------------+--------------
  p1      | p1chk   | c       | t          |           0 | t
@@ -773,6 +820,23 @@
 -- Test that child does not inherit NO INHERIT constraints
 create table c1 () inherits (p1);
 \d p1
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                  Table "public.p1"
  Column |  Type   | Collation | Nullable | Default 
 --------+---------+-----------+----------+---------
@@ -783,6 +847,23 @@
 Number of child tables: 1 (Use \d+ to list them.)
 
 \d c1
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                  Table "public.c1"
  Column |  Type   | Collation | Nullable | Default 
 --------+---------+-----------+----------+---------
@@ -852,6 +933,8 @@
 alter table ac add constraint ac_check check (aa is not null);
 CREATE TABLE bc (bb TEXT) INHERITS (ac);
 select pc.relname, pgc.conname, pgc.contype, pgc.conislocal, pgc.coninhcount, pg_get_expr(pgc.conbin, pc.oid) as consrc from pg_class as pc inner join pg_constraint as pgc on (pgc.conrelid = pc.oid) where pc.relname in ('ac', 'bc') order by 1,2;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  relname | conname  | contype | conislocal | coninhcount |      consrc      
 ---------+----------+---------+------------+-------------+------------------
  ac      | ac_check | c       | t          |           0 | (aa IS NOT NULL)
@@ -868,6 +951,8 @@
 ERROR:  cannot drop inherited constraint "ac_check" of relation "bc"
 alter table ac drop constraint ac_check;
 select pc.relname, pgc.conname, pgc.contype, pgc.conislocal, pgc.coninhcount, pg_get_expr(pgc.conbin, pc.oid) as consrc from pg_class as pc inner join pg_constraint as pgc on (pgc.conrelid = pc.oid) where pc.relname in ('ac', 'bc') order by 1,2;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  relname | conname | contype | conislocal | coninhcount | consrc 
 ---------+---------+---------+------------+-------------+--------
 (0 rows)
@@ -875,6 +960,8 @@
 -- try the unnamed-constraint case
 alter table ac add check (aa is not null);
 select pc.relname, pgc.conname, pgc.contype, pgc.conislocal, pgc.coninhcount, pg_get_expr(pgc.conbin, pc.oid) as consrc from pg_class as pc inner join pg_constraint as pgc on (pgc.conrelid = pc.oid) where pc.relname in ('ac', 'bc') order by 1,2;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  relname |   conname   | contype | conislocal | coninhcount |      consrc      
 ---------+-------------+---------+------------+-------------+------------------
  ac      | ac_aa_check | c       | t          |           0 | (aa IS NOT NULL)
@@ -891,6 +978,8 @@
 ERROR:  cannot drop inherited constraint "ac_aa_check" of relation "bc"
 alter table ac drop constraint ac_aa_check;
 select pc.relname, pgc.conname, pgc.contype, pgc.conislocal, pgc.coninhcount, pg_get_expr(pgc.conbin, pc.oid) as consrc from pg_class as pc inner join pg_constraint as pgc on (pgc.conrelid = pc.oid) where pc.relname in ('ac', 'bc') order by 1,2;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  relname | conname | contype | conislocal | coninhcount | consrc 
 ---------+---------+---------+------------+-------------+--------
 (0 rows)
@@ -898,6 +987,8 @@
 alter table ac add constraint ac_check check (aa is not null);
 alter table bc no inherit ac;
 select pc.relname, pgc.conname, pgc.contype, pgc.conislocal, pgc.coninhcount, pg_get_expr(pgc.conbin, pc.oid) as consrc from pg_class as pc inner join pg_constraint as pgc on (pgc.conrelid = pc.oid) where pc.relname in ('ac', 'bc') order by 1,2;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  relname | conname  | contype | conislocal | coninhcount |      consrc      
 ---------+----------+---------+------------+-------------+------------------
  ac      | ac_check | c       | t          |           0 | (aa IS NOT NULL)
@@ -906,6 +997,8 @@
 
 alter table bc drop constraint ac_check;
 select pc.relname, pgc.conname, pgc.contype, pgc.conislocal, pgc.coninhcount, pg_get_expr(pgc.conbin, pc.oid) as consrc from pg_class as pc inner join pg_constraint as pgc on (pgc.conrelid = pc.oid) where pc.relname in ('ac', 'bc') order by 1,2;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  relname | conname  | contype | conislocal | coninhcount |      consrc      
 ---------+----------+---------+------------+-------------+------------------
  ac      | ac_check | c       | t          |           0 | (aa IS NOT NULL)
@@ -913,6 +1006,8 @@
 
 alter table ac drop constraint ac_check;
 select pc.relname, pgc.conname, pgc.contype, pgc.conislocal, pgc.coninhcount, pg_get_expr(pgc.conbin, pc.oid) as consrc from pg_class as pc inner join pg_constraint as pgc on (pgc.conrelid = pc.oid) where pc.relname in ('ac', 'bc') order by 1,2;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  relname | conname | contype | conislocal | coninhcount | consrc 
 ---------+---------+---------+------------+-------------+--------
 (0 rows)
@@ -924,6 +1019,8 @@
 NOTICE:  merging column "a" with inherited definition
 NOTICE:  merging constraint "check_a" with inherited definition
 select pc.relname, pgc.conname, pgc.contype, pgc.conislocal, pgc.coninhcount, pg_get_expr(pgc.conbin, pc.oid) as consrc from pg_class as pc inner join pg_constraint as pgc on (pgc.conrelid = pc.oid) where pc.relname in ('ac', 'bc') order by 1,2;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  relname | conname | contype | conislocal | coninhcount |  consrc  
 ---------+---------+---------+------------+-------------+----------
  ac      | check_a | c       | t          |           0 | (a <> 0)
@@ -937,6 +1034,8 @@
 create table bc (b int constraint check_b check (b <> 0));
 create table cc (c int constraint check_c check (c <> 0)) inherits (ac, bc);
 select pc.relname, pgc.conname, pgc.contype, pgc.conislocal, pgc.coninhcount, pg_get_expr(pgc.conbin, pc.oid) as consrc from pg_class as pc inner join pg_constraint as pgc on (pgc.conrelid = pc.oid) where pc.relname in ('ac', 'bc', 'cc') order by 1,2;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  relname | conname | contype | conislocal | coninhcount |  consrc  
 ---------+---------+---------+------------+-------------+----------
  ac      | check_a | c       | t          |           0 | (a <> 0)
@@ -948,6 +1047,8 @@
 
 alter table cc no inherit bc;
 select pc.relname, pgc.conname, pgc.contype, pgc.conislocal, pgc.coninhcount, pg_get_expr(pgc.conbin, pc.oid) as consrc from pg_class as pc inner join pg_constraint as pgc on (pgc.conrelid = pc.oid) where pc.relname in ('ac', 'bc', 'cc') order by 1,2;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  relname | conname | contype | conislocal | coninhcount |  consrc  
 ---------+---------+---------+------------+-------------+----------
  ac      | check_a | c       | t          |           0 | (a <> 0)
@@ -976,6 +1077,23 @@
 DETAIL:  Failing row contains (1, -1, 2).
 create table c2(f3 int) inherits(p1,p2);
 \d c2
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                  Table "public.c2"
  Column |  Type   | Collation | Nullable | Default 
 --------+---------+-----------+----------+---------
@@ -992,6 +1110,23 @@
 NOTICE:  merging multiple inherited definitions of column "f2"
 NOTICE:  merging multiple inherited definitions of column "f3"
 \d c3
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                  Table "public.c3"
  Column |  Type   | Collation | Nullable | Default 
 --------+---------+-----------+----------+---------
@@ -1014,6 +1149,23 @@
 create table cc1 (f2 text, f3 int) inherits (pp1);
 alter table pp1 add column a1 int check (a1 > 0);
 \d cc1
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                 Table "public.cc1"
  Column |  Type   | Collation | Nullable | Default 
 --------+---------+-----------+----------+---------
@@ -1029,6 +1181,23 @@
 NOTICE:  merging multiple inherited definitions of column "f1"
 NOTICE:  merging multiple inherited definitions of column "a1"
 \d cc2
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                      Table "public.cc2"
  Column |       Type       | Collation | Nullable | Default 
 --------+------------------+-----------+----------+---------
@@ -1046,6 +1215,23 @@
 NOTICE:  merging definition of column "a2" for child "cc2"
 NOTICE:  merging constraint "pp1_a2_check" with inherited definition
 \d cc2
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                      Table "public.cc2"
  Column |       Type       | Collation | Nullable | Default 
 --------+------------------+-----------+----------+---------
@@ -1077,6 +1263,25 @@
 ERROR:  cannot rename inherited column "aa"
 ALTER TABLE inhts RENAME d TO dd;
 \d+ inhts
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                    Table "public.inhts"
  Column |  Type   | Collation | Nullable | Default | Storage | Stats target | Description 
 --------+---------+-----------+----------+---------+---------+--------------+-------------
@@ -1097,6 +1302,25 @@
 NOTICE:  merging definition of column "i" for child "inhtd"
 NOTICE:  merging definition of column "i" for child "inhtd"
 \d+ inhta
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                    Table "public.inhta"
  Column |  Type   | Collation | Nullable | Default | Storage | Stats target | Description 
 --------+---------+-----------+----------+---------+---------+--------------+-------------
@@ -1113,6 +1337,25 @@
 NOTICE:  merging multiple inherited definitions of column "b"
 ALTER TABLE inht1 RENAME aa TO aaa;
 \d+ inht4
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                    Table "public.inht4"
  Column |  Type   | Collation | Nullable | Default | Storage | Stats target | Description 
 --------+---------+-----------+----------+---------+---------+--------------+-------------
@@ -1130,6 +1373,25 @@
 ALTER TABLE inht1 RENAME b TO bb;                -- to be failed
 ERROR:  cannot rename inherited column "b"
 \d+ inhts
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                    Table "public.inhts"
  Column |  Type   | Collation | Nullable | Default | Storage | Stats target | Description 
 --------+---------+-----------+----------+---------+---------+--------------+-------------
@@ -1151,6 +1413,10 @@
         WHERE inhparent IN (SELECT inhrelid FROM r) GROUP BY inhrelid) e
   JOIN pg_attribute a ON e.inhrelid = a.attrelid WHERE NOT attislocal
   ORDER BY a.attrelid::regclass::name, a.attnum;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  attrelid | attname | attinhcount | expected 
 ----------+---------+-------------+----------
  inht2    | aaaa    |           1 |        1
@@ -1177,6 +1443,37 @@
 CREATE TABLE test_constraints (id int, val1 varchar, val2 int, UNIQUE(val1, val2));
 CREATE TABLE test_constraints_inh () INHERITS (test_constraints);
 \d+ test_constraints
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                    Table "public.test_constraints"
  Column |       Type        | Collation | Nullable | Default | Storage  | Stats target | Description 
 --------+-------------------+-----------+----------+---------+----------+--------------+-------------
@@ -1189,6 +1486,37 @@
 
 ALTER TABLE ONLY test_constraints DROP CONSTRAINT test_constraints_val1_val2_key;
 \d+ test_constraints
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                    Table "public.test_constraints"
  Column |       Type        | Collation | Nullable | Default | Storage  | Stats target | Description 
 --------+-------------------+-----------+----------+---------+----------+--------------+-------------
@@ -1198,6 +1526,25 @@
 Child tables: test_constraints_inh
 
 \d+ test_constraints_inh
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                  Table "public.test_constraints_inh"
  Column |       Type        | Collation | Nullable | Default | Storage  | Stats target | Description 
 --------+-------------------+-----------+----------+---------+----------+--------------+-------------
@@ -1214,6 +1561,37 @@
 );
 CREATE TABLE test_ex_constraints_inh () INHERITS (test_ex_constraints);
 \d+ test_ex_constraints
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                            Table "public.test_ex_constraints"
  Column |  Type  | Collation | Nullable | Default | Storage | Stats target | Description 
 --------+--------+-----------+----------+---------+---------+--------------+-------------
@@ -1224,6 +1602,37 @@
 
 ALTER TABLE test_ex_constraints DROP CONSTRAINT test_ex_constraints_c_excl;
 \d+ test_ex_constraints
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                            Table "public.test_ex_constraints"
  Column |  Type  | Collation | Nullable | Default | Storage | Stats target | Description 
 --------+--------+-----------+----------+---------+---------+--------------+-------------
@@ -1231,6 +1640,25 @@
 Child tables: test_ex_constraints_inh
 
 \d+ test_ex_constraints_inh
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                          Table "public.test_ex_constraints_inh"
  Column |  Type  | Collation | Nullable | Default | Storage | Stats target | Description 
 --------+--------+-----------+----------+---------+---------+--------------+-------------
@@ -1244,6 +1672,41 @@
 CREATE TABLE test_foreign_constraints(id1 int REFERENCES test_primary_constraints(id));
 CREATE TABLE test_foreign_constraints_inh () INHERITS (test_foreign_constraints);
 \d+ test_primary_constraints
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                          Table "public.test_primary_constraints"
  Column |  Type   | Collation | Nullable | Default | Storage | Stats target | Description 
 --------+---------+-----------+----------+---------+---------+--------------+-------------
@@ -1254,6 +1717,29 @@
     TABLE "test_foreign_constraints" CONSTRAINT "test_foreign_constraints_id1_fkey" FOREIGN KEY (id1) REFERENCES test_primary_constraints(id)
 
 \d+ test_foreign_constraints
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                          Table "public.test_foreign_constraints"
  Column |  Type   | Collation | Nullable | Default | Storage | Stats target | Description 
 --------+---------+-----------+----------+---------+---------+--------------+-------------
@@ -1264,6 +1750,29 @@
 
 ALTER TABLE test_foreign_constraints DROP CONSTRAINT test_foreign_constraints_id1_fkey;
 \d+ test_foreign_constraints
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                          Table "public.test_foreign_constraints"
  Column |  Type   | Collation | Nullable | Default | Storage | Stats target | Description 
 --------+---------+-----------+----------+---------+---------+--------------+-------------
@@ -1271,6 +1780,25 @@
 Child tables: test_foreign_constraints_inh
 
 \d+ test_foreign_constraints_inh
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                        Table "public.test_foreign_constraints_inh"
  Column |  Type   | Collation | Nullable | Default | Storage | Stats target | Description 
 --------+---------+-----------+----------+---------+---------+--------------+-------------
@@ -1374,6 +1902,7 @@
 analyze patest2;
 explain (costs off)
 select * from patest0 join (select f1 from int4_tbl limit 1) ss on id = f1;
+INFO:  Path param info: 0.000000
                          QUERY PLAN                         
 ------------------------------------------------------------
  Nested Loop
@@ -1389,6 +1918,7 @@
 (10 rows)
 
 select * from patest0 join (select f1 from int4_tbl limit 1) ss on id = f1;
+INFO:  Path param info: 0.000000
  id | x | f1 
 ----+---+----
   0 | 0 |  0
@@ -1399,6 +1929,7 @@
 drop index patest2i;
 explain (costs off)
 select * from patest0 join (select f1 from int4_tbl limit 1) ss on id = f1;
+INFO:  Path param info: 0.000000
                          QUERY PLAN                         
 ------------------------------------------------------------
  Nested Loop
@@ -1414,6 +1945,7 @@
 (10 rows)
 
 select * from patest0 join (select f1 from int4_tbl limit 1) ss on id = f1;
+INFO:  Path param info: 0.000000
  id | x | f1 
 ----+---+----
   0 | 0 |  0
@@ -1586,6 +2118,9 @@
 select t1.* from matest0 t1, matest0 t2
 where t1.b = t2.b and t2.c = t2.d
 order by t1.b limit 10;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                             QUERY PLAN                             
 -------------------------------------------------------------------
  Limit
@@ -2614,6 +3149,7 @@
 explain (costs off)
   select * from permtest_parent p1 inner join permtest_parent p2
   on p1.a = p2.a and p1.c ~ 'a1$';
+INFO:  Path param info: 0.000000
                 QUERY PLAN                
 ------------------------------------------
  Nested Loop
@@ -2626,6 +3162,7 @@
 explain (costs off)
   select * from permtest_parent p1 inner join permtest_parent p2
   on p1.a = p2.a and left(p1.c, 3) ~ 'a1$';
+INFO:  Path param info: 0.000000
                   QUERY PLAN                  
 ----------------------------------------------
  Nested Loop
@@ -2642,6 +3179,7 @@
 explain (costs off)
   select p2.a, p1.c from permtest_parent p1 inner join permtest_parent p2
   on p1.a = p2.a and p1.c ~ 'a1$';
+INFO:  Path param info: 0.000000
                 QUERY PLAN                
 ------------------------------------------
  Nested Loop
@@ -2655,6 +3193,7 @@
 explain (costs off)
   select p2.a, p1.c from permtest_parent p1 inner join permtest_parent p2
   on p1.a = p2.a and left(p1.c, 3) ~ 'a1$';
+INFO:  Path param info: 0.000000
                      QUERY PLAN                     
 ----------------------------------------------------
  Hash Join
diff -U3 /home/dbs/pg-queryplans/postgres/src/test/regress/expected/typed_table.out /home/dbs/pg-queryplans/postgres/src/test/regress/results/typed_table.out
--- /home/dbs/pg-queryplans/postgres/src/test/regress/expected/typed_table.out	2024-02-20 13:16:25.975611131 +0900
+++ /home/dbs/pg-queryplans/postgres/src/test/regress/results/typed_table.out	2024-02-20 16:07:31.456030941 +0900
@@ -10,6 +10,23 @@
 (0 rows)
 
 \d persons
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
               Table "public.persons"
  Column |  Type   | Collation | Nullable | Default 
 --------+---------+-----------+----------+---------
@@ -46,6 +63,35 @@
     UNIQUE (name)
 );
 \d persons2
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
               Table "public.persons2"
  Column |  Type   | Collation | Nullable | Default 
 --------+---------+-----------+----------+---------
@@ -61,6 +107,35 @@
     name WITH OPTIONS DEFAULT ''
 );
 \d persons3
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
               Table "public.persons3"
  Column |  Type   | Collation | Nullable | Default  
 --------+---------+-----------+----------+----------
@@ -107,6 +182,35 @@
     UNIQUE (name)
 );
 \d persons2
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
               Table "public.persons2"
  Column |  Type   | Collation | Nullable | Default 
 --------+---------+-----------+----------+---------
@@ -122,6 +226,35 @@
     name NOT NULL DEFAULT ''
 );
 \d persons3
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
               Table "public.persons3"
  Column |  Type   | Collation | Nullable | Default  
 --------+---------+-----------+----------+----------
diff -U3 /home/dbs/pg-queryplans/postgres/src/test/regress/expected/vacuum.out /home/dbs/pg-queryplans/postgres/src/test/regress/results/vacuum.out
--- /home/dbs/pg-queryplans/postgres/src/test/regress/expected/vacuum.out	2024-02-20 13:16:25.979611060 +0900
+++ /home/dbs/pg-queryplans/postgres/src/test/regress/results/vacuum.out	2024-02-20 16:07:31.532029832 +0900
@@ -293,6 +293,13 @@
   ORDER BY rel;
 VACUUM (PROCESS_TOAST TRUE) vac_option_tab;
 SELECT * FROM vac_option_tab_counts;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
   rel  | vacuum_count 
 -------+--------------
  main  |            1
@@ -301,6 +308,13 @@
 
 VACUUM (PROCESS_TOAST FALSE) vac_option_tab;
 SELECT * FROM vac_option_tab_counts;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
   rel  | vacuum_count 
 -------+--------------
  main  |            2
@@ -313,6 +327,13 @@
 -- Only the toast table is processed.
 VACUUM (PROCESS_MAIN FALSE) vac_option_tab;
 SELECT * FROM vac_option_tab_counts;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
   rel  | vacuum_count 
 -------+--------------
  main  |            2
@@ -322,6 +343,13 @@
 -- Nothing is processed.
 VACUUM (PROCESS_MAIN FALSE, PROCESS_TOAST FALSE) vac_option_tab;
 SELECT * FROM vac_option_tab_counts;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
   rel  | vacuum_count 
 -------+--------------
  main  |            2
@@ -333,6 +361,7 @@
   WHERE relname = 'vac_option_tab' \gset
 SELECT t.relfilenode AS toast_filenode FROM pg_class c, pg_class t
   WHERE c.reltoastrelid = t.oid AND c.relname = 'vac_option_tab' \gset
+INFO:  Path param info: 0.000000
 -- Only the toast relation is processed.
 VACUUM (PROCESS_MAIN FALSE, FULL) vac_option_tab;
 SELECT relfilenode = :main_filenode AS is_same_main_filenode
@@ -345,6 +374,7 @@
 SELECT t.relfilenode = :toast_filenode AS is_same_toast_filenode
   FROM pg_class c, pg_class t
   WHERE c.reltoastrelid = t.oid AND c.relname = 'vac_option_tab';
+INFO:  Path param info: 0.000000
  is_same_toast_filenode 
 ------------------------
  f
diff -U3 /home/dbs/pg-queryplans/postgres/src/test/regress/expected/updatable_views.out /home/dbs/pg-queryplans/postgres/src/test/regress/results/updatable_views.out
--- /home/dbs/pg-queryplans/postgres/src/test/regress/expected/updatable_views.out	2024-02-20 13:16:25.979611060 +0900
+++ /home/dbs/pg-queryplans/postgres/src/test/regress/results/updatable_views.out	2024-02-20 16:07:31.616028605 +0900
@@ -32,6 +32,15 @@
   FROM information_schema.tables
  WHERE table_name LIKE E'r_\\_view%'
  ORDER BY table_name;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  table_name | is_insertable_into 
 ------------+--------------------
  ro_view1   | NO
@@ -60,6 +69,8 @@
   FROM information_schema.views
  WHERE table_name LIKE E'r_\\_view%'
  ORDER BY table_name;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  table_name | is_updatable | is_insertable_into 
 ------------+--------------+--------------------
  ro_view1   | NO           | NO
@@ -88,6 +99,82 @@
   FROM information_schema.columns
  WHERE table_name LIKE E'r_\\_view%'
  ORDER BY table_name, ordinal_position;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  table_name | column_name | is_updatable 
 ------------+-------------+--------------
  ro_view1   | a           | NO
@@ -379,6 +466,12 @@
 SELECT table_name, is_insertable_into
   FROM information_schema.tables
  WHERE table_name = 'rw_view1';
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  table_name | is_insertable_into 
 ------------+--------------------
  rw_view1   | YES
@@ -387,6 +480,7 @@
 SELECT table_name, is_updatable, is_insertable_into
   FROM information_schema.views
  WHERE table_name = 'rw_view1';
+INFO:  Path param info: 0.000000
  table_name | is_updatable | is_insertable_into 
 ------------+--------------+--------------------
  rw_view1   | YES          | YES
@@ -396,6 +490,68 @@
   FROM information_schema.columns
  WHERE table_name = 'rw_view1'
  ORDER BY ordinal_position;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  table_name | column_name | is_updatable 
 ------------+-------------+--------------
  rw_view1   | a           | YES
@@ -440,6 +596,7 @@
 SELECT table_name, is_updatable, is_insertable_into
   FROM information_schema.views
  WHERE table_name = 'rw_view1';
+INFO:  Path param info: 0.000000
  table_name | is_updatable | is_insertable_into 
 ------------+--------------+--------------------
  rw_view1   | YES          | YES
@@ -465,6 +622,12 @@
 SELECT table_name, is_insertable_into
   FROM information_schema.tables
  WHERE table_name = 'rw_view2';
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  table_name | is_insertable_into 
 ------------+--------------------
  rw_view2   | YES
@@ -473,6 +636,7 @@
 SELECT table_name, is_updatable, is_insertable_into
   FROM information_schema.views
  WHERE table_name = 'rw_view2';
+INFO:  Path param info: 0.000000
  table_name | is_updatable | is_insertable_into 
 ------------+--------------+--------------------
  rw_view2   | YES          | YES
@@ -482,6 +646,68 @@
   FROM information_schema.columns
  WHERE table_name = 'rw_view2'
  ORDER BY ordinal_position;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  table_name | column_name | is_updatable 
 ------------+-------------+--------------
  rw_view2   | aaa         | YES
@@ -538,6 +764,12 @@
   FROM information_schema.tables
  WHERE table_name LIKE 'rw_view%'
  ORDER BY table_name;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  table_name | is_insertable_into 
 ------------+--------------------
  rw_view1   | NO
@@ -548,6 +780,7 @@
   FROM information_schema.views
  WHERE table_name LIKE 'rw_view%'
  ORDER BY table_name;
+INFO:  Path param info: 0.000000
  table_name | is_updatable | is_insertable_into 
 ------------+--------------+--------------------
  rw_view1   | NO           | NO
@@ -558,6 +791,70 @@
   FROM information_schema.columns
  WHERE table_name LIKE 'rw_view%'
  ORDER BY table_name, ordinal_position;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  table_name | column_name | is_updatable 
 ------------+-------------+--------------
  rw_view1   | a           | NO
@@ -572,6 +869,12 @@
   FROM information_schema.tables
  WHERE table_name LIKE 'rw_view%'
  ORDER BY table_name;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  table_name | is_insertable_into 
 ------------+--------------------
  rw_view1   | YES
@@ -582,6 +885,7 @@
   FROM information_schema.views
  WHERE table_name LIKE 'rw_view%'
  ORDER BY table_name;
+INFO:  Path param info: 0.000000
  table_name | is_updatable | is_insertable_into 
 ------------+--------------+--------------------
  rw_view1   | NO           | YES
@@ -592,6 +896,70 @@
   FROM information_schema.columns
  WHERE table_name LIKE 'rw_view%'
  ORDER BY table_name, ordinal_position;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  table_name | column_name | is_updatable 
 ------------+-------------+--------------
  rw_view1   | a           | NO
@@ -606,6 +974,12 @@
   FROM information_schema.tables
  WHERE table_name LIKE 'rw_view%'
  ORDER BY table_name;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  table_name | is_insertable_into 
 ------------+--------------------
  rw_view1   | YES
@@ -616,6 +990,7 @@
   FROM information_schema.views
  WHERE table_name LIKE 'rw_view%'
  ORDER BY table_name;
+INFO:  Path param info: 0.000000
  table_name | is_updatable | is_insertable_into 
 ------------+--------------+--------------------
  rw_view1   | NO           | YES
@@ -626,6 +1001,70 @@
   FROM information_schema.columns
  WHERE table_name LIKE 'rw_view%'
  ORDER BY table_name, ordinal_position;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  table_name | column_name | is_updatable 
 ------------+-------------+--------------
  rw_view1   | a           | NO
@@ -640,6 +1079,12 @@
   FROM information_schema.tables
  WHERE table_name LIKE 'rw_view%'
  ORDER BY table_name;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  table_name | is_insertable_into 
 ------------+--------------------
  rw_view1   | YES
@@ -650,6 +1095,7 @@
   FROM information_schema.views
  WHERE table_name LIKE 'rw_view%'
  ORDER BY table_name;
+INFO:  Path param info: 0.000000
  table_name | is_updatable | is_insertable_into 
 ------------+--------------+--------------------
  rw_view1   | YES          | YES
@@ -660,6 +1106,70 @@
   FROM information_schema.columns
  WHERE table_name LIKE 'rw_view%'
  ORDER BY table_name, ordinal_position;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  table_name | column_name | is_updatable 
 ------------+-------------+--------------
  rw_view1   | a           | YES
@@ -675,6 +1185,7 @@
 (1 row)
 
 UPDATE rw_view2 SET b='Row three' WHERE a=3 RETURNING *;
+INFO:  Path param info: 0.000000
  a |     b     
 ---+-----------
  3 | Row three
@@ -689,6 +1200,7 @@
 (3 rows)
 
 DELETE FROM rw_view2 WHERE a=3 RETURNING *;
+INFO:  Path param info: 0.000000
  a |     b     
 ---+-----------
  3 | Row three
@@ -702,6 +1214,7 @@
 (2 rows)
 
 EXPLAIN (costs off) UPDATE rw_view2 SET a=3 WHERE a=2;
+INFO:  Path param info: 0.000000
                            QUERY PLAN                           
 ----------------------------------------------------------------
  Update on base_tbl
@@ -717,6 +1230,7 @@
 (10 rows)
 
 EXPLAIN (costs off) DELETE FROM rw_view2 WHERE a=2;
+INFO:  Path param info: 0.000000
                            QUERY PLAN                           
 ----------------------------------------------------------------
  Delete on base_tbl
@@ -744,6 +1258,12 @@
   FROM information_schema.tables
  WHERE table_name LIKE 'rw_view%'
  ORDER BY table_name;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  table_name | is_insertable_into 
 ------------+--------------------
  rw_view1   | NO
@@ -756,6 +1276,7 @@
   FROM information_schema.views
  WHERE table_name LIKE 'rw_view%'
  ORDER BY table_name;
+INFO:  Path param info: 0.000000
  table_name | is_updatable | is_insertable_into | is_trigger_updatable | is_trigger_deletable | is_trigger_insertable_into 
 ------------+--------------+--------------------+----------------------+----------------------+----------------------------
  rw_view1   | NO           | NO                 | NO                   | NO                   | NO
@@ -766,6 +1287,70 @@
   FROM information_schema.columns
  WHERE table_name LIKE 'rw_view%'
  ORDER BY table_name, ordinal_position;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  table_name | column_name | is_updatable 
 ------------+-------------+--------------
  rw_view1   | a           | NO
@@ -797,6 +1382,12 @@
   FROM information_schema.tables
  WHERE table_name LIKE 'rw_view%'
  ORDER BY table_name;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  table_name | is_insertable_into 
 ------------+--------------------
  rw_view1   | NO
@@ -809,6 +1400,7 @@
   FROM information_schema.views
  WHERE table_name LIKE 'rw_view%'
  ORDER BY table_name;
+INFO:  Path param info: 0.000000
  table_name | is_updatable | is_insertable_into | is_trigger_updatable | is_trigger_deletable | is_trigger_insertable_into 
 ------------+--------------+--------------------+----------------------+----------------------+----------------------------
  rw_view1   | NO           | NO                 | NO                   | NO                   | YES
@@ -819,6 +1411,70 @@
   FROM information_schema.columns
  WHERE table_name LIKE 'rw_view%'
  ORDER BY table_name, ordinal_position;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  table_name | column_name | is_updatable 
 ------------+-------------+--------------
  rw_view1   | a           | NO
@@ -833,6 +1489,12 @@
   FROM information_schema.tables
  WHERE table_name LIKE 'rw_view%'
  ORDER BY table_name;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  table_name | is_insertable_into 
 ------------+--------------------
  rw_view1   | NO
@@ -845,6 +1507,7 @@
   FROM information_schema.views
  WHERE table_name LIKE 'rw_view%'
  ORDER BY table_name;
+INFO:  Path param info: 0.000000
  table_name | is_updatable | is_insertable_into | is_trigger_updatable | is_trigger_deletable | is_trigger_insertable_into 
 ------------+--------------+--------------------+----------------------+----------------------+----------------------------
  rw_view1   | NO           | NO                 | YES                  | NO                   | YES
@@ -855,6 +1518,70 @@
   FROM information_schema.columns
  WHERE table_name LIKE 'rw_view%'
  ORDER BY table_name, ordinal_position;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  table_name | column_name | is_updatable 
 ------------+-------------+--------------
  rw_view1   | a           | NO
@@ -869,6 +1596,12 @@
   FROM information_schema.tables
  WHERE table_name LIKE 'rw_view%'
  ORDER BY table_name;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  table_name | is_insertable_into 
 ------------+--------------------
  rw_view1   | NO
@@ -881,6 +1614,7 @@
   FROM information_schema.views
  WHERE table_name LIKE 'rw_view%'
  ORDER BY table_name;
+INFO:  Path param info: 0.000000
  table_name | is_updatable | is_insertable_into | is_trigger_updatable | is_trigger_deletable | is_trigger_insertable_into 
 ------------+--------------+--------------------+----------------------+----------------------+----------------------------
  rw_view1   | NO           | NO                 | YES                  | YES                  | YES
@@ -891,6 +1625,70 @@
   FROM information_schema.columns
  WHERE table_name LIKE 'rw_view%'
  ORDER BY table_name, ordinal_position;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  table_name | column_name | is_updatable 
 ------------+-------------+--------------
  rw_view1   | a           | NO
@@ -1673,6 +2471,15 @@
   FROM information_schema.tables
  WHERE table_name LIKE E'r_\\_view%'
  ORDER BY table_name;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  table_name | is_insertable_into 
 ------------+--------------------
  rw_view1   | YES
@@ -1684,6 +2491,8 @@
   FROM information_schema.views
  WHERE table_name LIKE E'r_\\_view%'
  ORDER BY table_name;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  table_name | is_updatable | is_insertable_into 
 ------------+--------------+--------------------
  rw_view1   | YES          | YES
@@ -1695,6 +2504,82 @@
   FROM information_schema.columns
  WHERE table_name LIKE E'r_\\_view%'
  ORDER BY table_name, ordinal_position;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  table_name | column_name | is_updatable 
 ------------+-------------+--------------
  rw_view1   | ctid        | NO
@@ -1863,6 +2748,7 @@
 INSERT INTO other_tbl_child VALUES (8),(100);
 EXPLAIN (costs off)
 UPDATE rw_view1 SET a = a + 1000 FROM other_tbl_parent WHERE a = id;
+INFO:  Path param info: 0.000000
                                QUERY PLAN                                
 -------------------------------------------------------------------------
  Update on base_tbl_parent
@@ -1883,6 +2769,7 @@
 (15 rows)
 
 UPDATE rw_view1 SET a = a + 1000 FROM other_tbl_parent WHERE a = id;
+INFO:  Path param info: 0.000000
 SELECT * FROM ONLY base_tbl_parent ORDER BY a;
   a   
 ------
@@ -1919,6 +2806,11 @@
 CREATE VIEW rw_view1 AS SELECT * FROM base_tbl WHERE a < b
   WITH LOCAL CHECK OPTION;
 \d+ rw_view1
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                           View "public.rw_view1"
  Column |  Type   | Collation | Nullable | Default | Storage | Description 
 --------+---------+-----------+----------+---------+---------+-------------
@@ -1932,6 +2824,7 @@
 Options: check_option=local
 
 SELECT * FROM information_schema.views WHERE table_name = 'rw_view1';
+INFO:  Path param info: 0.000000
  table_catalog | table_schema | table_name | view_definition  | check_option | is_updatable | is_insertable_into | is_trigger_updatable | is_trigger_deletable | is_trigger_insertable_into 
 ---------------+--------------+------------+------------------+--------------+--------------+--------------------+----------------------+----------------------+----------------------------
  regression    | public       | rw_view1   |  SELECT a,      +| LOCAL        | YES          | YES                | NO                   | NO                   | NO
@@ -1973,6 +2866,11 @@
 CREATE VIEW rw_view2 AS SELECT * FROM rw_view1 WHERE a < 10
   WITH CHECK OPTION; -- implicitly cascaded
 \d+ rw_view2
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                           View "public.rw_view2"
  Column |  Type   | Collation | Nullable | Default | Storage | Description 
 --------+---------+-----------+----------+---------+---------+-------------
@@ -1984,6 +2882,7 @@
 Options: check_option=cascaded
 
 SELECT * FROM information_schema.views WHERE table_name = 'rw_view2';
+INFO:  Path param info: 0.000000
  table_catalog | table_schema | table_name |  view_definition  | check_option | is_updatable | is_insertable_into | is_trigger_updatable | is_trigger_deletable | is_trigger_insertable_into 
 ---------------+--------------+------------+-------------------+--------------+--------------+--------------------+----------------------+----------------------+----------------------------
  regression    | public       | rw_view2   |  SELECT a        +| CASCADED     | YES          | YES                | NO                   | NO                   | NO
@@ -2013,6 +2912,11 @@
 CREATE OR REPLACE VIEW rw_view2 AS SELECT * FROM rw_view1 WHERE a < 10
   WITH LOCAL CHECK OPTION;
 \d+ rw_view2
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                           View "public.rw_view2"
  Column |  Type   | Collation | Nullable | Default | Storage | Description 
 --------+---------+-----------+----------+---------+---------+-------------
@@ -2024,6 +2928,7 @@
 Options: check_option=local
 
 SELECT * FROM information_schema.views WHERE table_name = 'rw_view2';
+INFO:  Path param info: 0.000000
  table_catalog | table_schema | table_name |  view_definition  | check_option | is_updatable | is_insertable_into | is_trigger_updatable | is_trigger_deletable | is_trigger_insertable_into 
 ---------------+--------------+------------+-------------------+--------------+--------------+--------------------+----------------------+----------------------+----------------------------
  regression    | public       | rw_view2   |  SELECT a        +| LOCAL        | YES          | YES                | NO                   | NO                   | NO
@@ -2054,6 +2959,11 @@
 DETAIL:  Failing row contains (30).
 ALTER VIEW rw_view2 RESET (check_option);
 \d+ rw_view2
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                           View "public.rw_view2"
  Column |  Type   | Collation | Nullable | Default | Storage | Description 
 --------+---------+-----------+----------+---------+---------+-------------
@@ -2064,6 +2974,7 @@
   WHERE a < 10;
 
 SELECT * FROM information_schema.views WHERE table_name = 'rw_view2';
+INFO:  Path param info: 0.000000
  table_catalog | table_schema | table_name |  view_definition  | check_option | is_updatable | is_insertable_into | is_trigger_updatable | is_trigger_deletable | is_trigger_insertable_into 
 ---------------+--------------+------------+-------------------+--------------+--------------+--------------------+----------------------+----------------------+----------------------------
  regression    | public       | rw_view2   |  SELECT a        +| NONE         | YES          | YES                | NO                   | NO                   | NO
@@ -2090,6 +3001,7 @@
 CREATE VIEW rw_view2 AS SELECT * FROM rw_view1 WHERE a > 0;
 CREATE VIEW rw_view3 AS SELECT * FROM rw_view2 WITH CHECK OPTION;
 SELECT * FROM information_schema.views WHERE table_name LIKE E'rw\\_view_' ORDER BY table_name;
+INFO:  Path param info: 0.000000
  table_catalog | table_schema | table_name |  view_definition  | check_option | is_updatable | is_insertable_into | is_trigger_updatable | is_trigger_deletable | is_trigger_insertable_into 
 ---------------+--------------+------------+-------------------+--------------+--------------+--------------------+----------------------+----------------------+----------------------------
  regression    | public       | rw_view1   |  SELECT a        +| CASCADED     | YES          | YES                | NO                   | NO                   | NO
@@ -2147,7 +3059,9 @@
 ERROR:  new row violates check option for view "rw_view1"
 DETAIL:  Failing row contains (15).
 UPDATE rw_view1 SET a = a + 5; -- ok
+INFO:  Path param info: 0.000000
 UPDATE rw_view1 SET a = a + 5; -- should fail
+INFO:  Path param info: 0.000000
 ERROR:  new row violates check option for view "rw_view1"
 DETAIL:  Failing row contains (15).
 EXPLAIN (costs off) INSERT INTO rw_view1 VALUES (5);
@@ -2161,6 +3075,7 @@
 (5 rows)
 
 EXPLAIN (costs off) UPDATE rw_view1 SET a = a + 5;
+INFO:  Path param info: 0.000000
                         QUERY PLAN                         
 -----------------------------------------------------------
  Update on base_tbl b
@@ -2262,8 +3177,10 @@
 INSERT INTO rw_view2 VALUES (5); -- ok
 INSERT INTO rw_view2 VALUES (20); -- ok, but not in view (doesn't fail rw_view1's check)
 UPDATE rw_view2 SET a = 30 WHERE a = 5; -- ok, but not in view (doesn't fail rw_view1's check)
+INFO:  Path param info: 0.000000
 INSERT INTO rw_view2 VALUES (5); -- ok
 UPDATE rw_view2 SET a = -5 WHERE a = 5; -- ok, but not in view (doesn't fail rw_view2's check)
+INFO:  Path param info: 0.000000
 SELECT * FROM base_tbl;
   a  | b  
 -----+----
@@ -2338,6 +3255,12 @@
 SELECT table_name, is_insertable_into
   FROM information_schema.tables
  WHERE table_name = 'rw_view1';
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  table_name | is_insertable_into 
 ------------+--------------------
  rw_view1   | YES
@@ -2346,6 +3269,7 @@
 SELECT table_name, is_updatable, is_insertable_into
   FROM information_schema.views
  WHERE table_name = 'rw_view1';
+INFO:  Path param info: 0.000000
  table_name | is_updatable | is_insertable_into 
 ------------+--------------+--------------------
  rw_view1   | YES          | YES
@@ -2355,6 +3279,68 @@
   FROM information_schema.columns
  WHERE table_name = 'rw_view1'
  ORDER BY ordinal_position;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  table_name | column_name | is_updatable 
 ------------+-------------+--------------
  rw_view1   | person      | YES
@@ -2406,6 +3392,12 @@
 SELECT table_name, is_insertable_into
   FROM information_schema.tables
  WHERE table_name = 'rw_view2';
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  table_name | is_insertable_into 
 ------------+--------------------
  rw_view2   | YES
@@ -2414,6 +3406,7 @@
 SELECT table_name, is_updatable, is_insertable_into
   FROM information_schema.views
  WHERE table_name = 'rw_view2';
+INFO:  Path param info: 0.000000
  table_name | is_updatable | is_insertable_into 
 ------------+--------------+--------------------
  rw_view2   | YES          | YES
@@ -2423,6 +3416,68 @@
   FROM information_schema.columns
  WHERE table_name = 'rw_view2'
  ORDER BY ordinal_position;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  table_name | column_name | is_updatable 
 ------------+-------------+--------------
  rw_view2   | person      | YES
@@ -2499,6 +3554,7 @@
 (1 row)
 
 EXPLAIN (costs off) DELETE FROM rw_view1 WHERE id = 1 AND snoop(data);
+INFO:  Path param info: 0.000000
                             QUERY PLAN                             
 -------------------------------------------------------------------
  Update on base_tbl base_tbl_1
@@ -2511,6 +3567,7 @@
 (7 rows)
 
 DELETE FROM rw_view1 WHERE id = 1 AND snoop(data);
+INFO:  Path param info: 0.000000
 NOTICE:  snooped value: Row 1
 EXPLAIN (costs off) INSERT INTO rw_view1 VALUES (2, 'New row 2');
                         QUERY PLAN                         
@@ -2571,11 +3628,13 @@
 FROM t1
 WHERE a > 5 AND EXISTS(SELECT 1 FROM t12 WHERE t12.a = t1.a);
 SELECT * FROM v1 WHERE a=3; -- should not see anything
+INFO:  Path param info: 0.000000
  a | b | c | d 
 ---+---+---+---
 (0 rows)
 
 SELECT * FROM v1 WHERE a=8;
+INFO:  Path param info: 0.000000
  a | b |  c   |  d   
 ---+---+------+------
  8 | 8 | t1   | t11d
@@ -2622,6 +3681,7 @@
 
 UPDATE v1 SET a=100 WHERE snoop(a) AND leakproof(a) AND a < 7 AND a != 6;
 SELECT * FROM v1 WHERE a=100; -- Nothing should have been changed to 100
+INFO:  Path param info: 0.000000
  a | b | c | d 
 ---+---+---+---
 (0 rows)
@@ -2673,6 +3733,7 @@
 NOTICE:  snooped value: 8
 NOTICE:  snooped value: 8
 SELECT * FROM v1 WHERE b=8;
+INFO:  Path param info: 0.000000
  a | b |  c   |  d   
 ---+---+------+------
  9 | 8 | t1   | t11d
@@ -2743,6 +3804,9 @@
 (1 row)
 
 SELECT * FROM vx1;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  a 
 ---
 (0 rows)
@@ -2765,6 +3829,9 @@
 (2 rows)
 
 SELECT * FROM vx1;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  a 
 ---
 (0 rows)
@@ -2790,6 +3857,9 @@
 (2 rows)
 
 SELECT * FROM vx1;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  a 
 ---
 (0 rows)
@@ -2828,6 +3898,7 @@
 DETAIL:  Failing row contains (1, ONE, 30).
 DELETE FROM v2 WHERE a = 2; -- ok
 SELECT * FROM v2;
+INFO:  Path param info: 0.000000
  a |  b  | c  
 ---+-----+----
  1 | ONE | 10
@@ -2848,6 +3919,7 @@
 CREATE VIEW v2 WITH (security_barrier = true) AS
   SELECT * FROM v1 WHERE EXISTS (SELECT 1);
 EXPLAIN (COSTS OFF) UPDATE v2 SET a = 1;
+INFO:  Path param info: 0.000000
                     QUERY PLAN                     
 ---------------------------------------------------
  Update on t1
@@ -2916,6 +3988,7 @@
 
 select table_name, is_updatable, is_insertable_into
   from information_schema.views where table_name = 'uv_ptv';
+INFO:  Path param info: 0.000000
  table_name | is_updatable | is_insertable_into 
 ------------+--------------+--------------------
  uv_ptv     | YES          | YES
@@ -2923,6 +3996,68 @@
 
 select table_name, column_name, is_updatable
   from information_schema.columns where table_name = 'uv_ptv' order by column_name;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  table_name | column_name | is_updatable 
 ------------+-------------+--------------
  uv_ptv     | a           | YES
diff -U3 /home/dbs/pg-queryplans/postgres/src/test/regress/expected/create_am.out /home/dbs/pg-queryplans/postgres/src/test/regress/results/create_am.out
--- /home/dbs/pg-queryplans/postgres/src/test/regress/expected/create_am.out	2024-02-20 13:16:25.955611488 +0900
+++ /home/dbs/pg-queryplans/postgres/src/test/regress/results/create_am.out	2024-02-20 16:07:31.468030766 +0900
@@ -203,6 +203,7 @@
 WHERE pa.oid = pc.relam
    AND pa.amname = 'heap2'
 ORDER BY 3, 1, 2;
+INFO:  Path param info: 0.000000
  relkind | amname |             relname              
 ---------+--------+----------------------------------
  r       | heap2  | tableam_parted_b_heap2
@@ -221,6 +222,8 @@
     AND pg_am.oid = pg_depend.refobjid
     AND pg_am.amname = 'heap2'
 ORDER BY classid, objid, objsubid;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                   obj                  
 ---------------------------------------
  table tableam_tbl_heap2
@@ -235,6 +238,7 @@
   SELECT a, repeat(a::text, 100) FROM generate_series(1,9) AS a;
 SELECT amname FROM pg_class c, pg_am am
   WHERE c.relam = am.oid AND c.oid = 'heaptable'::regclass;
+INFO:  Path param info: 0.000000
  amname 
 --------
  heap
@@ -272,6 +276,7 @@
 ALTER TABLE heaptable SET ACCESS METHOD heap2;
 SELECT amname FROM pg_class c, pg_am am
   WHERE c.relam = am.oid AND c.oid = 'heaptable'::regclass;
+INFO:  Path param info: 0.000000
  amname 
 --------
  heap2
@@ -287,6 +292,7 @@
 CREATE MATERIALIZED VIEW heapmv USING heap AS SELECT * FROM heaptable;
 SELECT amname FROM pg_class c, pg_am am
   WHERE c.relam = am.oid AND c.oid = 'heapmv'::regclass;
+INFO:  Path param info: 0.000000
  amname 
 --------
  heap
@@ -295,6 +301,7 @@
 ALTER MATERIALIZED VIEW heapmv SET ACCESS METHOD heap2;
 SELECT amname FROM pg_class c, pg_am am
   WHERE c.relam = am.oid AND c.oid = 'heapmv'::regclass;
+INFO:  Path param info: 0.000000
  amname 
 --------
  heap2
@@ -350,6 +357,7 @@
     LEFT JOIN pg_am AS pa ON (pa.oid = pc.relam)
 WHERE pc.relname LIKE 'tableam_%_heapx'
 ORDER BY 3, 1, 2;
+INFO:  Path param info: 0.000000
  relkind | amname |           relname           
 ---------+--------+-----------------------------
  f       |        | tableam_fdw_heapx
diff -U3 /home/dbs/pg-queryplans/postgres/src/test/regress/expected/sanity_check.out /home/dbs/pg-queryplans/postgres/src/test/regress/results/sanity_check.out
--- /home/dbs/pg-queryplans/postgres/src/test/regress/expected/sanity_check.out	2024-02-20 13:16:25.971611203 +0900
+++ /home/dbs/pg-queryplans/postgres/src/test/regress/results/sanity_check.out	2024-02-20 16:07:31.780026212 +0900
@@ -12,6 +12,16 @@
      AND NOT EXISTS (SELECT 1 FROM pg_index i WHERE indrelid = c.oid
                      AND indkey[0] = a.attnum AND indnatts = 1
                      AND indisunique AND indimmediate);
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  relname | nspname 
 ---------+---------
 (0 rows)
@@ -50,6 +60,14 @@
  FROM check_columns
  WHERE get_columns_length(coltypes) % 8 != 0 OR
        'name'::regtype::oid = ANY(coltypes);
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  relname | attname | coltypes | get_columns_length 
 ---------+---------+----------+--------------------
 (0 rows)
diff -U3 /home/dbs/pg-queryplans/postgres/src/test/regress/expected/select_implicit_2.out /home/dbs/pg-queryplans/postgres/src/test/regress/results/select_implicit.out
--- /home/dbs/pg-queryplans/postgres/src/test/regress/expected/select_implicit_2.out	2024-02-20 13:16:25.971611203 +0900
+++ /home/dbs/pg-queryplans/postgres/src/test/regress/results/select_implicit.out	2024-02-20 16:07:31.824025569 +0900
@@ -180,6 +180,7 @@
 SELECT x.b, count(*) FROM test_missing_target x, test_missing_target y
 	WHERE x.a = y.a
 	GROUP BY x.b ORDER BY x.b;
+INFO:  Path param info: 0.000000
  b | count 
 ---+-------
  1 |     1
@@ -192,6 +193,7 @@
 SELECT count(*) FROM test_missing_target x, test_missing_target y
 	WHERE x.a = y.a
 	GROUP BY x.b ORDER BY x.b;
+INFO:  Path param info: 0.000000
  count 
 -------
      1
@@ -207,6 +209,7 @@
 FROM test_missing_target x, test_missing_target y
 	WHERE x.a = y.a
 	GROUP BY x.b ORDER BY x.b;
+INFO:  Path param info: 0.000000
 SELECT * FROM test_missing_target2;
  count 
 -------
@@ -302,6 +305,7 @@
 SELECT x.b/2, count(x.b) FROM test_missing_target x, test_missing_target y
 	WHERE x.a = y.a
 	GROUP BY x.b/2 ORDER BY x.b/2;
+INFO:  Path param info: 0.000000
  ?column? | count 
 ----------+-------
         0 |     1
@@ -324,6 +328,7 @@
 FROM test_missing_target x, test_missing_target y
 	WHERE x.a = y.a
 	GROUP BY x.b/2 ORDER BY x.b/2;
+INFO:  Path param info: 0.000000
 SELECT * FROM test_missing_target3;
  count 
 -------
diff -U3 /home/dbs/pg-queryplans/postgres/src/test/regress/expected/subselect.out /home/dbs/pg-queryplans/postgres/src/test/regress/results/subselect.out
--- /home/dbs/pg-queryplans/postgres/src/test/regress/expected/subselect.out	2024-02-20 13:16:25.975611131 +0900
+++ /home/dbs/pg-queryplans/postgres/src/test/regress/results/subselect.out	2024-02-20 16:07:31.884024693 +0900
@@ -116,6 +116,7 @@
 
 SELECT f1 AS "Uncorrelated Field" FROM SUBSELECT_TBL
   WHERE f1 IN (SELECT f2 FROM SUBSELECT_TBL);
+INFO:  Path param info: 0.000000
  Uncorrelated Field 
 --------------------
                   1
@@ -129,6 +130,9 @@
 SELECT f1 AS "Uncorrelated Field" FROM SUBSELECT_TBL
   WHERE f1 IN (SELECT f2 FROM SUBSELECT_TBL WHERE
     f2 IN (SELECT f1 FROM SUBSELECT_TBL));
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  Uncorrelated Field 
 --------------------
                   1
@@ -193,6 +197,7 @@
   FROM SUBSELECT_TBL
   WHERE (f1, f2) IN (SELECT f2, CAST(f3 AS int4) FROM SUBSELECT_TBL
                      WHERE f3 IS NOT NULL);
+INFO:  Path param info: 0.000000
  Correlated Field 
 ------------------
                 2
@@ -226,6 +231,7 @@
               (SELECT * FROM int8_tbl)
   WHERE a1 < 10 AND q1 > a1 ORDER BY q1, q2;
 SELECT * FROM view_unnamed_ss;
+INFO:  Path param info: 0.000000
  a1 |        q1        |        q2         
 ----+------------------+-------------------
   0 |              123 |               456
@@ -236,6 +242,7 @@
 (5 rows)
 
 \sv view_unnamed_ss
+INFO:  Path param info: 0.000000
 CREATE OR REPLACE VIEW public.view_unnamed_ss AS
  SELECT unnamed_subquery.a1,
     unnamed_subquery_1.q1,
@@ -255,6 +262,7 @@
   WHERE f1 = q1
   FOR UPDATE OF unnamed_subquery;
 \sv view_unnamed_ss_locking
+INFO:  Path param info: 0.000000
 CREATE OR REPLACE VIEW public.view_unnamed_ss_locking AS
  SELECT unnamed_subquery.f1,
     unnamed_subquery_1.q1,
@@ -350,6 +358,7 @@
 explain (costs off)
 select * from int4_tbl o where exists
   (select 1 from int4_tbl i where i.f1=o.f1 limit null);
+INFO:  Path param info: 0.000000
              QUERY PLAN             
 ------------------------------------
  Hash Semi Join
@@ -362,6 +371,7 @@
 explain (costs off)
 select * from int4_tbl o where not exists
   (select 1 from int4_tbl i where i.f1=o.f1 limit 1);
+INFO:  Path param info: 0.000000
              QUERY PLAN             
 ------------------------------------
  Hash Anti Join
@@ -391,6 +401,7 @@
 select count(*) from
   (select 1 from tenk1 a
    where unique1 IN (select hundred from tenk1 b)) ss;
+INFO:  Path param info: 0.000000
  count 
 -------
    100
@@ -399,6 +410,7 @@
 select count(distinct ss.ten) from
   (select ten from tenk1 a
    where unique1 IN (select hundred from tenk1 b)) ss;
+INFO:  Path param info: 0.000000
  count 
 -------
     10
@@ -407,6 +419,7 @@
 select count(*) from
   (select 1 from tenk1 a
    where unique1 IN (select distinct hundred from tenk1 b)) ss;
+INFO:  Path param info: 0.000000
  count 
 -------
    100
@@ -415,6 +428,7 @@
 select count(distinct ss.ten) from
   (select ten from tenk1 a
    where unique1 IN (select distinct hundred from tenk1 b)) ss;
+INFO:  Path param info: 0.000000
  count 
 -------
     10
@@ -434,6 +448,7 @@
 -- These cases require an extra level of distinct-ing above subquery s
 SELECT * FROM foo WHERE id IN
     (SELECT id2 FROM (SELECT DISTINCT id1, id2 FROM bar) AS s);
+INFO:  Path param info: 0.000000
  id 
 ----
   1
@@ -441,6 +456,7 @@
 
 SELECT * FROM foo WHERE id IN
     (SELECT id2 FROM (SELECT id1,id2 FROM bar GROUP BY id1,id2) AS s);
+INFO:  Path param info: 0.000000
  id 
 ----
   1
@@ -449,6 +465,7 @@
 SELECT * FROM foo WHERE id IN
     (SELECT id2 FROM (SELECT id1, id2 FROM bar UNION
                       SELECT id1, id2 FROM bar) AS s);
+INFO:  Path param info: 0.000000
  id 
 ----
   1
@@ -457,6 +474,7 @@
 -- These cases do not
 SELECT * FROM foo WHERE id IN
     (SELECT id2 FROM (SELECT DISTINCT ON (id2) id1, id2 FROM bar) AS s);
+INFO:  Path param info: 0.000000
  id 
 ----
   1
@@ -464,6 +482,7 @@
 
 SELECT * FROM foo WHERE id IN
     (SELECT id2 FROM (SELECT id2 FROM bar GROUP BY id2) AS s);
+INFO:  Path param info: 0.000000
  id 
 ----
   1
@@ -472,6 +491,7 @@
 SELECT * FROM foo WHERE id IN
     (SELECT id2 FROM (SELECT id2 FROM bar UNION
                       SELECT id2 FROM bar) AS s);
+INFO:  Path param info: 0.000000
  id 
 ----
   1
@@ -585,6 +605,27 @@
     from int4_tbl a join int4_tbl b
       on (a.f1 = (select f1 from int4_tbl c where c.f1=b.f1))
     where ordnum = a.f1;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
 select * from shipped_view;
  ttype | ordnum | partnum | value 
 -------+--------+---------+-------
@@ -611,6 +652,7 @@
   select max(unique1) from tenk1 as a
   where exists (select 1 from tenk1 as b where b.thousand = a.unique2)
 ) ss;
+INFO:  Path param info: 0.000000
  max  
 ------
  9997
@@ -639,6 +681,7 @@
 insert into float_table values (1), (2), (3);
 select * from float_table
   where float_col in (select num_col from numeric_table);
+INFO:  Path param info: 0.000000
  float_col 
 -----------
          1
@@ -648,6 +691,7 @@
 
 select * from numeric_table
   where num_col in (select float_col from float_table);
+INFO:  Path param info: 0.000000
          num_col         
 -------------------------
                        1
@@ -760,6 +804,8 @@
     ( select f1, array(select q1 from int8_tbl) as arr
       from text_tbl ) ss
   where road.name = ss.f1 );
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
 rollback;
 --
 -- Test case for sublinks pushed down into subselects via join alias expansion
@@ -771,6 +817,7 @@
    from int8_tbl) sq0
   join
   int4_tbl i4 on dummy = i4.f1;
+INFO:  Path param info: 0.000000
  qq1 
 -----
 (0 rows)
@@ -1061,6 +1108,18 @@
   and exists ( select 1 from tenk1 c where b.hundred = c.hundred
                    and not exists ( select 1 from tenk1 d
                                     where a.thousand = d.thousand ) );
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  thousand 
 ----------
 (0 rows)
@@ -1140,6 +1199,7 @@
          random() as r
   from onek i where i.unique1 = o.unique1 ) ss
 where o.ten = 0;
+INFO:  Path param info: 0.000000
                                                                                          QUERY PLAN                                                                                          
 ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  Aggregate
@@ -1164,6 +1224,7 @@
          random() as r
   from onek i where i.unique1 = o.unique1 ) ss
 where o.ten = 0;
+INFO:  Path param info: 0.000000
  sum 
 -----
  100
@@ -1180,6 +1241,7 @@
     select * from onek i2 where i2.unique1 = o.unique2
   ) ss
 where o.ten = 1;
+INFO:  Path param info: 0.000000
                                   QUERY PLAN                                  
 ------------------------------------------------------------------------------
  Aggregate
@@ -1204,6 +1266,7 @@
     select * from onek i2 where i2.unique1 = o.unique2
   ) ss
 where o.ten = 1;
+INFO:  Path param info: 0.000000
  count 
 -------
    100
@@ -1223,6 +1286,7 @@
     select * from x
   ) ss
 where o.ten = 1;
+INFO:  Path param info: 0.000000
                        QUERY PLAN                        
 ---------------------------------------------------------
  Aggregate
@@ -1250,6 +1314,7 @@
     select * from x
   ) ss
 where o.ten = 1;
+INFO:  Path param info: 0.000000
  sum  | sum  
 ------+------
  1700 | 5350
@@ -1287,6 +1352,7 @@
     values ((select s.i + 1)), (s.i + 101)
   ) as val(x)
 where s.i < 10 and (select val.x) < 110;
+INFO:  Path param info: 0.000000
   x  
 -----
    2
@@ -1342,6 +1408,7 @@
 select * from int4_tbl where
   (case when f1 in (select unique1 from tenk1 a) then f1 else null end) in
   (select ten from tenk1 b);
+INFO:  Path param info: 0.000000
                                                                                       QUERY PLAN                                                                                       
 ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  Nested Loop Semi Join
@@ -1359,6 +1426,7 @@
 select * from int4_tbl where
   (case when f1 in (select unique1 from tenk1 a) then f1 else null end) in
   (select ten from tenk1 b);
+INFO:  Path param info: 0.000000
  f1 
 ----
   0
@@ -1370,6 +1438,7 @@
 explain (verbose, costs off)
 select * from int4_tbl o where (f1, f1) in
   (select f1, generate_series(1,50) / 10 g from int4_tbl i group by f1);
+INFO:  Path param info: 0.000000
                             QUERY PLAN                             
 -------------------------------------------------------------------
  Nested Loop Semi Join
@@ -1395,6 +1464,7 @@
 
 select * from int4_tbl o where (f1, f1) in
   (select f1, generate_series(1,50) / 10 g from int4_tbl i group by f1);
+INFO:  Path param info: 0.000000
  f1 
 ----
   0
@@ -1433,6 +1503,7 @@
         select true as b, 2 as id
     ) as t2
 where b and f1 >= 0;
+INFO:  Path param info: 0.000000
                  QUERY PLAN                 
 --------------------------------------------
  Nested Loop
@@ -1462,6 +1533,7 @@
         select true as b, 2 as id
     ) as t2
 where b and f1 >= 0;
+INFO:  Path param info: 0.000000
      f1     | b | id 
 ------------+---+----
           0 | t |  2
@@ -1745,6 +1817,7 @@
 explain (verbose, costs off)
 with x as (select * from (select f1, now() as n from subselect_tbl) ss)
 select * from x, x x2 where x.n = x2.n;
+INFO:  Path param info: 0.000000
                 QUERY PLAN                 
 -------------------------------------------
  Merge Join
@@ -1768,6 +1841,7 @@
 explain (verbose, costs off)
 with x as not materialized (select * from (select f1, now() as n from subselect_tbl) ss)
 select * from x, x x2 where x.n = x2.n;
+INFO:  Path param info: 0.000000
                                  QUERY PLAN                                 
 ----------------------------------------------------------------------------
  Result
@@ -1792,6 +1866,7 @@
     select z.a || z1.a as a from z cross join z as z1
     where length(z.a || z1.a) < 5))
 select * from x;
+INFO:  Path param info: 0.000000
                         QUERY PLAN                        
 ----------------------------------------------------------
  CTE Scan on x
@@ -1819,6 +1894,7 @@
     select z.a || z1.a as a from z cross join z as z1
     where length(z.a || z1.a) < 5))
 select * from x;
+INFO:  Path param info: 0.000000
   a   
 ------
  a
diff -U3 /home/dbs/pg-queryplans/postgres/src/test/regress/expected/union.out /home/dbs/pg-queryplans/postgres/src/test/regress/results/union.out
--- /home/dbs/pg-queryplans/postgres/src/test/regress/expected/union.out	2024-02-20 13:16:25.975611131 +0900
+++ /home/dbs/pg-queryplans/postgres/src/test/regress/results/union.out	2024-02-20 16:07:31.872024868 +0900
@@ -1380,6 +1380,7 @@
 select * from
   (select * from t3 a union all select * from t3 b) ss
   join int4_tbl on f1 = expensivefunc(x);
+INFO:  Path param info: 0.000000
                          QUERY PLAN                         
 ------------------------------------------------------------
  Nested Loop
@@ -1394,6 +1395,7 @@
 select * from
   (select * from t3 a union all select * from t3 b) ss
   join int4_tbl on f1 = expensivefunc(x);
+INFO:  Path param info: 0.000000
  x | f1 
 ---+----
  0 |  0
diff -U3 /home/dbs/pg-queryplans/postgres/src/test/regress/expected/case.out /home/dbs/pg-queryplans/postgres/src/test/regress/results/case.out
--- /home/dbs/pg-queryplans/postgres/src/test/regress/expected/case.out	2024-02-20 13:16:25.955611488 +0900
+++ /home/dbs/pg-queryplans/postgres/src/test/regress/results/case.out	2024-02-20 16:07:31.820025627 +0900
@@ -186,6 +186,7 @@
 
 SELECT COALESCE(a.f, b.i, b.j)
   FROM CASE_TBL a, CASE2_TBL b;
+INFO:  Path param info: 0.000000
  coalesce 
 ----------
      10.1
@@ -217,6 +218,7 @@
 SELECT *
   FROM CASE_TBL a, CASE2_TBL b
   WHERE COALESCE(a.f, b.i, b.j) = 2;
+INFO:  Path param info: 0.000000
  i | f | i | j  
 ---+---+---+----
  4 |   | 2 | -2
@@ -226,6 +228,7 @@
 SELECT NULLIF(a.i,b.i) AS "NULLIF(a.i,b.i)",
   NULLIF(b.i, 4) AS "NULLIF(b.i,4)"
   FROM CASE_TBL a, CASE2_TBL b;
+INFO:  Path param info: 0.000000
  NULLIF(a.i,b.i) | NULLIF(b.i,4) 
 -----------------+---------------
                  |             1
@@ -257,6 +260,7 @@
 SELECT *
   FROM CASE_TBL a, CASE2_TBL b
   WHERE COALESCE(f,b.i) = 2;
+INFO:  Path param info: 0.000000
  i | f | i | j  
 ---+---+---+----
  4 |   | 2 | -2
@@ -320,6 +324,7 @@
                 ELSE (3 * j) END
   FROM CASE2_TBL b
   WHERE j = -CASE_TBL.i;
+INFO:  Path param info: 0.000000
 SELECT * FROM CASE_TBL;
   i  |   f   
 -----+-------
diff -U3 /home/dbs/pg-queryplans/postgres/src/test/regress/expected/join.out /home/dbs/pg-queryplans/postgres/src/test/regress/results/join.out
--- /home/dbs/pg-queryplans/postgres/src/test/regress/expected/join.out	2024-02-20 13:16:25.963611345 +0900
+++ /home/dbs/pg-queryplans/postgres/src/test/regress/results/join.out	2024-02-20 16:07:32.056022182 +0900
@@ -110,6 +110,7 @@
 
 SELECT *
   FROM J1_TBL t1 (a, b, c), J2_TBL t2 (d, e);
+INFO:  Path param info: 0.000000
  a | b |   c   | d | e  
 ---+---+-------+---+----
  1 | 4 | one   | 1 | -1
@@ -216,6 +217,7 @@
 SELECT t1.a, t2.e
   FROM J1_TBL t1 (a, b, c), J2_TBL t2 (d, e)
   WHERE t1.a = t2.d;
+INFO:  Path param info: 0.000000
  a | e  
 ---+----
  0 |   
@@ -234,6 +236,7 @@
 --
 SELECT *
   FROM J1_TBL CROSS JOIN J2_TBL;
+INFO:  Path param info: 0.000000
  i | j |   t   | i | k  
 ---+---+-------+---+----
  1 | 4 | one   | 1 | -1
@@ -346,6 +349,7 @@
 -- resolve previous ambiguity by specifying the table name
 SELECT t1.i, k, t
   FROM J1_TBL t1 CROSS JOIN J2_TBL t2;
+INFO:  Path param info: 0.000000
  i | k  |   t   
 ---+----+-------
  1 | -1 | one
@@ -452,6 +456,7 @@
 SELECT ii, tt, kk
   FROM (J1_TBL CROSS JOIN J2_TBL)
     AS tx (ii, jj, tt, ii2, kk);
+INFO:  Path param info: 0.000000
  ii |  tt   | kk 
 ----+-------+----
   1 | one   | -1
@@ -558,6 +563,7 @@
 SELECT tx.ii, tx.jj, tx.kk
   FROM (J1_TBL t1 (a, b, c) CROSS JOIN J2_TBL t2 (d, e))
     AS tx (ii, jj, tt, ii2, kk);
+INFO:  Path param info: 0.000000
  ii | jj | kk 
 ----+----+----
   1 |  4 | -1
@@ -663,6 +669,10 @@
 
 SELECT *
   FROM J1_TBL CROSS JOIN J2_TBL a CROSS JOIN J2_TBL b;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  i | j |   t   | i | k  | i | k  
 ---+---+-------+---+----+---+----
  1 | 4 | one   | 1 | -1 | 1 | -1
@@ -1571,6 +1581,7 @@
 -- Inner equi-join on specified column
 SELECT *
   FROM J1_TBL INNER JOIN J2_TBL USING (i);
+INFO:  Path param info: 0.000000
  i | j |   t   | k  
 ---+---+-------+----
  0 |   | zero  |   
@@ -1585,6 +1596,7 @@
 -- Same as above, slightly different syntax
 SELECT *
   FROM J1_TBL JOIN J2_TBL USING (i);
+INFO:  Path param info: 0.000000
  i | j |   t   | k  
 ---+---+-------+----
  0 |   | zero  |   
@@ -1599,6 +1611,7 @@
 SELECT *
   FROM J1_TBL t1 (a, b, c) JOIN J2_TBL t2 (a, d) USING (a)
   ORDER BY a, d;
+INFO:  Path param info: 0.000000
  a | b |   c   | d  
 ---+---+-------+----
  0 |   | zero  |   
@@ -1613,6 +1626,7 @@
 SELECT *
   FROM J1_TBL t1 (a, b, c) JOIN J2_TBL t2 (a, b) USING (b)
   ORDER BY b, t1.a;
+INFO:  Path param info: 0.000000
  b | a |   c   | a 
 ---+---+-------+---
  0 | 5 | five  |  
@@ -1623,12 +1637,14 @@
 
 -- test join using aliases
 SELECT * FROM J1_TBL JOIN J2_TBL USING (i) WHERE J1_TBL.t = 'one';  -- ok
+INFO:  Path param info: 0.000000
  i | j |  t  | k  
 ---+---+-----+----
  1 | 4 | one | -1
 (1 row)
 
 SELECT * FROM J1_TBL JOIN J2_TBL USING (i) AS x WHERE J1_TBL.t = 'one';  -- ok
+INFO:  Path param info: 0.000000
  i | j |  t  | k  
 ---+---+-----+----
  1 | 4 | one | -1
@@ -1640,6 +1656,7 @@
                                                              ^
 DETAIL:  There is an entry for table "j1_tbl", but it cannot be referenced from this part of the query.
 SELECT * FROM J1_TBL JOIN J2_TBL USING (i) AS x WHERE x.i = 1;  -- ok
+INFO:  Path param info: 0.000000
  i | j |  t  | k  
 ---+---+-----+----
  1 | 4 | one | -1
@@ -1656,18 +1673,21 @@
 SELECT * FROM J1_TBL a1 JOIN J2_TBL a2 USING (i) AS a1;  -- error
 ERROR:  table name "a1" specified more than once
 SELECT x.* FROM J1_TBL JOIN J2_TBL USING (i) AS x WHERE J1_TBL.t = 'one';
+INFO:  Path param info: 0.000000
  i 
 ---
  1
 (1 row)
 
 SELECT ROW(x.*) FROM J1_TBL JOIN J2_TBL USING (i) AS x WHERE J1_TBL.t = 'one';
+INFO:  Path param info: 0.000000
  row 
 -----
  (1)
 (1 row)
 
 SELECT row_to_json(x.*) FROM J1_TBL JOIN J2_TBL USING (i) AS x WHERE J1_TBL.t = 'one';
+INFO:  Path param info: 0.000000
  row_to_json 
 -------------
  {"i":1}
@@ -1679,6 +1699,7 @@
 --
 SELECT *
   FROM J1_TBL NATURAL JOIN J2_TBL;
+INFO:  Path param info: 0.000000
  i | j |   t   | k  
 ---+---+-------+----
  0 |   | zero  |   
@@ -1692,6 +1713,7 @@
 
 SELECT *
   FROM J1_TBL t1 (a, b, c) NATURAL JOIN J2_TBL t2 (a, d);
+INFO:  Path param info: 0.000000
  a | b |   c   | d  
 ---+---+-------+----
  0 |   | zero  |   
@@ -1705,6 +1727,7 @@
 
 SELECT *
   FROM J1_TBL t1 (a, b, c) NATURAL JOIN J2_TBL t2 (d, a);
+INFO:  Path param info: 0.000000
  a | b |  c   | d 
 ---+---+------+---
  0 |   | zero |  
@@ -1716,6 +1739,7 @@
 -- currently, Postgres will fill in with underlying names
 SELECT *
   FROM J1_TBL t1 (a, b) NATURAL JOIN J2_TBL t2 (a);
+INFO:  Path param info: 0.000000
  a | b |   t   | k  
 ---+---+-------+----
  0 |   | zero  |   
@@ -1732,6 +1756,7 @@
 --
 SELECT *
   FROM J1_TBL JOIN J2_TBL ON (J1_TBL.i = J2_TBL.i);
+INFO:  Path param info: 0.000000
  i | j |   t   | i | k  
 ---+---+-------+---+----
  0 |   | zero  | 0 |   
@@ -1745,6 +1770,7 @@
 
 SELECT *
   FROM J1_TBL JOIN J2_TBL ON (J1_TBL.i = J2_TBL.k);
+INFO:  Path param info: 0.000000
  i | j |  t   | i | k 
 ---+---+------+---+---
  0 |   | zero |   | 0
@@ -1757,6 +1783,7 @@
 --
 SELECT *
   FROM J1_TBL JOIN J2_TBL ON (J1_TBL.i <= J2_TBL.k);
+INFO:  Path param info: 0.000000
  i | j |   t   | i | k 
 ---+---+-------+---+---
  1 | 4 | one   | 2 | 2
@@ -1777,6 +1804,7 @@
 SELECT *
   FROM J1_TBL LEFT OUTER JOIN J2_TBL USING (i)
   ORDER BY i, k, t;
+INFO:  Path param info: 0.000000
  i | j |   t   | k  
 ---+---+-------+----
  0 |   | zero  |   
@@ -1797,6 +1825,7 @@
 SELECT *
   FROM J1_TBL LEFT JOIN J2_TBL USING (i)
   ORDER BY i, k, t;
+INFO:  Path param info: 0.000000
  i | j |   t   | k  
 ---+---+-------+----
  0 |   | zero  |   
@@ -1816,6 +1845,7 @@
 
 SELECT *
   FROM J1_TBL RIGHT OUTER JOIN J2_TBL USING (i);
+INFO:  Path param info: 0.000000
  i | j |   t   | k  
 ---+---+-------+----
  0 |   | zero  |   
@@ -1831,6 +1861,7 @@
 
 SELECT *
   FROM J1_TBL RIGHT JOIN J2_TBL USING (i);
+INFO:  Path param info: 0.000000
  i | j |   t   | k  
 ---+---+-------+----
  0 |   | zero  |   
@@ -1847,6 +1878,7 @@
 SELECT *
   FROM J1_TBL FULL OUTER JOIN J2_TBL USING (i)
   ORDER BY i, k, t;
+INFO:  Path param info: 0.000000
  i | j |   t   | k  
 ---+---+-------+----
  0 |   | zero  |   
@@ -1869,6 +1901,7 @@
 SELECT *
   FROM J1_TBL FULL JOIN J2_TBL USING (i)
   ORDER BY i, k, t;
+INFO:  Path param info: 0.000000
  i | j |   t   | k  
 ---+---+-------+----
  0 |   | zero  |   
@@ -1890,12 +1923,14 @@
 
 SELECT *
   FROM J1_TBL LEFT JOIN J2_TBL USING (i) WHERE (k = 1);
+INFO:  Path param info: 0.000000
  i | j | t | k 
 ---+---+---+---
 (0 rows)
 
 SELECT *
   FROM J1_TBL LEFT JOIN J2_TBL USING (i) WHERE (i = 1);
+INFO:  Path param info: 0.000000
  i | j |  t  | k  
 ---+---+-----+----
  1 | 4 | one | -1
@@ -1909,6 +1944,9 @@
 where exists(select * from tenk1 b
              where a.twothousand = b.twothousand and a.fivethous <> b.fivethous)
       and i4.f1 = a.tenthous;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                   QUERY PLAN                  
 ----------------------------------------------
  Hash Semi Join
@@ -1940,6 +1978,8 @@
 INSERT INTO t3 VALUES ( 'cc', 23 );
 INSERT INTO t3 VALUES ( 'dd', 33 );
 SELECT * FROM t1 FULL JOIN t2 USING (name) FULL JOIN t3 USING (name);
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  name | n  | n  | n  
 ------+----+----+----
  bb   | 11 | 12 | 13
@@ -1957,6 +1997,7 @@
 INNER JOIN
 (SELECT * FROM t3) s3
 USING (name);
+INFO:  Path param info: 0.000000
  name | n  | n  
 ------+----+----
  bb   | 12 | 13
@@ -1968,6 +2009,7 @@
 LEFT JOIN
 (SELECT * FROM t3) s3
 USING (name);
+INFO:  Path param info: 0.000000
  name | n  | n  
 ------+----+----
  bb   | 12 | 13
@@ -1980,6 +2022,7 @@
 FULL JOIN
 (SELECT * FROM t3) s3
 USING (name);
+INFO:  Path param info: 0.000000
  name | n  | n  
 ------+----+----
  bb   | 12 | 13
@@ -1994,6 +2037,7 @@
 (SELECT name, n as s2_n, 2 as s2_2 FROM t2) as s2
 NATURAL INNER JOIN
 (SELECT name, n as s3_n, 3 as s3_2 FROM t3) s3;
+INFO:  Path param info: 0.000000
  name | s2_n | s2_2 | s3_n | s3_2 
 ------+------+------+------+------
  bb   |   12 |    2 |   13 |    3
@@ -2004,6 +2048,7 @@
 (SELECT name, n as s2_n, 2 as s2_2 FROM t2) as s2
 NATURAL LEFT JOIN
 (SELECT name, n as s3_n, 3 as s3_2 FROM t3) s3;
+INFO:  Path param info: 0.000000
  name | s2_n | s2_2 | s3_n | s3_2 
 ------+------+------+------+------
  bb   |   12 |    2 |   13 |    3
@@ -2015,6 +2060,7 @@
 (SELECT name, n as s2_n, 2 as s2_2 FROM t2) as s2
 NATURAL FULL JOIN
 (SELECT name, n as s3_n, 3 as s3_2 FROM t3) s3;
+INFO:  Path param info: 0.000000
  name | s2_n | s2_2 | s3_n | s3_2 
 ------+------+------+------+------
  bb   |   12 |    2 |   13 |    3
@@ -2029,6 +2075,10 @@
 (SELECT name, n as s2_n, 2 as s2_2 FROM t2) as s2
 NATURAL INNER JOIN
 (SELECT name, n as s3_n, 3 as s3_2 FROM t3) s3;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  name | s1_n | s1_1 | s2_n | s2_2 | s3_n | s3_2 
 ------+------+------+------+------+------+------
  bb   |   11 |    1 |   12 |    2 |   13 |    3
@@ -2040,6 +2090,8 @@
 (SELECT name, n as s2_n, 2 as s2_2 FROM t2) as s2
 NATURAL FULL JOIN
 (SELECT name, n as s3_n, 3 as s3_2 FROM t3) s3;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  name | s1_n | s1_1 | s2_n | s2_2 | s3_n | s3_2 
 ------+------+------+------+------+------+------
  bb   |   11 |    1 |   12 |    2 |   13 |    3
@@ -2056,6 +2108,8 @@
     NATURAL FULL JOIN
     (SELECT name, n as s3_n FROM t3) as s3
   ) ss2;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  name | s1_n | s2_n | s3_n 
 ------+------+------+------
  bb   |   11 |   12 |   13
@@ -2072,6 +2126,8 @@
     NATURAL FULL JOIN
     (SELECT name, n as s3_n FROM t3) as s3
   ) ss2;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  name | s1_n | s2_n | s2_2 | s3_n 
 ------+------+------+------+------
  bb   |   11 |   12 |    2 |   13
@@ -2086,6 +2142,7 @@
 FULL JOIN
   (SELECT name, 2 as s2_n FROM t2) as s2
 ON (s1_n = s2_n);
+INFO:  Path param info: 0.000000
  name | s1_n | name | s2_n 
 ------+------+------+------
       |      | bb   |    2
@@ -2126,6 +2183,7 @@
 (4 rows)
 
 select * from x left join y on (x1 = y1 and x2 is not null);
+INFO:  Path param info: 0.000000
  x1 | x2 | y1 | y2  
 ----+----+----+-----
   1 | 11 |  1 | 111
@@ -2136,6 +2194,7 @@
 (5 rows)
 
 select * from x left join y on (x1 = y1 and y2 is not null);
+INFO:  Path param info: 0.000000
  x1 | x2 | y1 | y2  
 ----+----+----+-----
   1 | 11 |  1 | 111
@@ -2147,6 +2206,9 @@
 
 select * from (x left join y on (x1 = y1)) left join x xx(xx1,xx2)
 on (x1 = xx1);
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  x1 | x2 | y1 | y2  | xx1 | xx2 
 ----+----+----+-----+-----+-----
   1 | 11 |  1 | 111 |   1 |  11
@@ -2158,6 +2220,9 @@
 
 select * from (x left join y on (x1 = y1)) left join x xx(xx1,xx2)
 on (x1 = xx1 and x2 is not null);
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  x1 | x2 | y1 | y2  | xx1 | xx2 
 ----+----+----+-----+-----+-----
   1 | 11 |  1 | 111 |   1 |  11
@@ -2169,6 +2234,8 @@
 
 select * from (x left join y on (x1 = y1)) left join x xx(xx1,xx2)
 on (x1 = xx1 and y2 is not null);
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  x1 | x2 | y1 | y2  | xx1 | xx2 
 ----+----+----+-----+-----+-----
   1 | 11 |  1 | 111 |   1 |  11
@@ -2180,6 +2247,9 @@
 
 select * from (x left join y on (x1 = y1)) left join x xx(xx1,xx2)
 on (x1 = xx1 and xx2 is not null);
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  x1 | x2 | y1 | y2  | xx1 | xx2 
 ----+----+----+-----+-----+-----
   1 | 11 |  1 | 111 |   1 |  11
@@ -2192,6 +2262,9 @@
 -- these should NOT give the same answers as above
 select * from (x left join y on (x1 = y1)) left join x xx(xx1,xx2)
 on (x1 = xx1) where (x2 is not null);
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  x1 | x2 | y1 | y2  | xx1 | xx2 
 ----+----+----+-----+-----+-----
   1 | 11 |  1 | 111 |   1 |  11
@@ -2201,6 +2274,9 @@
 
 select * from (x left join y on (x1 = y1)) left join x xx(xx1,xx2)
 on (x1 = xx1) where (y2 is not null);
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  x1 | x2 | y1 | y2  | xx1 | xx2 
 ----+----+----+-----+-----+-----
   1 | 11 |  1 | 111 |   1 |  11
@@ -2210,6 +2286,9 @@
 
 select * from (x left join y on (x1 = y1)) left join x xx(xx1,xx2)
 on (x1 = xx1) where (xx2 is not null);
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  x1 | x2 | y1 | y2  | xx1 | xx2 
 ----+----+----+-----+-----+-----
   1 | 11 |  1 | 111 |   1 |  11
@@ -2224,6 +2303,10 @@
 select count(*) from tenk1 a where unique1 in
   (select unique1 from tenk1 b join tenk1 c using (unique1)
    where b.unique2 = 42);
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  count 
 -------
      1
@@ -2237,6 +2320,11 @@
   x.unique1 in (select a.f1 from int4_tbl a,float8_tbl b where a.f1=b.f1) and
   x.unique1 = 0 and
   x.unique1 in (select aa.f1 from int4_tbl aa,float8_tbl bb where aa.f1=bb.f1);
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  count 
 -------
      1
@@ -2263,6 +2351,7 @@
 select aa, bb, unique1, unique1
   from tenk1 right join b_star on aa = unique1
   where bb < bb and bb is null;
+INFO:  Path param info: 0.000000
         QUERY PLAN        
 --------------------------
  Result
@@ -2272,6 +2361,7 @@
 select aa, bb, unique1, unique1
   from tenk1 right join b_star on aa = unique1
   where bb < bb and bb is null;
+INFO:  Path param info: 0.000000
  aa | bb | unique1 | unique1 
 ----+----+---------+---------
 (0 rows)
@@ -2283,6 +2373,7 @@
 select * from int8_tbl i1 left join (int8_tbl i2 join
   (select 123 as x) ss on i2.q1 = x) on i1.q2 = i2.q2
 order by 1, 2;
+INFO:  Path param info: 0.000000
                 QUERY PLAN                 
 -------------------------------------------
  Sort
@@ -2298,6 +2389,7 @@
 select * from int8_tbl i1 left join (int8_tbl i2 join
   (select 123 as x) ss on i2.q1 = x) on i1.q2 = i2.q2
 order by 1, 2;
+INFO:  Path param info: 0.000000
         q1        |        q2         | q1  |        q2        |  x  
 ------------------+-------------------+-----+------------------+-----
               123 |               456 | 123 |              456 | 123
@@ -2320,6 +2412,45 @@
   tenk1 t4,
   tenk1 t5
 where t4.thousand = t5.unique1 and ss.x1 = t4.tenthous and ss.x2 = t5.stringu1;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  count 
 -------
   1000
@@ -2335,6 +2466,15 @@
   (select sum(f1)+1 as f1 from int4_tbl i4a) a,
   (select sum(f1) as f1 from int4_tbl i4b) b
 where b.f1 = t.thousand and a.f1 = b.f1 and (a.f1+b.f1+999) = t.tenthous;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                                    QUERY PLAN                                                    
 -----------------------------------------------------------------------------------------------------------------
  Nested Loop
@@ -2353,6 +2493,15 @@
   (select sum(f1)+1 as f1 from int4_tbl i4a) a,
   (select sum(f1) as f1 from int4_tbl i4b) b
 where b.f1 = t.thousand and a.f1 = b.f1 and (a.f1+b.f1+999) = t.tenthous;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  f1 | f1 | thousand | tenthous 
 ----+----+----------+----------
 (0 rows)
@@ -2366,6 +2515,10 @@
   left join int4_tbl t3 on t3.f1 > 0
   left join int4_tbl t4 on t3.f1 > 1
 where t4.f1 is null;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                       QUERY PLAN                       
 -------------------------------------------------------
  Nested Loop
@@ -2387,6 +2540,10 @@
   left join int4_tbl t3 on t3.f1 > 0
   left join int4_tbl t4 on t3.f1 > 1
 where t4.f1 is null;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  f1 
 ----
 (0 rows)
@@ -2396,6 +2553,10 @@
 from int4_tbl t1 left join int4_tbl t2 on true
   left join int4_tbl t3 on t2.f1 > 0
   left join int4_tbl t4 on t3.f1 > 0;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                       QUERY PLAN                       
 -------------------------------------------------------
  Nested Loop Left Join
@@ -2417,6 +2578,15 @@
   left join onek t2 on t1.unique1 = t2.unique1
   left join onek t3 on t2.unique1 != t3.unique1
   left join onek t4 on t3.unique1 = t4.unique1;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                      QUERY PLAN                     
 ----------------------------------------------------
  Nested Loop Left Join
@@ -2440,6 +2610,13 @@
              left join int4_tbl t3 on t2.f1 = t3.f1
              left join int4_tbl t4 on t3.f1 = t4.f1) s on true
   inner join int4_tbl t5 on true;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                          QUERY PLAN                          
 -------------------------------------------------------------
  Nested Loop
@@ -2464,6 +2641,9 @@
   left join int4_tbl t2 on true
   left join int4_tbl t3 on true
   left join int4_tbl t4 on t2.f1 = t3.f1;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                    QUERY PLAN                    
 -------------------------------------------------
  Nested Loop Left Join
@@ -2484,6 +2664,10 @@
   left join int4_tbl t2 on true
   left join int4_tbl t3 on t2.f1 = t3.f1
   left join int4_tbl t4 on t3.f1 != t4.f1;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                       QUERY PLAN                       
 -------------------------------------------------------
  Nested Loop Left Join
@@ -2505,6 +2689,11 @@
   left join (int4_tbl t2 left join int4_tbl t3 on t2.f1 > 0) on t2.f1 > 1
   left join int4_tbl t4 on t2.f1 > 2 and t3.f1 > 3
 where t1.f1 = coalesce(t2.f1, 1);
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                      QUERY PLAN                     
 ----------------------------------------------------
  Nested Loop Left Join
@@ -2529,6 +2718,11 @@
                 where t3.f1 is null) s
              left join tenk1 t4 on s.f1 > 1)
     on s.f1 = t1.f1;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                    QUERY PLAN                    
 -------------------------------------------------
  Hash Right Join
@@ -2553,6 +2747,11 @@
                 where t2.f1 <> coalesce(t3.f1, -1)) s
              left join tenk1 t4 on s.f1 > 1)
     on s.f1 = t1.f1;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                            QUERY PLAN                            
 -----------------------------------------------------------------
  Nested Loop Left Join
@@ -2576,6 +2775,13 @@
     left join onek t2 on t1.unique1 = t2.unique1
     left join onek t3 on t2.unique1 = t3.unique1
     left join onek t4 on t3.unique1 = t4.unique1 and t2.unique2 = t4.unique2;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                QUERY PLAN                               
 ------------------------------------------------------------------------
  Hash Left Join
@@ -2598,6 +2804,10 @@
     (int8_tbl t2 left join int8_tbl t3 full join int8_tbl t4 on false on false)
     left join int8_tbl t5 on t2.q1 = t5.q1
 on t2.q2 = 123;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                     QUERY PLAN                    
 --------------------------------------------------
  Nested Loop Left Join
@@ -2620,6 +2830,8 @@
     left join lateral
       (select * from int8_tbl t3 where t3.q1 = t2.q1 offset 0) s
       on t2.q1 = 1;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                 QUERY PLAN                 
 -------------------------------------------
  Nested Loop Left Join
@@ -2638,6 +2850,8 @@
     left join lateral
       (select * from generate_series(t2.q1, 100)) s
       on t2.q1 = 1;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                      QUERY PLAN                     
 ----------------------------------------------------
  Nested Loop Left Join
@@ -2655,6 +2869,8 @@
     left join lateral
       (select t2.q1 from int8_tbl t3) s
       on t2.q1 = 1;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                 QUERY PLAN                 
 -------------------------------------------
  Nested Loop Left Join
@@ -2672,6 +2888,8 @@
     left join lateral
       (select * from onek t3 where t3.two = t2.two offset 0) s
       on t2.unique1 = 1;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                     QUERY PLAN                    
 --------------------------------------------------
  Nested Loop Left Join
@@ -2696,6 +2914,7 @@
   j1_tbl full join
   (select * from j2_tbl order by j2_tbl.i desc, j2_tbl.k asc) j2_tbl
   on j1_tbl.i = j2_tbl.i and j1_tbl.i = j2_tbl.k;
+INFO:  Path param info: 0.000000
                            QUERY PLAN                            
 -----------------------------------------------------------------
  Merge Full Join
@@ -2712,6 +2931,7 @@
   j1_tbl full join
   (select * from j2_tbl order by j2_tbl.i desc, j2_tbl.k asc) j2_tbl
   on j1_tbl.i = j2_tbl.i and j1_tbl.i = j2_tbl.k;
+INFO:  Path param info: 0.000000
  i | j |   t   | i | k  
 ---+---+-------+---+----
    |   |       |   |  0
@@ -2744,6 +2964,7 @@
   left join
   (select * from tenk1 y order by y.unique2) y
   on x.thousand = y.unique2 and x.twothousand = y.hundred and x.fivethous = y.unique2;
+INFO:  Path param info: 0.000000
                                     QUERY PLAN                                    
 ----------------------------------------------------------------------------------
  Aggregate
@@ -2762,6 +2983,7 @@
   left join
   (select * from tenk1 y order by y.unique2) y
   on x.thousand = y.unique2 and x.twothousand = y.hundred and x.fivethous = y.unique2;
+INFO:  Path param info: 0.000000
  count 
 -------
  10000
@@ -2780,6 +3002,7 @@
 from tenk1 x inner join tenk1 y on x.thousand = y.thousand
 group by x.thousand, x.twothousand
 order by x.thousand desc, x.twothousand;
+INFO:  Path param info: 0.000000
                                     QUERY PLAN                                    
 ----------------------------------------------------------------------------------
  GroupAggregate
@@ -2821,6 +3044,7 @@
 INSERT INTO t3 VALUES (7, 8);
 INSERT INTO t3 VALUES (500, 100);
 DELETE FROM t3 USING t1 table1 WHERE t3.x = table1.a;
+INFO:  Path param info: 0.000000
 SELECT * FROM t3;
   x  |  y  
 -----+-----
@@ -2830,6 +3054,9 @@
 (3 rows)
 
 DELETE FROM t3 USING t1 JOIN t2 USING (a) WHERE t3.x > t1.a;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
 SELECT * FROM t3;
  x | y 
 ---+---
@@ -2838,6 +3065,7 @@
 (2 rows)
 
 DELETE FROM t3 USING t3 t3_other WHERE t3.x = t3_other.x AND t3.y = t3_other.y;
+INFO:  Path param info: 0.000000
 SELECT * FROM t3;
  x | y 
 ---+---
@@ -2847,6 +3075,7 @@
 create temp table t2a () inherits (t2);
 insert into t2a values (200, 2001);
 select * from t1 left join t2 on (t1.a = t2.a);
+INFO:  Path param info: -1.000000
   a  |  b   |  a  |  b   
 -----+------+-----+------
    5 |   10 |     |     
@@ -2866,6 +3095,10 @@
 select t1.*, t2.*, unnamed_join.* from
   t1 join t2 on (t1.a = t2.a), t3 as unnamed_join
   for update of unnamed_join;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  a | b | a | b | x | y 
 ---+---+---+---+---+---
 (0 rows)
@@ -2873,6 +3106,10 @@
 select foo.*, unnamed_join.* from
   t1 join t2 using (a) as foo, t3 as unnamed_join
   for update of unnamed_join;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  a | x | y 
 ---+---+---
 (0 rows)
@@ -2908,6 +3145,7 @@
 set enable_nestloop to off;
 -- these should give the same results
 select tt1.*, tt2.* from tt1 left join tt2 on tt1.joincol = tt2.joincol;
+INFO:  Path param info: 0.000000
  tt1_id | joincol | tt2_id | joincol 
 --------+---------+--------+---------
       1 |      11 |     21 |      11
@@ -2916,6 +3154,7 @@
 (3 rows)
 
 select tt1.*, tt2.* from tt2 right join tt1 on tt1.joincol = tt2.joincol;
+INFO:  Path param info: 0.000000
  tt1_id | joincol | tt2_id | joincol 
 --------+---------+--------+---------
       1 |      11 |     21 |      11
@@ -2934,6 +3173,7 @@
 explain (costs off)
 select count(*) from tenk1 a, tenk1 b
   where a.hundred = b.thousand and (b.fivethous % 10) < 10;
+INFO:  Path param info: 0.000000
                          QUERY PLAN                         
 ------------------------------------------------------------
  Aggregate
@@ -2947,6 +3187,7 @@
 
 select count(*) from tenk1 a, tenk1 b
   where a.hundred = b.thousand and (b.fivethous % 10) < 10;
+INFO:  Path param info: 0.000000
  count  
 --------
  100000
@@ -2975,6 +3216,10 @@
 ) AS d ON (a.f1 = d.f1)
 WHERE COALESCE(d.f1, 0) = 0
 ORDER BY 1;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                   QUERY PLAN                   
 -----------------------------------------------
  Sort
@@ -3001,6 +3246,10 @@
 ) AS d ON (a.f1 = d.f1)
 WHERE COALESCE(d.f1, 0) = 0
 ORDER BY 1;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
   f1  
 ------
     0
@@ -3015,6 +3264,7 @@
 explain (costs off)
 select a.* from tenk1 a
 where unique1 in (select unique2 from tenk1 b);
+INFO:  Path param info: 0.000000
                          QUERY PLAN                         
 ------------------------------------------------------------
  Hash Semi Join
@@ -3039,6 +3289,7 @@
 explain (costs off)
 select a.* from tenk1 a
 where exists (select 1 from tenk1 b where a.unique1 = b.unique2);
+INFO:  Path param info: 0.000000
                          QUERY PLAN                         
 ------------------------------------------------------------
  Hash Semi Join
@@ -3051,6 +3302,7 @@
 explain (costs off)
 select a.* from tenk1 a
 where not exists (select 1 from tenk1 b where a.unique1 = b.unique2);
+INFO:  Path param info: 0.000000
                          QUERY PLAN                         
 ------------------------------------------------------------
  Hash Anti Join
@@ -3063,6 +3315,7 @@
 explain (costs off)
 select a.* from tenk1 a left join tenk1 b on a.unique1 = b.unique2
 where b.unique2 is null;
+INFO:  Path param info: 0.000000
                          QUERY PLAN                         
 ------------------------------------------------------------
  Hash Anti Join
@@ -3086,6 +3339,11 @@
               ) a1 on t3.c2 = a1.c1
   where t1.c1 = t2.c2
 );
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                        QUERY PLAN                        
 ---------------------------------------------------------
  Hash Anti Join
@@ -3125,6 +3383,7 @@
 insert into tt6 values(1, 2);
 insert into tt6 values(2, 9);
 select * from tt5,tt6 where tt5.f1 = tt6.f1 and tt5.f1 = tt5.f2 - tt6.f2;
+INFO:  Path param info: 0.000000
  f1 | f2 | f1 | f2 
 ----+----+----+----
   1 | 10 |  1 |  9
@@ -3147,6 +3406,10 @@
      left join (SELECT * FROM yy where pkyy = 101) as yya ON yy.pkyy = yya.pkyy
      left join xx xxa on yya.pkxx = xxa.pkxx
      left join xx xxb on coalesce (xxa.pkxx, 1) = xxb.pkxx;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  yy_pkyy | yy_pkxx | yya_pkyy | xxa_pkxx | xxb_pkxx 
 ---------+---------+----------+----------+----------
      101 |       1 |      101 |        1 |        1
@@ -3167,6 +3430,9 @@
   zt2 left join zt3 on (f2 = f3)
       left join zt1 on (f3 = f1)
 where f2 = 53;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  f2 | f3 | f1 
 ----+----+----
  53 |    |   
@@ -3177,6 +3443,9 @@
   zt2 left join zt3 on (f2 = f3)
       left join zv1 on (f3 = f1)
 where f2 = 53;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  f2 | f3 | f1 | junk 
 ----+----+----+------
  53 |    |    | 
@@ -3190,6 +3459,7 @@
 from tenk1 a left join tenk1 b on a.unique2 = b.tenthous
 where a.unique1 = 42 and
       ((b.unique2 is null and a.ten = 2) or b.hundred = 3);
+INFO:  Path param info: 0.000000
  unique2 | ten | tenthous | unique2 | hundred 
 ---------+-----+----------+---------+---------
 (0 rows)
@@ -3202,12 +3472,18 @@
     on (a.unique2 = b.unique1 and exists
         (select 1 from tenk1 c where c.thousand = b.unique2 and $1));
 execute foo(true);
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  count 
 -------
  10000
 (1 row)
 
 execute foo(false);
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  count 
 -------
  10000
@@ -3223,6 +3499,7 @@
 create temp table a (i integer);
 create temp table b (x integer, y integer);
 select * from a left join b on i = x and i = y and x = i;
+INFO:  Path param info: 0.000000
  i | x | y 
 ---+---+---
 (0 rows)
@@ -3237,6 +3514,7 @@
 create index on tidv (idv);
 explain (costs off)
 select a.idv, b.idv from tidv a, tidv b where a.idv = b.idv;
+INFO:  Path param info: 0.000000
                         QUERY PLAN                        
 ----------------------------------------------------------
  Merge Join
@@ -3250,6 +3528,7 @@
 set enable_hashjoin = 0;
 explain (costs off)
 select a.idv, b.idv from tidv a, tidv b where a.idv = b.idv;
+INFO:  Path param info: 0.000000
                      QUERY PLAN                     
 ----------------------------------------------------
  Nested Loop
@@ -3265,6 +3544,8 @@
 select t1.q2, count(t2.*)
 from int8_tbl t1 left join int8_tbl t2 on (t1.q2 = t2.q1)
 group by t1.q2 order by 1;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
         q2         | count 
 -------------------+-------
  -4567890123456789 |     0
@@ -3276,6 +3557,8 @@
 select t1.q2, count(t2.*)
 from int8_tbl t1 left join (select * from int8_tbl) t2 on (t1.q2 = t2.q1)
 group by t1.q2 order by 1;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
         q2         | count 
 -------------------+-------
  -4567890123456789 |     0
@@ -3287,6 +3570,8 @@
 select t1.q2, count(t2.*)
 from int8_tbl t1 left join (select * from int8_tbl offset 0) t2 on (t1.q2 = t2.q1)
 group by t1.q2 order by 1;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
         q2         | count 
 -------------------+-------
  -4567890123456789 |     0
@@ -3300,6 +3585,8 @@
   (select q1, case when q2=1 then 1 else q2 end as q2 from int8_tbl) t2
   on (t1.q2 = t2.q1)
 group by t1.q2 order by 1;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
         q2         | count 
 -------------------+-------
  -4567890123456789 |     0
@@ -3342,6 +3629,11 @@
   ) as ss
   on (c.a = ss.code)
 order by c.name;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  name | code | b_cnt | const 
 ------+------+-------+-------
  A    | p    |     2 |    -1
@@ -3369,6 +3661,9 @@
     ON sub4.key5 = sub3.key3
 ) sub2
 ON sub1.key1 = sub2.key3;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  key1 | key3 | value2 | value3 
 ------+------+--------+--------
     1 |    1 |      1 |      1
@@ -3390,6 +3685,9 @@
     ON sub4.key5 = sub3.key3
 ) sub2
 ON sub1.key1 = sub2.key3;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  key1 | key3 | value2 | value3 
 ------+------+--------+--------
     1 |    1 |      1 |      1
@@ -3406,6 +3704,8 @@
   ( SELECT COALESCE(q2, -1) AS qq FROM int8_tbl b ) AS ss2
   USING (qq)
   INNER JOIN tenk1 c ON qq = unique2;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                                QUERY PLAN                                                
 ---------------------------------------------------------------------------------------------------------
  Nested Loop
@@ -3425,6 +3725,8 @@
   ( SELECT COALESCE(q2, -1) AS qq FROM int8_tbl b ) AS ss2
   USING (qq)
   INNER JOIN tenk1 c ON qq = unique2;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  qq  | unique1 
 -----+---------
  123 |    4596
@@ -3474,6 +3776,10 @@
     ) as ss2
     on ss2.id = nt3.nt2_id
 where nt3.id = 1 and ss2.b3;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                   QUERY PLAN                   
 -----------------------------------------------
  Nested Loop
@@ -3498,6 +3804,10 @@
     ) as ss2
     on ss2.id = nt3.nt2_id
 where nt3.id = 1 and ss2.b3;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  id 
 ----
   1
@@ -3514,6 +3824,7 @@
 where
   1 = (select 1 from int8_tbl t3 where ss.y is not null limit 1)
 order by 1,2;
+INFO:  Path param info: 0.000000
                         QUERY PLAN                         
 -----------------------------------------------------------
  Sort
@@ -3538,6 +3849,7 @@
 where
   1 = (select 1 from int8_tbl t3 where ss.y is not null limit 1)
 order by 1,2;
+INFO:  Path param info: 0.000000
         q1        |        q2        |        x         | y  
 ------------------+------------------+------------------+----
               123 | 4567890123456789 | 4567890123456789 | 42
@@ -3564,6 +3876,13 @@
       right join int4_tbl as i43 on (i43.f1 > 1)
       where ss1.loc = ss1.lat) as ss2
 where i41.f1 > 0;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                     QUERY PLAN                    
 --------------------------------------------------
  Nested Loop
@@ -3590,6 +3909,13 @@
       right join int4_tbl as i43 on (i43.f1 > 1)
       where ss1.loc = ss1.lat) as ss2
 where i41.f1 > 0;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
      f1     | x 
 ------------+---
      123456 | 1
@@ -3618,6 +3944,7 @@
 -- test the corner cases FULL JOIN ON TRUE and FULL JOIN ON FALSE
 --
 select * from int4_tbl a full join int4_tbl b on true;
+INFO:  Path param info: 0.000000
      f1      |     f1      
 -------------+-------------
            0 |           0
@@ -3648,6 +3975,7 @@
 (25 rows)
 
 select * from int4_tbl a full join int4_tbl b on false;
+INFO:  Path param info: 0.000000
      f1      |     f1      
 -------------+-------------
              |           0
@@ -3674,6 +4002,16 @@
   tenk1 join int4_tbl on f1 = twothousand,
   q1, q2
 where q1 = thousand or q2 = thousand;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                QUERY PLAN                               
 ------------------------------------------------------------------------
  Hash Join
@@ -3698,6 +4036,17 @@
   tenk1 join int4_tbl on f1 = twothousand,
   q1, q2
 where thousand = (q1 + q2);
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                           QUERY PLAN                          
 --------------------------------------------------------------
  Hash Join
@@ -3721,6 +4070,12 @@
 select * from
   tenk1, int8_tbl a, int8_tbl b
 where thousand = a.q1 and tenthous = b.q1 and a.q2 = 1 and b.q2 = 2;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                              QUERY PLAN                              
 ---------------------------------------------------------------------
  Nested Loop
@@ -3749,6 +4104,35 @@
   left join tenk1 t2
   on (subq1.y1 = t2.unique1)
 where t1.unique2 < 42 and t1.stringu1 > t2.stringu2;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                               QUERY PLAN                               
 -----------------------------------------------------------------------
  Nested Loop
@@ -3778,6 +4162,35 @@
   left join tenk1 t2
   on (subq1.y1 = t2.unique1)
 where t1.unique2 < 42 and t1.stringu1 > t2.stringu2;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  unique2 | stringu1 | unique1 | stringu2 
 ---------+----------+---------+----------
       11 | WFAAAA   |       3 | LKIAAA
@@ -3799,6 +4212,49 @@
     on i8.q1 = i4.f1
   on t1.tenthous = ss1.d1
 where t1.unique1 < i4.f1;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  d1 
 ----
 (0 rows)
@@ -3817,6 +4273,11 @@
   left join tenk1 t2
   on (subq1.y1 = t2.unique1)
 where t1.unique2 < 42 and t1.stringu1 > t2.stringu2;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                            QUERY PLAN                            
 -----------------------------------------------------------------
  Nested Loop
@@ -3842,6 +4303,11 @@
   left join tenk1 t2
   on (subq1.y1 = t2.unique1)
 where t1.unique2 < 42 and t1.stringu1 > t2.stringu2;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  unique2 | stringu1 | unique1 | stringu2 
 ---------+----------+---------+----------
       11 | WFAAAA   |       3 | LKIAAA
@@ -3853,6 +4319,7 @@
 select * from
   (select 1 as x) ss1 left join (select 2 as y) ss2 on (true),
   lateral (select ss2.y as z limit 1) ss3;
+INFO:  Path param info: 0.000000
         QUERY PLAN         
 ---------------------------
  Nested Loop
@@ -3868,6 +4335,7 @@
 select * from
   (select 1 as x) ss1 left join (select 2 as y) ss2 on (true),
   lateral (select ss2.y as z limit 1) ss3;
+INFO:  Path param info: 0.000000
  x | y | z 
 ---+---+---
  1 | 2 | 2
@@ -3884,6 +4352,7 @@
            union all
            select a as b) as t3
 where b;
+INFO:  Path param info: 0.000000
               QUERY PLAN               
 ---------------------------------------
  Nested Loop
@@ -3903,6 +4372,7 @@
            union all
            select a as b) as t3
 where b;
+INFO:  Path param info: 0.000000
  z | a | b 
 ---+---+---
  0 | t | t
@@ -3936,6 +4406,107 @@
   inner join (int8_tbl t2
               left join information_schema.column_udt_usage on null)
   on null;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                                     QUERY PLAN                                                     
 -------------------------------------------------------------------------------------------------------------------
  Result
@@ -3949,6 +4520,7 @@
   select text 'foo' union all select text 'bar'
 ) ss(x) on true
 where ss.x is null;
+INFO:  Path param info: 2.000000
                QUERY PLAN                
 -----------------------------------------
  Nested Loop Left Join
@@ -3984,6 +4556,7 @@
 select unique1, x.*
 from tenk1, (select *, random() from f_immutable_int4(1) x) x
 where x = unique1;
+INFO:  Path param info: 0.000000
                         QUERY PLAN                         
 -----------------------------------------------------------
  Nested Loop
@@ -4029,6 +4602,7 @@
 
 explain (costs off)
 select unique1, x from tenk1 left join f_immutable_int4(1) x on unique1 = x;
+INFO:  Path param info: 0.000000
                      QUERY PLAN                     
 ----------------------------------------------------
  Nested Loop Left Join
@@ -4040,6 +4614,7 @@
 
 explain (costs off)
 select unique1, x from tenk1 right join f_immutable_int4(1) x on unique1 = x;
+INFO:  Path param info: 0.000000
                      QUERY PLAN                     
 ----------------------------------------------------
  Nested Loop Left Join
@@ -4050,6 +4625,7 @@
 
 explain (costs off)
 select unique1, x from tenk1 full join f_immutable_int4(1) x on unique1 = x;
+INFO:  Path param info: 0.000000
                      QUERY PLAN                     
 ----------------------------------------------------
  Merge Full Join
@@ -4082,6 +4658,10 @@
     ) as ss2
     on ss2.id = nt3.nt2_id
 where nt3.id = 1 and ss2.b3;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                   QUERY PLAN                  
 ----------------------------------------------
  Nested Loop Left Join
@@ -4141,6 +4721,8 @@
 select (t2.*).unique1, f_field_select(t2) from tenk1 t1
     left join onek t2 on t1.unique1 = t2.unique1
     left join int8_tbl t3 on true;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                              QUERY PLAN                             
 --------------------------------------------------------------------
  Nested Loop Left Join
@@ -4166,6 +4748,7 @@
 explain (costs off)
 select * from tenk1 a join tenk1 b on
   (a.unique1 = 1 and b.unique1 = 2) or (a.unique2 = 3 and b.hundred = 4);
+INFO:  Path param info: 0.000000
                                            QUERY PLAN                                            
 -------------------------------------------------------------------------------------------------
  Nested Loop
@@ -4190,6 +4773,7 @@
 explain (costs off)
 select * from tenk1 a join tenk1 b on
   (a.unique1 = 1 and b.unique1 = 2) or (a.unique2 = 3 and b.ten = 4);
+INFO:  Path param info: 0.000000
                                          QUERY PLAN                                          
 ---------------------------------------------------------------------------------------------
  Nested Loop
@@ -4210,6 +4794,7 @@
 select * from tenk1 a join tenk1 b on
   (a.unique1 = 1 and b.unique1 = 2) or
   ((a.unique2 = 3 or a.unique2 = 7) and b.hundred = 4);
+INFO:  Path param info: 0.000000
                                                       QUERY PLAN                                                      
 ----------------------------------------------------------------------------------------------------------------------
  Nested Loop
@@ -4241,6 +4826,10 @@
   (tenk1 t2 join tenk1 t3 on t2.thousand = t3.unique2)
   on t1.hundred = t2.hundred and t1.ten = t3.ten
 where t1.unique1 = 1;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                        QUERY PLAN                       
 --------------------------------------------------------
  Nested Loop Left Join
@@ -4261,6 +4850,10 @@
   (tenk1 t2 join tenk1 t3 on t2.thousand = t3.unique2)
   on t1.hundred = t2.hundred and t1.ten + t2.ten = t3.ten
 where t1.unique1 = 1;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                        QUERY PLAN                       
 --------------------------------------------------------
  Nested Loop Left Join
@@ -4281,6 +4874,21 @@
   tenk1 a join tenk1 b on a.unique1 = b.unique2
   left join tenk1 c on a.unique2 = b.unique1 and c.thousand = a.thousand
   join int4_tbl on b.thousand = f1;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                QUERY PLAN                                
 -------------------------------------------------------------------------
  Aggregate
@@ -4303,6 +4911,21 @@
   tenk1 a join tenk1 b on a.unique1 = b.unique2
   left join tenk1 c on a.unique2 = b.unique1 and c.thousand = a.thousand
   join int4_tbl on b.thousand = f1;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  count 
 -------
     10
@@ -4315,6 +4938,30 @@
   join int4_tbl i1 on b.thousand = f1
   right join int4_tbl i2 on i2.f1 = b.tenthous
   order by 1;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                        QUERY PLAN                                        
 -----------------------------------------------------------------------------------------
  Sort
@@ -4340,6 +4987,30 @@
   join int4_tbl i1 on b.thousand = f1
   right join int4_tbl i2 on i2.f1 = b.tenthous
   order by 1;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  unique1 
 ---------
        0
@@ -4357,6 +5028,7 @@
 ) ss
 where fault = 122
 order by fault;
+INFO:  Path param info: 0.000000
                                 QUERY PLAN                                
 --------------------------------------------------------------------------
  Nested Loop Left Join
@@ -4373,6 +5045,7 @@
 ) ss
 where fault = 122
 order by fault;
+INFO:  Path param info: 0.000000
  unique1 | q1  | fault 
 ---------+-----+-------
          | 123 |   122
@@ -4383,6 +5056,9 @@
 (values (1, array[10,20]), (2, array[20,30])) as v1(v1x,v1ys)
 left join (values (1, 10), (2, 20)) as v2(v2x,v2y) on v2x = v1x
 left join unnest(v1ys) as u1(u1y) on u1y = v2y;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                          QUERY PLAN                          
 -------------------------------------------------------------
  Nested Loop Left Join
@@ -4399,6 +5075,9 @@
 (values (1, array[10,20]), (2, array[20,30])) as v1(v1x,v1ys)
 left join (values (1, 10), (2, 20)) as v2(v2x,v2y) on v2x = v1x
 left join unnest(v1ys) as u1(u1y) on u1y = v2y;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  v1x |  v1ys   | v2x | v2y | u1y 
 -----+---------+-----+-----+-----
    1 | {10,20} |   1 |  10 |  10
@@ -4412,6 +5091,7 @@
 select q1, unique2, thousand, hundred
   from int8_tbl a left join tenk1 b on q1 = unique2
   where coalesce(thousand,123) = q1 and q1 = coalesce(hundred,123);
+INFO:  Path param info: 0.000000
                                                 QUERY PLAN                                                
 ----------------------------------------------------------------------------------------------------------
  Nested Loop Left Join
@@ -4424,6 +5104,7 @@
 select q1, unique2, thousand, hundred
   from int8_tbl a left join tenk1 b on q1 = unique2
   where coalesce(thousand,123) = q1 and q1 = coalesce(hundred,123);
+INFO:  Path param info: 0.000000
  q1 | unique2 | thousand | hundred 
 ----+---------+----------+---------
 (0 rows)
@@ -4432,6 +5113,7 @@
 select f1, unique2, case when unique2 is null then f1 else 0 end
   from int4_tbl a left join tenk1 b on f1 = unique2
   where (case when unique2 is null then f1 else 0 end) = 0;
+INFO:  Path param info: 0.000000
                              QUERY PLAN                             
 --------------------------------------------------------------------
  Nested Loop Left Join
@@ -4444,6 +5126,7 @@
 select f1, unique2, case when unique2 is null then f1 else 0 end
   from int4_tbl a left join tenk1 b on f1 = unique2
   where (case when unique2 is null then f1 else 0 end) = 0;
+INFO:  Path param info: 0.000000
  f1 | unique2 | case 
 ----+---------+------
   0 |       0 |    0
@@ -4456,6 +5139,8 @@
 select a.unique1, b.unique1, c.unique1, coalesce(b.twothousand, a.twothousand)
   from tenk1 a left join tenk1 b on b.thousand = a.unique1                        left join tenk1 c on c.unique2 = coalesce(b.twothousand, a.twothousand)
   where a.unique2 < 10 and coalesce(b.twothousand, a.twothousand) = 44;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                           QUERY PLAN                           
 ---------------------------------------------------------------
  Nested Loop Left Join
@@ -4474,6 +5159,8 @@
 select a.unique1, b.unique1, c.unique1, coalesce(b.twothousand, a.twothousand)
   from tenk1 a left join tenk1 b on b.thousand = a.unique1                        left join tenk1 c on c.unique2 = coalesce(b.twothousand, a.twothousand)
   where a.unique2 < 10 and coalesce(b.twothousand, a.twothousand) = 44;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  unique1 | unique1 | unique1 | coalesce 
 ---------+---------+---------+----------
 (0 rows)
@@ -4482,6 +5169,9 @@
 explain (costs off)
 select * from int8_tbl t1 left join int8_tbl t2 on t1.q2 = t2.q1,
   lateral (select * from int8_tbl t3 where t2.q1 = t2.q2) ss;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                 QUERY PLAN                 
 -------------------------------------------
  Nested Loop
@@ -4496,6 +5186,9 @@
 
 select * from int8_tbl t1 left join int8_tbl t2 on t1.q2 = t2.q1,
   lateral (select * from int8_tbl t3 where t2.q1 = t2.q2) ss;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
         q1        |        q2        |        q1        |        q2        |        q1        |        q2         
 ------------------+------------------+------------------+------------------+------------------+-------------------
               123 | 4567890123456789 | 4567890123456789 | 4567890123456789 |              123 |               456
@@ -4526,6 +5219,9 @@
    using (join_key)
   ) foo3
 using (join_key);
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                 QUERY PLAN                                
 --------------------------------------------------------------------------
  Nested Loop Left Join
@@ -4556,6 +5252,9 @@
    using (join_key)
   ) foo3
 using (join_key);
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  foo1_id | foo3_id | bug_field 
 ---------+---------+-----------
        0 |       0 |       666
@@ -4575,6 +5274,9 @@
 ) ss0
 on (i0.f1 = ss0.f1)
 order by i0.f1, x;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                          QUERY PLAN                          
 -------------------------------------------------------------
  Sort
@@ -4607,6 +5309,9 @@
 ) ss0
 on (i0.f1 = ss0.f1)
 order by i0.f1, x;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
      f1      |  x  |     f1      |        q1        | q2  
 -------------+-----+-------------+------------------+-----
  -2147483647 | 123 | -2147483647 | 4567890123456789 | 123
@@ -4630,6 +5335,13 @@
   on (t1.f1 = b1.d1)
   left join int4_tbl i4
   on (i8.q2 = i4.f1);
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                               QUERY PLAN                              
 ----------------------------------------------------------------------
  Hash Left Join
@@ -4674,6 +5386,13 @@
   on (t1.f1 = b1.d1)
   left join int4_tbl i4
   on (i8.q2 = i4.f1);
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
         f1         
 -------------------
  doh!
@@ -4691,6 +5410,14 @@
   on (t1.f1 = b1.d1)
   left join int4_tbl i4
   on (i8.q2 = i4.f1);
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                  QUERY PLAN                                 
 ----------------------------------------------------------------------------
  Hash Left Join
@@ -4739,6 +5466,14 @@
   on (t1.f1 = b1.d1)
   left join int4_tbl i4
   on (i8.q2 = i4.f1);
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
         f1         
 -------------------
  doh!
@@ -4757,6 +5492,15 @@
   on (t1.f1 = b1.d1)
   left join int4_tbl i4
   on (i8.q2 = i4.f1);
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                  QUERY PLAN                                 
 ----------------------------------------------------------------------------
  Hash Left Join
@@ -4809,6 +5553,15 @@
   on (t1.f1 = b1.d1)
   left join int4_tbl i4
   on (i8.q2 = i4.f1);
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
         f1         
 -------------------
  doh!
@@ -4824,6 +5577,9 @@
   on t1.f1 = 'doh!'
   left join int4_tbl i4
   on i8.q1 = i4.f1;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                        QUERY PLAN                       
 --------------------------------------------------------
  Nested Loop Left Join
@@ -4855,6 +5611,9 @@
   on t1.f1 = 'doh!'
   left join int4_tbl i4
   on i8.q1 = i4.f1;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
   f1  | q1  | q2  |        f1         | f1 
 ------+-----+-----+-------------------+----
  doh! | 123 | 456 | doh!              |   
@@ -4870,6 +5629,9 @@
   from pg_class c left join pg_namespace n on n.oid = c.relnamespace
   where c.relkind = 'r'
 ) ss2 on false;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
            QUERY PLAN           
 --------------------------------
  Nested Loop Left Join
@@ -4889,6 +5651,10 @@
   join int4_tbl i42 on ss1.a is null or i8.q1 <> i8.q2
   right join (select 2 as b) ss2
   on ss2.b < i4.f1;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                         QUERY PLAN                         
 -----------------------------------------------------------
  Nested Loop Left Join
@@ -4919,6 +5685,8 @@
   on i8.q2 = 123,
   lateral (select i8.q1, t2.f1 from text_tbl t2 limit 1) as ss
 where t1.f1 = ss.f1;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                     QUERY PLAN                    
 --------------------------------------------------
  Nested Loop
@@ -4949,6 +5717,8 @@
   on i8.q2 = 123,
   lateral (select i8.q1, t2.f1 from text_tbl t2 limit 1) as ss
 where t1.f1 = ss.f1;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
   f1  |        q1        | q2  |        q1        |  f1  
 ------+------------------+-----+------------------+------
  doh! | 4567890123456789 | 123 | 4567890123456789 | doh!
@@ -4962,6 +5732,10 @@
   lateral (select i8.q1, t2.f1 from text_tbl t2 limit 1) as ss1,
   lateral (select ss1.* from text_tbl t3 limit 1) as ss2
 where t1.f1 = ss2.f1;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                             QUERY PLAN                             
 -------------------------------------------------------------------
  Nested Loop
@@ -5003,6 +5777,10 @@
   lateral (select i8.q1, t2.f1 from text_tbl t2 limit 1) as ss1,
   lateral (select ss1.* from text_tbl t3 limit 1) as ss2
 where t1.f1 = ss2.f1;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
   f1  |        q1        | q2  |        q1        |  f1  |        q1        |  f1  
 ------+------------------+-----+------------------+------+------------------+------
  doh! | 4567890123456789 | 123 | 4567890123456789 | doh! | 4567890123456789 | doh!
@@ -5016,6 +5794,11 @@
   left join text_tbl as tt4 on (tt3.f1 = tt4.f1),
   lateral (select tt4.f1 as c0 from text_tbl as tt5 limit 1) as ss1
 where tt1.f1 = ss1.c0;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                         QUERY PLAN                        
 ----------------------------------------------------------
  Nested Loop
@@ -5059,6 +5842,11 @@
   left join text_tbl as tt4 on (tt3.f1 = tt4.f1),
   lateral (select tt4.f1 as c0 from text_tbl as tt5 limit 1) as ss1
 where tt1.f1 = ss1.c0;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  ?column? 
 ----------
 (0 rows)
@@ -5071,6 +5859,13 @@
      right join (select 1 as z) as ss2 on true)
   on false,
   lateral (select i4.f1, ss1.n from int8_tbl as i8 limit 1) as ss3;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
         QUERY PLAN        
 --------------------------
  Result
@@ -5085,6 +5880,13 @@
      right join (select 1 as z) as ss2 on true)
   on false,
   lateral (select i4.f1, ss1.n from int8_tbl as i8 limit 1) as ss3;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  ?column? 
 ----------
 (0 rows)
@@ -5105,6 +5907,45 @@
        on false
      where t3.a = coalesce(t5.a,1)) as s2
   on true;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
         QUERY PLAN        
 --------------------------
  Result
@@ -5125,6 +5966,21 @@
   on i41.f1 = ss1.c1,
   lateral (select i41.*, i8.*, ss1.* from text_tbl limit 1) ss2
 where ss1.c2 = 0;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                QUERY PLAN                               
 ------------------------------------------------------------------------
  Nested Loop
@@ -5163,6 +6019,21 @@
   on i41.f1 = ss1.c1,
   lateral (select i41.*, i8.*, ss1.* from text_tbl limit 1) ss2
 where ss1.c2 = 0;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  f1 | q1 | q2 | c1 | c2 | c3 
 ----+----+----+----+----+----
 (0 rows)
@@ -5176,6 +6047,8 @@
   left join
     (tenk1 as a1 full join (select 1 as id) as yy on (a1.unique1 = yy.id))
   on (xx.id = coalesce(yy.id));
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
               QUERY PLAN               
 ---------------------------------------
  Nested Loop Left Join
@@ -5193,6 +6066,8 @@
   left join
     (tenk1 as a1 full join (select 1 as id) as yy on (a1.unique1 = yy.id))
   on (xx.id = coalesce(yy.id));
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  id | unique1 | unique2 | two | four | ten | twenty | hundred | thousand | twothousand | fivethous | tenthous | odd | even | stringu1 | stringu2 | string4 | id 
 ----+---------+---------+-----+------+-----+--------+---------+----------+-------------+-----------+----------+-----+------+----------+----------+---------+----
   1 |       1 |    2838 |   1 |    1 |   1 |      1 |       1 |        1 |           1 |         1 |        1 |   2 |    3 | BAAAAA   | EFEAAA   | OOOOxx  |  1
@@ -5203,6 +6078,7 @@
 --
 explain (costs off)
   select * from int4_tbl a left join tenk1 b on f1 = unique2 where f1 = 0;
+INFO:  Path param info: 0.000000
                    QUERY PLAN                    
 -------------------------------------------------
  Nested Loop Left Join
@@ -5214,6 +6090,7 @@
 
 explain (costs off)
   select * from tenk1 a full join tenk1 b using(unique2) where unique2 = 42;
+INFO:  Path param info: 0.000000
                    QUERY PLAN                    
 -------------------------------------------------
  Merge Full Join
@@ -5234,6 +6111,7 @@
   select a.q2, b.q1
     from int8_tbl a left join int8_tbl b on a.q2 = coalesce(b.q1, 1)
     where coalesce(b.q1, 1) > 0;
+INFO:  Path param info: 0.000000
                        QUERY PLAN                        
 ---------------------------------------------------------
  Merge Left Join
@@ -5255,6 +6133,7 @@
 select a.q2, b.q1
   from int8_tbl a left join int8_tbl b on a.q2 = coalesce(b.q1, 1)
   where coalesce(b.q1, 1) > 0;
+INFO:  Path param info: 0.000000
         q2         |        q1        
 -------------------+------------------
  -4567890123456789 |                 
@@ -5278,6 +6157,7 @@
 select a.unique1, b.unique2
   from onek a left join onek b on a.unique1 = b.unique2
   where b.unique2 = any (select q1 from int8_tbl c where c.q1 < b.unique1);
+INFO:  Path param info: 0.000000
                         QUERY PLAN                        
 ----------------------------------------------------------
  Hash Join
@@ -5294,6 +6174,7 @@
 select a.unique1, b.unique2
   from onek a left join onek b on a.unique1 = b.unique2
   where b.unique2 = any (select q1 from int8_tbl c where c.q1 < b.unique1);
+INFO:  Path param info: 0.000000
  unique1 | unique2 
 ---------+---------
      123 |     123
@@ -5306,6 +6187,7 @@
 select a.unique1, b.unique2
   from onek a full join onek b on a.unique1 = b.unique2
   where a.unique1 = 42;
+INFO:  Path param info: 0.000000
                      QUERY PLAN                     
 ----------------------------------------------------
  Nested Loop Left Join
@@ -5318,6 +6200,7 @@
 select a.unique1, b.unique2
   from onek a full join onek b on a.unique1 = b.unique2
   where a.unique1 = 42;
+INFO:  Path param info: 0.000000
  unique1 | unique2 
 ---------+---------
       42 |      42
@@ -5327,6 +6210,7 @@
 select a.unique1, b.unique2
   from onek a full join onek b on a.unique1 = b.unique2
   where b.unique2 = 43;
+INFO:  Path param info: 0.000000
                      QUERY PLAN                     
 ----------------------------------------------------
  Nested Loop Left Join
@@ -5339,6 +6223,7 @@
 select a.unique1, b.unique2
   from onek a full join onek b on a.unique1 = b.unique2
   where b.unique2 = 43;
+INFO:  Path param info: 0.000000
  unique1 | unique2 
 ---------+---------
       43 |      43
@@ -5348,6 +6233,7 @@
 select a.unique1, b.unique2
   from onek a full join onek b on a.unique1 = b.unique2
   where a.unique1 = 42 and b.unique2 = 42;
+INFO:  Path param info: 0.000000
                      QUERY PLAN                     
 ----------------------------------------------------
  Nested Loop
@@ -5360,6 +6246,7 @@
 select a.unique1, b.unique2
   from onek a full join onek b on a.unique1 = b.unique2
   where a.unique1 = 42 and b.unique2 = 42;
+INFO:  Path param info: 0.000000
  unique1 | unique2 
 ---------+---------
       42 |      42
@@ -5374,6 +6261,7 @@
 full join
   (select * from (values(456,2)) w(v1,v2) join int8_tbl i82 on q2=v1) ss2
 on true;
+INFO:  Path param info: 0.000000
               QUERY PLAN              
 --------------------------------------
  Merge Full Join
@@ -5389,6 +6277,7 @@
 full join
   (select * from (values(456,2)) w(v1,v2) join int8_tbl i82 on q2=v1) ss2
 on true;
+INFO:  Path param info: 0.000000
         q1        | q2  | v1  | v2 | v1  | v2 | q1  | q2  
 ------------------+-----+-----+----+-----+----+-----+-----
  4567890123456789 | 123 | 123 |  2 | 456 |  2 | 123 | 456
@@ -5432,6 +6321,7 @@
 select id from a where id in (
 	select b.id from b left join c on b.id = c.id
 );
+INFO:  Path param info: 0.000000
          QUERY PLAN         
 ----------------------------
  Hash Join
@@ -5448,6 +6338,7 @@
   left join
   (a a3 left join a a4 on a3.id = a4.id)
   on a2.id = a3.id;
+INFO:  Path param info: 0.000000
           QUERY PLAN          
 ------------------------------
  Nested Loop Left Join
@@ -5472,6 +6363,9 @@
     left join a t2 on true
    inner join a t3 on true
     left join a t4 on t2.id = t4.id and t2.id = t3.id;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
              QUERY PLAN             
 ------------------------------------
  Nested Loop
@@ -5496,6 +6390,16 @@
                         inner join int8_tbl as t7 on null)
                on t5.q1 = t7.q2)
     on false;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
            QUERY PLAN           
 --------------------------------
  Nested Loop Left Join
@@ -5518,6 +6422,16 @@
                         inner join int8_tbl as t7 on null)
                on t5.q1 = t7.q2)
     on false;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
            QUERY PLAN           
 --------------------------------
  Nested Loop Left Join
@@ -5533,6 +6447,7 @@
 from (select f1/2 as x from int4_tbl i4 left join a on a.id = i4.f1) ss1
      right join int8_tbl i8 on true
 where current_user is not null;  -- this is to add a Result node
+INFO:  Path param info: 0.000000
                   QUERY PLAN                   
 -----------------------------------------------
  Result
@@ -5551,6 +6466,11 @@
     on t1.q2 = t2.q2
   left join onek t4
     on t2.q2 < t3.unique2;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                    QUERY PLAN                    
 -------------------------------------------------
  Nested Loop Left Join
@@ -5575,6 +6495,11 @@
   (int8_tbl t2 inner join int8_tbl t3 on false
    left join int8_tbl t4 on t2.q2 = t4.q2)
 on t1.q1 = t2.q1;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
               QUERY PLAN              
 --------------------------------------
  Hash Left Join
@@ -5591,6 +6516,11 @@
   (int8_tbl t2 inner join int8_tbl t3 on (t2.q1-t3.q2) = 0 and (t2.q1-t3.q2) = 1
    left join int8_tbl t4 on t2.q2 = t4.q2)
 on t1.q1 = t2.q1;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
               QUERY PLAN              
 --------------------------------------
  Hash Left Join
@@ -5609,6 +6539,16 @@
      left join int8_tbl t4 on t2.q2 = t4.q2)
   on t1.q1 = t2.q1
 ) from int4_tbl x0;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                              QUERY PLAN                              
 ---------------------------------------------------------------------
  Seq Scan on int4_tbl x0
@@ -5655,6 +6595,7 @@
 explain (costs off)
 select d.* from d left join (select * from b group by b.id, b.c_id) s
   on d.a = s.id;
+INFO:  Path param info: 0.000000
                 QUERY PLAN                
 ------------------------------------------
  Merge Right Join
@@ -5671,6 +6612,7 @@
 explain (costs off)
 select d.* from d left join (select distinct * from b) s
   on d.a = s.id;
+INFO:  Path param info: 0.000000
               QUERY PLAN              
 --------------------------------------
  Merge Right Join
@@ -5688,6 +6630,8 @@
 explain (costs off)
 select 1 from a t1
   left join (a t2 left join a t3 on t2.id = 1) on t2.id = 1;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                        QUERY PLAN                       
 --------------------------------------------------------
  Nested Loop Left Join
@@ -5723,6 +6667,7 @@
 explain (costs off)
 select 1 from (select a.id FROM a left join b on a.b_id = b.id) q,
 			  lateral generate_series(1, q.id) gs(i) where q.id = gs.i;
+INFO:  Path param info: 0.000000
                 QUERY PLAN                 
 -------------------------------------------
  Nested Loop
@@ -5736,6 +6681,8 @@
 select c.id, ss.a from c
   left join (select d.a from onerow, d left join b on d.a = b.id) ss
   on c.id = ss.a;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
            QUERY PLAN           
 --------------------------------
  Hash Right Join
@@ -5782,6 +6729,7 @@
 select p.*, linked from parent p
   left join (select c.*, true as linked from child c) as ss
   on (p.k = ss.k);
+INFO:  Path param info: 0.000000
  k | pd | linked 
 ---+----+--------
  1 | 10 | t
@@ -5793,6 +6741,7 @@
   select p.*, linked from parent p
     left join (select c.*, true as linked from child c) as ss
     on (p.k = ss.k);
+INFO:  Path param info: 0.000000
            QUERY PLAN            
 ---------------------------------
  Hash Left Join
@@ -5825,6 +6774,7 @@
 select p.* from
   (parent p left join child c on (p.k = c.k)) join parent x on p.k = x.k
   where p.k = 1 and p.k = 2;
+INFO:  Path param info: 0.000000
  k | pd 
 ---+----
 (0 rows)
@@ -5833,6 +6783,7 @@
 select p.* from
   (parent p left join child c on (p.k = c.k)) join parent x on p.k = x.k
   where p.k = 1 and p.k = 2;
+INFO:  Path param info: 0.000000
         QUERY PLAN        
 --------------------------
  Result
@@ -5846,12 +6797,14 @@
 INSERT INTO a VALUES (0), (1);
 INSERT INTO b VALUES (0, 0), (1, NULL);
 SELECT * FROM b LEFT JOIN a ON (b.a_id = a.id) WHERE (a.id IS NULL OR a.id > 0);
+INFO:  Path param info: 0.000000
  id | a_id | id 
 ----+------+----
   1 |      |   
 (1 row)
 
 SELECT b.* FROM b LEFT JOIN a ON (b.a_id = a.id) WHERE (a.id IS NULL OR a.id > 0);
+INFO:  Path param info: 0.000000
  id | a_id 
 ----+------
   1 |     
@@ -5868,6 +6821,8 @@
     (SELECT q1, q2, COALESCE(dat1, q1) AS y
      FROM int8_tbl LEFT JOIN innertab ON q2 = id) ss2
   ON true;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  x |        q1        |        q2         |        y         
 ---+------------------+-------------------+------------------
  1 |              123 |               456 |              123
@@ -5883,6 +6838,7 @@
   (SELECT *
    FROM int8_tbl LEFT JOIN innertab ON q2 = id) ss
  WHERE COALESCE(dat1, 0) = q1;
+INFO:  Path param info: 0.000000
                            QUERY PLAN                           
 ----------------------------------------------------------------
  Nested Loop Left Join
@@ -5899,6 +6855,7 @@
    FROM int8_tbl LEFT JOIN innertab ON q2 = id) ss
   RIGHT JOIN int4_tbl ON NULL
  WHERE x >= x;
+INFO:  Path param info: 0.000000
                       QUERY PLAN                      
 ------------------------------------------------------
  Nested Loop Left Join
@@ -5919,6 +6876,9 @@
      JOIN ((SELECT 42 AS x FROM int8_tbl LEFT JOIN innertab ON q1 = id) AS ss1
            RIGHT JOIN tenk1 ON NULL)
         ON tenk1.unique1 = ss1.x OR tenk1.unique2 = ss1.x;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                 QUERY PLAN                                
 --------------------------------------------------------------------------
  Nested Loop
@@ -5960,6 +6920,10 @@
      left join uniquetbl u1 ON u1.f1 = t1.string4) ss
   on t0.f1 = ss.case1
 where ss.stringu2 !~* ss.case1;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                          QUERY PLAN                                         
 --------------------------------------------------------------------------------------------
  Nested Loop
@@ -5984,6 +6948,10 @@
      left join uniquetbl u1 ON u1.f1 = t1.string4) ss
   on t0.f1 = ss.case1
 where ss.stringu2 !~* ss.case1;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
   f1  
 ------
  doh!
@@ -6001,6 +6969,7 @@
              from t t2 left join t t3 on t2.a = t3.a) s
     on true
 where t1.a = s.c;
+INFO:  Path param info: 0.000000
           QUERY PLAN          
 ------------------------------
  Nested Loop Left Join
@@ -6016,6 +6985,7 @@
              from t t2 left join t t3 on t2.a = t3.a) s
     on true
 where t1.a = s.c;
+INFO:  Path param info: 0.000000
  ?column? 
 ----------
 (0 rows)
@@ -6033,6 +7003,8 @@
   on true
   left join t t4 on true
 where s.a < s.c;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
              QUERY PLAN              
 -------------------------------------
  Nested Loop Left Join
@@ -6053,6 +7025,8 @@
   on true
   left join t t4 on true
 where s.a < s.c;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                   QUERY PLAN                   
 -----------------------------------------------
  Nested Loop Left Join
@@ -6071,6 +7045,8 @@
   on true
   left join t t4 on true
 where s.a < s.c;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  a | a | c 
 ---+---+---
  2 | 1 | 2
@@ -6086,6 +7062,8 @@
     left join lateral (select i4.f1 + 1 as v) as ss on true
     left join tenk1 t on t.unique2 = ss.v
 where q2 = 456;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                          QUERY PLAN                          
 -------------------------------------------------------------
  Nested Loop Left Join
@@ -6109,6 +7087,8 @@
     left join lateral (select i4.f1 + 1 as v) as ss on true
     left join tenk1 t on t.unique2 = ss.v
 where q2 = 456;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  q1  | q2  | v | unique2 
 -----+-----+---+---------
  123 | 456 |   |        
@@ -6124,6 +7104,7 @@
   (select *, 12 as phv from parttbl) as ss
   right join int4_tbl on true
 where ss.a = ss.phv and f1 = 0;
+INFO:  Path param info: 0.000000
              QUERY PLAN             
 ------------------------------------
  Nested Loop
@@ -6137,6 +7118,7 @@
   (select *, 12 as phv from parttbl) as ss
   right join int4_tbl on true
 where ss.a = ss.phv and f1 = 0;
+INFO:  Path param info: 0.000000
  a  | phv | f1 
 ----+-----+----
  12 |  12 |  0
@@ -6156,6 +7138,10 @@
 DETAIL:  There is an entry for table "y", but it cannot be referenced from this part of the query.
 select * from
   int8_tbl x join (int4_tbl x cross join int4_tbl y(ff)) j on q1 = f1; -- ok
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  q1 | q2 | f1 | ff 
 ----+----+----+----
 (0 rows)
@@ -6216,6 +7202,7 @@
 --
 select unique2, x.*
 from tenk1 a, lateral (select * from int4_tbl b where f1 = a.unique1) x;
+INFO:  Path param info: 0.000000
  unique2 | f1 
 ---------+----
     9998 |  0
@@ -6224,6 +7211,7 @@
 explain (costs off)
   select unique2, x.*
   from tenk1 a, lateral (select * from int4_tbl b where f1 = a.unique1) x;
+INFO:  Path param info: 0.000000
                    QUERY PLAN                    
 -------------------------------------------------
  Nested Loop
@@ -6234,6 +7222,7 @@
 
 select unique2, x.*
 from int4_tbl x, lateral (select unique2 from tenk1 where f1 = unique1) ss;
+INFO:  Path param info: 0.000000
  unique2 | f1 
 ---------+----
     9998 |  0
@@ -6242,6 +7231,7 @@
 explain (costs off)
   select unique2, x.*
   from int4_tbl x, lateral (select unique2 from tenk1 where f1 = unique1) ss;
+INFO:  Path param info: 0.000000
                   QUERY PLAN                   
 -----------------------------------------------
  Nested Loop
@@ -6253,6 +7243,7 @@
 explain (costs off)
   select unique2, x.*
   from int4_tbl x cross join lateral (select unique2 from tenk1 where f1 = unique1) ss;
+INFO:  Path param info: 0.000000
                   QUERY PLAN                   
 -----------------------------------------------
  Nested Loop
@@ -6263,6 +7254,7 @@
 
 select unique2, x.*
 from int4_tbl x left join lateral (select unique1, unique2 from tenk1 where f1 = unique1) ss on true;
+INFO:  Path param info: 0.000000
  unique2 |     f1      
 ---------+-------------
     9998 |           0
@@ -6275,6 +7267,7 @@
 explain (costs off)
   select unique2, x.*
   from int4_tbl x left join lateral (select unique1, unique2 from tenk1 where f1 = unique1) ss on true;
+INFO:  Path param info: 0.000000
                   QUERY PLAN                   
 -----------------------------------------------
  Nested Loop Left Join
@@ -6307,6 +7300,7 @@
 
 -- lateral with function in FROM
 select count(*) from tenk1 a, lateral generate_series(1,two) g;
+INFO:  Path param info: 0.000000
  count 
 -------
   5000
@@ -6314,6 +7308,7 @@
 
 explain (costs off)
   select count(*) from tenk1 a, lateral generate_series(1,two) g;
+INFO:  Path param info: 0.000000
                       QUERY PLAN                      
 ------------------------------------------------------
  Aggregate
@@ -6327,6 +7322,7 @@
 
 explain (costs off)
   select count(*) from tenk1 a cross join lateral generate_series(1,two) g;
+INFO:  Path param info: 0.000000
                       QUERY PLAN                      
 ------------------------------------------------------
  Aggregate
@@ -6341,6 +7337,7 @@
 -- don't need the explicit LATERAL keyword for functions
 explain (costs off)
   select count(*) from tenk1 a, generate_series(1,two) g;
+INFO:  Path param info: 0.000000
                       QUERY PLAN                      
 ------------------------------------------------------
  Aggregate
@@ -6357,6 +7354,7 @@
   select * from generate_series(100,200) g,
     lateral (select * from int8_tbl a where g = q1 union all
              select * from int8_tbl b where g = q2) ss;
+INFO:  Path param info: 0.000000
                 QUERY PLAN                
 ------------------------------------------
  Nested Loop
@@ -6371,6 +7369,7 @@
 select * from generate_series(100,200) g,
   lateral (select * from int8_tbl a where g = q1 union all
            select * from int8_tbl b where g = q2) ss;
+INFO:  Path param info: 0.000000
   g  |        q1        |        q2        
 -----+------------------+------------------
  123 |              123 |              456
@@ -6382,6 +7381,7 @@
 explain (costs off)
   select count(*) from tenk1 a,
     tenk1 b join lateral (values(a.unique1)) ss(x) on b.unique2 = ss.x;
+INFO:  Path param info: 0.000000
                          QUERY PLAN                         
 ------------------------------------------------------------
  Aggregate
@@ -6393,6 +7393,7 @@
 
 select count(*) from tenk1 a,
   tenk1 b join lateral (values(a.unique1)) ss(x) on b.unique2 = ss.x;
+INFO:  Path param info: 0.000000
  count 
 -------
  10000
@@ -6402,6 +7403,9 @@
 explain (costs off)
   select count(*) from tenk1 a,
     tenk1 b join lateral (values(a.unique1),(-1)) ss(x) on b.unique2 = ss.x;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                             QUERY PLAN                            
 ------------------------------------------------------------------
  Aggregate
@@ -6418,6 +7422,9 @@
 
 select count(*) from tenk1 a,
   tenk1 b join lateral (values(a.unique1),(-1)) ss(x) on b.unique2 = ss.x;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  count 
 -------
  10000
@@ -6429,6 +7436,8 @@
     int8_tbl x left join lateral (select a.q1 from int4_tbl y) ss(z)
       on x.q2 = ss.z
   order by a.q1, a.q2, x.q1, x.q2, ss.z;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                    QUERY PLAN                   
 ------------------------------------------------
  Sort
@@ -6446,6 +7455,8 @@
   int8_tbl x left join lateral (select a.q1 from int4_tbl y) ss(z)
     on x.q2 = ss.z
   order by a.q1, a.q2, x.q1, x.q2, ss.z;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
         q1        |        q2         |        q1        |        q2         |        z         
 ------------------+-------------------+------------------+-------------------+------------------
               123 |               456 |              123 |               456 |                 
@@ -6510,6 +7521,7 @@
 -- lateral reference to a join alias variable
 select * from (select f1/2 as x from int4_tbl) ss1 join int4_tbl i4 on x = f1,
   lateral (select x) ss2(y);
+INFO:  Path param info: 0.000000
  x | f1 | y 
 ---+----+---
  0 |  0 | 0
@@ -6517,6 +7529,7 @@
 
 select * from (select f1 as x from int4_tbl) ss1 join int4_tbl i4 on x = f1,
   lateral (values(x)) ss2(y);
+INFO:  Path param info: 0.000000
       x      |     f1      |      y      
 -------------+-------------+-------------
            0 |           0 |           0
@@ -6528,6 +7541,7 @@
 
 select * from ((select f1/2 as x from int4_tbl) ss1 join int4_tbl i4 on x = f1) j,
   lateral (select x) ss2(y);
+INFO:  Path param info: 0.000000
  x | f1 | y 
 ---+----+---
  0 |  0 | 0
@@ -6546,6 +7560,7 @@
 
 select * from (select f1/1000000000 from int4_tbl) x(lb),
   lateral generate_series(lb,4) x4;
+INFO:  Path param info: 0.000000
  lb | x4 
 ----+----
   0 |  0
@@ -6596,6 +7611,7 @@
 select * from
   int8_tbl x left join (select q1,coalesce(q2,0) q2 from int8_tbl) y on x.q2 = y.q1,
   lateral (values(x.q1,y.q1,y.q2)) v(xq1,yq1,yq2);
+INFO:  Path param info: 0.000000
         q1        |        q2         |        q1        |        q2         |       xq1        |       yq1        |        yq2        
 ------------------+-------------------+------------------+-------------------+------------------+------------------+-------------------
               123 |               456 |                  |                   |              123 |                  |                  
@@ -6613,6 +7629,7 @@
 select * from
   int8_tbl x left join (select q1,coalesce(q2,0) q2 from int8_tbl) y on x.q2 = y.q1,
   lateral (select x.q1,y.q1,y.q2) v(xq1,yq1,yq2);
+INFO:  Path param info: 0.000000
         q1        |        q2         |        q1        |        q2         |       xq1        |       yq1        |        yq2        
 ------------------+-------------------+------------------+-------------------+------------------+------------------+-------------------
               123 |               456 |                  |                   |              123 |                  |                  
@@ -6630,6 +7647,7 @@
 select x.* from
   int8_tbl x left join (select q1,coalesce(q2,0) q2 from int8_tbl) y on x.q2 = y.q1,
   lateral (select x.q1,y.q1,y.q2) v(xq1,yq1,yq2);
+INFO:  Path param info: 0.000000
         q1        |        q2         
 ------------------+-------------------
               123 |               456
@@ -6648,6 +7666,14 @@
   (int8_tbl x left join (select q1,coalesce(q2,0) q2 from int8_tbl) y on x.q2 = y.q1)
   left join int4_tbl z on z.f1 = x.q2,
   lateral (select x.q1,y.q1 union all select x.q2,y.q2) v(vx,vy);
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
         vx         |        vy         
 -------------------+-------------------
                123 |                  
@@ -6676,6 +7702,14 @@
   (int8_tbl x left join (select q1,(select coalesce(q2,0)) q2 from int8_tbl) y on x.q2 = y.q1)
   left join int4_tbl z on z.f1 = x.q2,
   lateral (select x.q1,y.q1 union all select x.q2,y.q2) v(vx,vy);
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
         vx         |        vy         
 -------------------+-------------------
   4567890123456789 |               123
@@ -6704,6 +7738,14 @@
   (int8_tbl x left join (select q1,(select coalesce(q2,0)) q2 from int8_tbl) y on x.q2 = y.q1)
   left join int4_tbl z on z.f1 = x.q2,
   lateral (select x.q1,y.q1 from onerow union all select x.q2,y.q2 from onerow) v(vx,vy);
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
         vx         |        vy         
 -------------------+-------------------
   4567890123456789 |               123
@@ -6732,6 +7774,7 @@
 select * from
   int8_tbl a left join
   lateral (select *, a.q2 as x from int8_tbl b) ss on a.q2 = ss.q1;
+INFO:  Path param info: 0.000000
                 QUERY PLAN                
 ------------------------------------------
  Nested Loop Left Join
@@ -6746,6 +7789,7 @@
 select * from
   int8_tbl a left join
   lateral (select *, a.q2 as x from int8_tbl b) ss on a.q2 = ss.q1;
+INFO:  Path param info: 0.000000
         q1        |        q2         |        q1        |        q2         |        x         
 ------------------+-------------------+------------------+-------------------+------------------
               123 |               456 |                  |                   |                 
@@ -6764,6 +7808,7 @@
 select * from
   int8_tbl a left join
   lateral (select *, coalesce(a.q2, 42) as x from int8_tbl b) ss on a.q2 = ss.q1;
+INFO:  Path param info: 0.000000
                             QUERY PLAN                            
 ------------------------------------------------------------------
  Nested Loop Left Join
@@ -6778,6 +7823,7 @@
 select * from
   int8_tbl a left join
   lateral (select *, coalesce(a.q2, 42) as x from int8_tbl b) ss on a.q2 = ss.q1;
+INFO:  Path param info: 0.000000
         q1        |        q2         |        q1        |        q2         |        x         
 ------------------+-------------------+------------------+-------------------+------------------
               123 |               456 |                  |                   |                 
@@ -6797,6 +7843,7 @@
 explain (verbose, costs off)
 select * from int4_tbl i left join
   lateral (select * from int2_tbl j where i.f1 = j.f1) k on true;
+INFO:  Path param info: 0.000000
                 QUERY PLAN                 
 -------------------------------------------
  Hash Left Join
@@ -6812,6 +7859,7 @@
 
 select * from int4_tbl i left join
   lateral (select * from int2_tbl j where i.f1 = j.f1) k on true;
+INFO:  Path param info: 0.000000
      f1      | f1 
 -------------+----
            0 |  0
@@ -6824,6 +7872,7 @@
 explain (verbose, costs off)
 select * from int4_tbl i left join
   lateral (select coalesce(i) from int2_tbl j where i.f1 = j.f1) k on true;
+INFO:  Path param info: 0.000000
              QUERY PLAN              
 -------------------------------------
  Nested Loop Left Join
@@ -6837,6 +7886,7 @@
 
 select * from int4_tbl i left join
   lateral (select coalesce(i) from int2_tbl j where i.f1 = j.f1) k on true;
+INFO:  Path param info: 0.000000
      f1      | coalesce 
 -------------+----------
            0 | (0)
@@ -6851,6 +7901,8 @@
   lateral (
     select * from int4_tbl b left join int8_tbl c on (b.f1 = q1 and a.f1 = q2)
   ) ss;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                    QUERY PLAN                    
 -------------------------------------------------
  Nested Loop
@@ -6873,6 +7925,8 @@
   lateral (
     select * from int4_tbl b left join int8_tbl c on (b.f1 = q1 and a.f1 = q2)
   ) ss;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
      f1      |     f1      | q1 | q2 
 -------------+-------------+----+----
            0 |           0 |    |   
@@ -6909,6 +7963,8 @@
   (select b.q1 as bq1, c.q1 as cq1, least(a.q1,b.q1,c.q1) from
    int8_tbl b cross join int8_tbl c) ss
   on a.q2 = ss.bq1;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                          QUERY PLAN                          
 -------------------------------------------------------------
  Nested Loop Left Join
@@ -6929,6 +7985,8 @@
   (select b.q1 as bq1, c.q1 as cq1, least(a.q1,b.q1,c.q1) from
    int8_tbl b cross join int8_tbl c) ss
   on a.q2 = ss.bq1;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
         q1        |        q2         |       bq1        |       cq1        |      least       
 ------------------+-------------------+------------------+------------------+------------------
               123 |               456 |                  |                  |                 
@@ -6985,6 +8043,10 @@
     lateral (select q1, coalesce(ss1.x,q2) as y from int8_tbl d) ss2
   ) on c.q2 = ss2.q1,
   lateral (select ss2.y offset 0) ss3;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                                                                      QUERY PLAN                                                                                     
 ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  Nested Loop
@@ -7019,6 +8081,7 @@
   (select 0 as val0) as ss0
   left join (select 1 as val) as ss1 on true
   left join lateral (select ss1.val as val_filtered where false) as ss2 on true;
+INFO:  Path param info: 0.000000
            QUERY PLAN           
 --------------------------------
  Nested Loop Left Join
@@ -7035,6 +8098,7 @@
   (select 0 as val0) as ss0
   left join (select 1 as val) as ss1 on true
   left join lateral (select ss1.val as val_filtered where false) as ss2 on true;
+INFO:  Path param info: 0.000000
  val0 | val | val_filtered 
 ------+-----+--------------
     0 |   1 |             
@@ -7052,6 +8116,11 @@
     lateral (select q1, coalesce(ss1.x,q2) as y from int8_tbl d) ss2
   ) on c.q2 = ss2.q1,
   lateral (select * from int4_tbl i where ss2.y > f1) ss3;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                                QUERY PLAN                                                
 ---------------------------------------------------------------------------------------------------------
  Nested Loop
@@ -7097,6 +8166,8 @@
   left join lateral (
     select * from (select 3 as z offset 0) z where z.z = x.x
   ) zz on zz.z = y.y;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                   QUERY PLAN                  
 ----------------------------------------------
  Nested Loop Left Join
@@ -7117,6 +8188,25 @@
 select * from int4_tbl t1,
   lateral (select * from int4_tbl t2 inner join int4_tbl t3 on t1.f1 = 1
            inner join (int4_tbl t4 left join int4_tbl t5 on true) on true) ss;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                    QUERY PLAN                    
 -------------------------------------------------
  Nested Loop Left Join
@@ -7138,6 +8228,7 @@
 explain (verbose, costs off)
 select * from int8_tbl i8 left join lateral
   (select *, i8.q2 from int4_tbl where false) ss on true;
+INFO:  Path param info: 0.000000
               QUERY PLAN              
 --------------------------------------
  Nested Loop Left Join
@@ -7153,6 +8244,8 @@
 explain (verbose, costs off)
 select * from int8_tbl i8 left join lateral
   (select *, i8.q2 from int4_tbl i1, int4_tbl i2 where false) ss on true;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                QUERY PLAN                
 -----------------------------------------
  Nested Loop Left Join
@@ -7173,6 +8266,7 @@
    union all
    (select q1.v)
   ) as q2;
+INFO:  Path param info: 0.000000
  v | v 
 ---+---
  2 | 4
@@ -7193,6 +8287,8 @@
   lateral (select f1 from int4_tbl
            where f1 = any (select unique1 from tenk1
                            where unique2 = v.x offset 0)) ss;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                               QUERY PLAN                              
 ----------------------------------------------------------------------
  Nested Loop
@@ -7216,6 +8312,8 @@
   lateral (select f1 from int4_tbl
            where f1 = any (select unique1 from tenk1
                            where unique2 = v.x offset 0)) ss;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  id |  x   | f1 
 ----+------+----
   0 | 9998 |  0
@@ -7232,6 +8330,9 @@
                                      where q2 = (select greatest(t1.q1,t2.q2))
                                        and (select v.id=0)) offset 0) ss2) ss
          where t1.q1 = ss.q2) ss0;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                               QUERY PLAN                              
 ----------------------------------------------------------------------
  Nested Loop
@@ -7271,6 +8372,9 @@
                                      where q2 = (select greatest(t1.q1,t2.q2))
                                        and (select v.id=0)) offset 0) ss2) ss
          where t1.q1 = ss.q2) ss0;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  id |        q1        |        q2         |        q1        |        q2        
 ----+------------------+-------------------+------------------+------------------
   0 | 4567890123456789 |               123 | 4567890123456789 | 4567890123456789
@@ -7379,6 +8483,8 @@
               (select t2.a as t2a, t3.a t3a, least(t1.a, t2.a, t3.a) phv
 					  from join_pt1 t2 join join_ut1 t3 on t2.a = t3.b) ss
               on t1.a = ss.t2a order by t1.a;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                              QUERY PLAN                             
 --------------------------------------------------------------------
  Sort
@@ -7408,6 +8514,8 @@
               (select t2.a as t2a, t3.a t3a, least(t1.a, t2.a, t3.a) phv
 					  from join_pt1 t2 join join_ut1 t3 on t2.a = t3.b) ss
               on t1.a = ss.t2a order by t1.a;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
   b  | phv 
 -----+-----
    2 |    
@@ -7429,6 +8537,14 @@
   join fkest f2 on (f1.x = f2.x and f1.x10 = f2.x10b and f1.x100 = f2.x100)
   join fkest f3 on f1.x = f3.x
   where f1.x100 = 2;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                         QUERY PLAN                         
 -----------------------------------------------------------
  Nested Loop
@@ -7445,11 +8561,20 @@
 
 alter table fkest add constraint fk
   foreign key (x, x10b, x100) references fkest (x, x10, x100);
+INFO:  Path param info: 0.000000
 explain (costs off)
 select * from fkest f1
   join fkest f2 on (f1.x = f2.x and f1.x10 = f2.x10b and f1.x100 = f2.x100)
   join fkest f3 on f1.x = f3.x
   where f1.x100 = 2;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                      QUERY PLAN                      
 -----------------------------------------------------
  Hash Join
@@ -7476,6 +8601,7 @@
 insert into fkest1 select x/10, x%10 from generate_series(1,1000) x;
 alter table fkest1
   add constraint fkest1_a_b_fkey foreign key (a,b) references fkest;
+INFO:  Path param info: 0.000000
 analyze fkest;
 analyze fkest1;
 explain (costs off)
@@ -7485,6 +8611,25 @@
   left join fkest1 f2 on f.a = f2.a and f.b = f2.b
   left join fkest1 f3 on f.a = f3.a and f.b = f3.b
 where f.c = 1;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                             QUERY PLAN                            
 ------------------------------------------------------------------
  Nested Loop Left Join
@@ -7516,6 +8661,7 @@
 -- ensure join is properly marked as unique
 explain (verbose, costs off)
 select * from j1 inner join j2 on j1.id = j2.id;
+INFO:  Path param info: 0.000000
             QUERY PLAN             
 -----------------------------------
  Hash Join
@@ -7533,6 +8679,7 @@
 -- ensure join is not unique when not an equi-join
 explain (verbose, costs off)
 select * from j1 inner join j2 on j1.id > j2.id;
+INFO:  Path param info: 0.000000
             QUERY PLAN             
 -----------------------------------
  Nested Loop
@@ -7549,6 +8696,7 @@
 -- ensure non-unique rel is not chosen as inner
 explain (verbose, costs off)
 select * from j1 inner join j3 on j1.id = j3.id;
+INFO:  Path param info: 0.000000
             QUERY PLAN             
 -----------------------------------
  Hash Join
@@ -7566,6 +8714,7 @@
 -- ensure left join is marked as unique
 explain (verbose, costs off)
 select * from j1 left join j2 on j1.id = j2.id;
+INFO:  Path param info: 0.000000
             QUERY PLAN             
 -----------------------------------
  Hash Left Join
@@ -7583,6 +8732,7 @@
 -- ensure right join is marked as unique
 explain (verbose, costs off)
 select * from j1 right join j2 on j1.id = j2.id;
+INFO:  Path param info: 0.000000
             QUERY PLAN             
 -----------------------------------
  Hash Left Join
@@ -7600,6 +8750,7 @@
 -- ensure full join is marked as unique
 explain (verbose, costs off)
 select * from j1 full join j2 on j1.id = j2.id;
+INFO:  Path param info: 0.000000
             QUERY PLAN             
 -----------------------------------
  Hash Full Join
@@ -7617,6 +8768,7 @@
 -- a clauseless (cross) join can't be unique
 explain (verbose, costs off)
 select * from j1 cross join j2;
+INFO:  Path param info: 0.000000
             QUERY PLAN             
 -----------------------------------
  Nested Loop
@@ -7632,6 +8784,7 @@
 -- ensure a natural join is marked as unique
 explain (verbose, costs off)
 select * from j1 natural join j2;
+INFO:  Path param info: 0.000000
             QUERY PLAN             
 -----------------------------------
  Hash Join
@@ -7650,6 +8803,7 @@
 explain (verbose, costs off)
 select * from j1
 inner join (select distinct id from j3) j3 on j1.id = j3.id;
+INFO:  Path param info: 0.000000
                QUERY PLAN                
 -----------------------------------------
  Nested Loop
@@ -7671,6 +8825,7 @@
 explain (verbose, costs off)
 select * from j1
 inner join (select id from j3 group by id) j3 on j1.id = j3.id;
+INFO:  Path param info: 0.000000
                QUERY PLAN                
 -----------------------------------------
  Nested Loop
@@ -7707,6 +8862,7 @@
 explain (verbose, costs off)
 select * from j1
 inner join j2 on j1.id1 = j2.id1;
+INFO:  Path param info: 0.000000
                 QUERY PLAN                
 ------------------------------------------
  Nested Loop
@@ -7722,6 +8878,7 @@
 explain (verbose, costs off)
 select * from j1
 inner join j2 on j1.id1 = j2.id1 and j1.id2 = j2.id2;
+INFO:  Path param info: 0.000000
                         QUERY PLAN                        
 ----------------------------------------------------------
  Nested Loop
@@ -7739,6 +8896,7 @@
 explain (verbose, costs off)
 select * from j1
 inner join j2 on j1.id1 = j2.id1 where j1.id2 = 1;
+INFO:  Path param info: 0.000000
                 QUERY PLAN                
 ------------------------------------------
  Nested Loop
@@ -7755,6 +8913,7 @@
 explain (verbose, costs off)
 select * from j1
 left join j2 on j1.id1 = j2.id1 where j1.id2 = 1;
+INFO:  Path param info: 0.000000
                 QUERY PLAN                
 ------------------------------------------
  Nested Loop Left Join
@@ -7772,6 +8931,7 @@
 explain (verbose, costs off)
 select * from j1
 inner join j2 on j1.id2 = j2.id2;
+INFO:  Path param info: 0.000000
                 QUERY PLAN                
 ------------------------------------------
  Nested Loop
@@ -7799,6 +8959,7 @@
 explain (costs off) select * from j1
 inner join j2 on j1.id1 = j2.id1 and j1.id2 = j2.id2
 where j1.id1 % 1000 = 1 and j2.id1 % 1000 = 1;
+INFO:  Path param info: 0.000000
                QUERY PLAN                
 -----------------------------------------
  Merge Join
@@ -7811,6 +8972,7 @@
 select * from j1
 inner join j2 on j1.id1 = j2.id1 and j1.id2 = j2.id2
 where j1.id1 % 1000 = 1 and j2.id1 % 1000 = 1;
+INFO:  Path param info: 0.000000
  id1 | id2 | id1 | id2 
 -----+-----+-----+-----
    1 |   1 |   1 |   1
@@ -7821,6 +8983,7 @@
 explain (costs off) select * from j1
 inner join j2 on j1.id1 = j2.id1 and j1.id2 = j2.id2
 where j1.id1 % 1000 = 1 and j2.id1 % 1000 = 1 and j2.id1 = any (array[1]);
+INFO:  Path param info: 0.000000
                      QUERY PLAN                     
 ----------------------------------------------------
  Merge Join
@@ -7834,6 +8997,7 @@
 select * from j1
 inner join j2 on j1.id1 = j2.id1 and j1.id2 = j2.id2
 where j1.id1 % 1000 = 1 and j2.id1 % 1000 = 1 and j2.id1 = any (array[1]);
+INFO:  Path param info: 0.000000
  id1 | id2 | id1 | id2 
 -----+-----+-----+-----
    1 |   1 |   1 |   1
@@ -7844,6 +9008,7 @@
 explain (costs off) select * from j1
 inner join j2 on j1.id1 = j2.id1 and j1.id2 = j2.id2
 where j1.id1 % 1000 = 1 and j2.id1 % 1000 = 1 and j2.id1 >= any (array[1,5]);
+INFO:  Path param info: 0.000000
                       QUERY PLAN                       
 -------------------------------------------------------
  Merge Join
@@ -7858,6 +9023,7 @@
 select * from j1
 inner join j2 on j1.id1 = j2.id1 and j1.id2 = j2.id2
 where j1.id1 % 1000 = 1 and j2.id1 % 1000 = 1 and j2.id1 >= any (array[1,5]);
+INFO:  Path param info: 0.000000
  id1 | id2 | id1 | id2 
 -----+-----+-----+-----
    1 |   1 |   1 |   1
@@ -7877,6 +9043,9 @@
 where exists (select 1 from tenk1 t3
               where t3.thousand = t1.unique1 and t3.tenthous = t2.hundred)
       and t1.unique1 < 1;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                    QUERY PLAN                                    
 ---------------------------------------------------------------------------------
  Nested Loop
@@ -7909,6 +9078,10 @@
 where exists (select 1 from j3
               where j3.unique1 = t1.unique1 and j3.tenthous = t2.hundred)
       and t1.unique1 < 1;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                QUERY PLAN                               
 ------------------------------------------------------------------------
  Nested Loop
diff -U3 /home/dbs/pg-queryplans/postgres/src/test/regress/expected/aggregates.out /home/dbs/pg-queryplans/postgres/src/test/regress/results/aggregates.out
--- /home/dbs/pg-queryplans/postgres/src/test/regress/expected/aggregates.out	2024-02-20 13:16:25.951611559 +0900
+++ /home/dbs/pg-queryplans/postgres/src/test/regress/results/aggregates.out	2024-02-20 16:07:32.052022240 +0900
@@ -695,6 +695,7 @@
      lateral (select s2, sum(s1 + s2) sm
               from generate_series(1, 3) s2 group by s2) ss
 order by 1, 2;
+INFO:  Path param info: 0.000000
                             QUERY PLAN                            
 ------------------------------------------------------------------
  Sort
@@ -718,6 +719,7 @@
      lateral (select s2, sum(s1 + s2) sm
               from generate_series(1, 3) s2 group by s2) ss
 order by 1, 2;
+INFO:  Path param info: 0.000000
  s1 | s2 | sm 
 ----+----+----
   1 |  1 |  2
@@ -1316,6 +1318,8 @@
 explain (costs off) select *
 from t1 inner join t2 on t1.a = t2.x and t1.b = t2.y
 group by t1.a,t1.b,t1.c,t1.d,t2.x,t2.y,t2.z;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                       QUERY PLAN                      
 ------------------------------------------------------
  HashAggregate
@@ -1331,6 +1335,8 @@
 explain (costs off) select t1.*,t2.x,t2.z
 from t1 inner join t2 on t1.a = t2.x and t1.b = t2.y
 group by t1.a,t1.b,t1.c,t1.d,t2.x,t2.z;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                       QUERY PLAN                      
 ------------------------------------------------------
  HashAggregate
@@ -1403,16 +1409,19 @@
 create temp table t1(f1 int, f2 int);
 create temp table t2(f1 bigint, f2 oid);
 select f1 from t1 left join t2 using (f1) group by f1;
+INFO:  Path param info: 0.000000
  f1 
 ----
 (0 rows)
 
 select f1 from t1 left join t2 using (f1) group by t1.f1;
+INFO:  Path param info: 0.000000
  f1 
 ----
 (0 rows)
 
 select t1.f1 from t1 left join t2 using (f1) group by t1.f1;
+INFO:  Path param info: 0.000000
  f1 
 ----
 (0 rows)
@@ -1426,6 +1435,8 @@
 select f1, count(*) from
 t1 x(x0,x1) left join (t1 left join t2 using(f1)) on (x0 = 0)
 group by f1;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  f1 | count 
 ----+-------
 (0 rows)
@@ -1434,6 +1445,8 @@
 select f2, count(*) from
 t1 x(x0,x1) left join (t1 left join t2 using(f2)) on (x0 = 0)
 group by f2;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  f2 | count 
 ----+-------
 (0 rows)
@@ -1632,6 +1645,7 @@
 select aggfstr(distinct a,b,c)
   from (values (1,3,'foo'),(0,null,null),(2,2,'bar'),(3,1,'baz')) v(a,b,c),
        generate_series(1,3) i;
+INFO:  Path param info: 0.000000
                 aggfstr                
 ---------------------------------------
  {"(1,3,foo)","(2,2,bar)","(3,1,baz)"}
@@ -1640,6 +1654,7 @@
 select aggfns(distinct a,b,c)
   from (values (1,3,'foo'),(0,null,null),(2,2,'bar'),(3,1,'baz')) v(a,b,c),
        generate_series(1,3) i;
+INFO:  Path param info: 0.000000
                     aggfns                     
 -----------------------------------------------
  {"(0,,)","(1,3,foo)","(2,2,bar)","(3,1,baz)"}
@@ -1648,6 +1663,7 @@
 select aggfstr(distinct a,b,c order by b)
   from (values (1,3,'foo'),(0,null,null),(2,2,'bar'),(3,1,'baz')) v(a,b,c),
        generate_series(1,3) i;
+INFO:  Path param info: 0.000000
                 aggfstr                
 ---------------------------------------
  {"(3,1,baz)","(2,2,bar)","(1,3,foo)"}
@@ -1656,6 +1672,7 @@
 select aggfns(distinct a,b,c order by b)
   from (values (1,3,'foo'),(0,null,null),(2,2,'bar'),(3,1,'baz')) v(a,b,c),
        generate_series(1,3) i;
+INFO:  Path param info: 0.000000
                     aggfns                     
 -----------------------------------------------
  {"(3,1,baz)","(2,2,bar)","(1,3,foo)","(0,,)"}
@@ -1665,6 +1682,7 @@
 select aggfns(distinct a,a,c order by c using ~<~,a)
   from (values (1,3,'foo'),(0,null,null),(2,2,'bar'),(3,1,'baz')) v(a,b,c),
        generate_series(1,2) i;
+INFO:  Path param info: 0.000000
                      aggfns                     
 ------------------------------------------------
  {"(2,2,bar)","(3,3,baz)","(1,1,foo)","(0,0,)"}
@@ -1673,6 +1691,7 @@
 select aggfns(distinct a,a,c order by c using ~<~)
   from (values (1,3,'foo'),(0,null,null),(2,2,'bar'),(3,1,'baz')) v(a,b,c),
        generate_series(1,2) i;
+INFO:  Path param info: 0.000000
                      aggfns                     
 ------------------------------------------------
  {"(2,2,bar)","(3,3,baz)","(1,1,foo)","(0,0,)"}
@@ -1681,6 +1700,7 @@
 select aggfns(distinct a,a,c order by a)
   from (values (1,3,'foo'),(0,null,null),(2,2,'bar'),(3,1,'baz')) v(a,b,c),
        generate_series(1,2) i;
+INFO:  Path param info: 0.000000
                      aggfns                     
 ------------------------------------------------
  {"(0,0,)","(1,1,foo)","(2,2,bar)","(3,3,baz)"}
@@ -1689,6 +1709,7 @@
 select aggfns(distinct a,b,c order by a,c using ~<~,b)
   from (values (1,3,'foo'),(0,null,null),(2,2,'bar'),(3,1,'baz')) v(a,b,c),
        generate_series(1,2) i;
+INFO:  Path param info: 0.000000
                     aggfns                     
 -----------------------------------------------
  {"(0,,)","(1,3,foo)","(2,2,bar)","(3,1,baz)"}
@@ -1729,6 +1750,7 @@
     from (values (1,3,'foo'),(0,null,null),(2,2,'bar'),(3,1,'baz')) v(a,b,c),
          generate_series(1,3) i;
 select * from agg_view1;
+INFO:  Path param info: 0.000000
                     aggfns                     
 -----------------------------------------------
  {"(0,,)","(1,3,foo)","(2,2,bar)","(3,1,baz)"}
@@ -1747,6 +1769,7 @@
     from (values (1,3,'foo'),(0,null,null),(2,2,'bar'),(3,1,'baz')) v(a,b,c),
          generate_series(1,3) i;
 select * from agg_view1;
+INFO:  Path param info: 0.000000
                     aggfns                     
 -----------------------------------------------
  {"(3,1,baz)","(2,2,bar)","(1,3,foo)","(0,,)"}
@@ -1813,6 +1836,7 @@
     from (values (1,3,'foo'),(0,null,null),(2,2,'bar'),(3,1,'baz')) v(a,b,c),
          generate_series(1,2) i;
 select * from agg_view1;
+INFO:  Path param info: 0.000000
                     aggfns                     
 -----------------------------------------------
  {"(0,,)","(1,3,foo)","(2,2,bar)","(3,1,baz)"}
@@ -2130,6 +2154,7 @@
 select aggfns(distinct a,b,c order by a,c using ~<~,b) filter (where a > 1)
     from (values (1,3,'foo'),(0,null,null),(2,2,'bar'),(3,1,'baz')) v(a,b,c),
     generate_series(1,2) i;
+INFO:  Path param info: 0.000000
           aggfns           
 ---------------------------
  {"(2,2,bar)","(3,1,baz)"}
@@ -2170,6 +2195,7 @@
 from generate_series(1,5) x,
      (values (0::float8),(0.1),(0.25),(0.4),(0.5),(0.6),(0.75),(0.9),(1)) v(p)
 group by p order by p;
+INFO:  Path param info: 0.000000
   p   | percentile_cont 
 ------+-----------------
     0 |               1
@@ -2945,6 +2971,7 @@
 explain (costs off)
   select 1 from tenk1
    where (hundred, thousand) in (select twothousand, twothousand from onek);
+INFO:  Path param info: 0.000000
                          QUERY PLAN                          
 -------------------------------------------------------------
  Hash Join
@@ -3060,6 +3087,7 @@
     from agg_data_2k
     where g < r.a
     group by g/2) as s;
+INFO:  Path param info: 0.000000
 set jit_above_cost to default;
 create table agg_group_3 as
 select (g/2)::numeric as c1, sum(7::int4) as c2, count(*) as c3
@@ -3094,6 +3122,7 @@
     from agg_data_2k
     where g < r.a
     group by g/2) as s;
+INFO:  Path param info: 0.000000
 set jit_above_cost to default;
 create table agg_hash_3 as
 select (g/2)::numeric as c1, sum(7::int4) as c2, count(*) as c3
diff -U3 /home/dbs/pg-queryplans/postgres/src/test/regress/expected/transactions.out /home/dbs/pg-queryplans/postgres/src/test/regress/results/transactions.out
--- /home/dbs/pg-queryplans/postgres/src/test/regress/expected/transactions.out	2024-02-20 13:16:25.975611131 +0900
+++ /home/dbs/pg-queryplans/postgres/src/test/regress/results/transactions.out	2024-02-20 16:07:31.852025160 +0900
@@ -168,10 +168,12 @@
 
 DELETE FROM temptest; -- ok
 UPDATE temptest SET a = 0 FROM writetest WHERE temptest.a = 1 AND writetest.a = temptest.a; -- ok
+INFO:  Path param info: 0.000000
 PREPARE test AS UPDATE writetest SET a = 0; -- ok
 EXECUTE test; -- fail
 ERROR:  cannot execute UPDATE in a read-only transaction
 SELECT * FROM writetest, temptest; -- ok
+INFO:  Path param info: 0.000000
  a | a 
 ---+---
 (0 rows)
@@ -325,6 +327,7 @@
 COMMIT;
 -- rows 6 and 8 should have been created by the same xact
 SELECT a.xmin = b.xmin FROM savepoints a, savepoints b WHERE a.a=6 AND b.a=8;
+INFO:  Path param info: 0.000000
  ?column? 
 ----------
  t
@@ -332,6 +335,7 @@
 
 -- rows 6 and 7 should have been created by different xacts
 SELECT a.xmin = b.xmin FROM savepoints a, savepoints b WHERE a.a=6 AND b.a=7;
+INFO:  Path param info: 0.000000
  ?column? 
 ----------
  f
@@ -353,6 +357,7 @@
 
 -- rows 9 and 11 should have been created by different xacts
 SELECT a.xmin = b.xmin FROM savepoints a, savepoints b WHERE a.a=9 AND b.a=11;
+INFO:  Path param info: 0.000000
  ?column? 
 ----------
  f
diff -U3 /home/dbs/pg-queryplans/postgres/src/test/regress/expected/portals.out /home/dbs/pg-queryplans/postgres/src/test/regress/results/portals.out
--- /home/dbs/pg-queryplans/postgres/src/test/regress/expected/portals.out	2024-02-20 13:16:25.967611274 +0900
+++ /home/dbs/pg-queryplans/postgres/src/test/regress/results/portals.out	2024-02-20 16:07:31.840025336 +0900
@@ -1247,6 +1247,9 @@
 -- Can update from a self-join, but only if FOR UPDATE says which to use
 BEGIN;
 DECLARE c1 CURSOR FOR SELECT * FROM uctest a, uctest b WHERE a.f1 = b.f1 + 5;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
 FETCH 1 FROM c1;
  f1 | f2  | f1 |  f2   
 ----+-----+----+-------
@@ -1258,6 +1261,9 @@
 ROLLBACK;
 BEGIN;
 DECLARE c1 CURSOR FOR SELECT * FROM uctest a, uctest b WHERE a.f1 = b.f1 + 5 FOR UPDATE;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
 FETCH 1 FROM c1;
  f1 | f2  | f1 |  f2   
 ----+-----+----+-------
@@ -1269,6 +1275,9 @@
 ROLLBACK;
 BEGIN;
 DECLARE c1 CURSOR FOR SELECT * FROM uctest a, uctest b WHERE a.f1 = b.f1 + 5 FOR SHARE OF a;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
 FETCH 1 FROM c1;
  f1 | f2  | f1 |  f2   
 ----+-----+----+-------
@@ -1303,6 +1312,10 @@
 ROLLBACK;
 BEGIN;
 DECLARE c CURSOR FOR SELECT * FROM tenk1 JOIN tenk2 USING (unique1);
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
 DELETE FROM tenk1 WHERE CURRENT OF c;  -- fail, cursor is on a join
 ERROR:  cursor "c" is not a simply updatable scan of table "tenk1"
 ROLLBACK;
diff -U3 /home/dbs/pg-queryplans/postgres/src/test/regress/expected/arrays.out /home/dbs/pg-queryplans/postgres/src/test/regress/results/arrays.out
--- /home/dbs/pg-queryplans/postgres/src/test/regress/expected/arrays.out	2024-02-20 13:16:25.955611488 +0900
+++ /home/dbs/pg-queryplans/postgres/src/test/regress/results/arrays.out	2024-02-20 16:07:31.904024401 +0900
@@ -1662,6 +1662,7 @@
 (3 rows)
 
 select * from unnest2(array[[1,2,3],[4,5,6]]);
+INFO:  Path param info: 0.000000
  unnest2 
 ---------
        1
diff -U3 /home/dbs/pg-queryplans/postgres/src/test/regress/expected/update.out /home/dbs/pg-queryplans/postgres/src/test/regress/results/update.out
--- /home/dbs/pg-queryplans/postgres/src/test/regress/expected/update.out	2024-02-20 13:16:25.979611060 +0900
+++ /home/dbs/pg-queryplans/postgres/src/test/regress/results/update.out	2024-02-20 16:07:31.912024285 +0900
@@ -743,6 +743,26 @@
 :init_range_parted;
 create table part_def partition of range_parted default;
 \d+ part_def
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                        Table "public.part_def"
  Column |       Type        | Collation | Nullable | Default | Storage  | Stats target | Description 
 --------+-------------------+-----------+----------+---------+----------+--------------+-------------
@@ -853,6 +873,7 @@
 
 update utrtest set b = b || b from (values (1), (2)) s(x) where a = s.x
   returning *, tableoid::regclass, xmin = pg_current_xact_id()::xid as xmin_ok;
+INFO:  Path param info: 0.000000
  a |   b    | x | tableoid | xmin_ok 
 ---+--------+---+----------+---------
  1 | foofoo | 1 | utr1     | t
@@ -861,9 +882,11 @@
 
 update utrtest set a = 3 - a from (values (1), (2)) s(x) where a = s.x
   returning *, tableoid::regclass, xmin = pg_current_xact_id()::xid as xmin_ok;  -- fails
+INFO:  Path param info: 0.000000
 ERROR:  cannot retrieve a system column in this context
 update utrtest set a = 3 - a from (values (1), (2)) s(x) where a = s.x
   returning *, tableoid::regclass;
+INFO:  Path param info: 0.000000
  a |   b    | x | tableoid 
 ---+--------+---+----------
  2 | foofoo | 1 | utr2
@@ -985,6 +1008,7 @@
 CREATE TABLE non_parted (id int);
 INSERT into non_parted VALUES (1), (1), (1), (2), (2), (2), (3), (3), (3);
 UPDATE list_parted t1 set a = 2 FROM non_parted t2 WHERE t1.a = t2.id and a = 1;
+INFO:  Path param info: 0.000000
 SELECT tableoid::regclass::text, * FROM list_parted ORDER BY 1, 2, 3, 4;
   tableoid  | a | b  | c  
 ------------+---+----+----
diff -U3 /home/dbs/pg-queryplans/postgres/src/test/regress/expected/prepared_xacts.out /home/dbs/pg-queryplans/postgres/src/test/regress/results/prepared_xacts.out
--- /home/dbs/pg-queryplans/postgres/src/test/regress/expected/prepared_xacts.out	2024-02-20 13:16:25.967611274 +0900
+++ /home/dbs/pg-queryplans/postgres/src/test/regress/results/prepared_xacts.out	2024-02-20 16:07:31.832025452 +0900
@@ -232,6 +232,23 @@
 -- Commit table creation
 COMMIT PREPARED 'regress-one';
 \d pxtest2
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
               Table "public.pxtest2"
  Column |  Type   | Collation | Nullable | Default 
 --------+---------+-----------+----------+---------
diff -U3 /home/dbs/pg-queryplans/postgres/src/test/regress/expected/brin.out /home/dbs/pg-queryplans/postgres/src/test/regress/results/brin.out
--- /home/dbs/pg-queryplans/postgres/src/test/regress/expected/brin.out	2024-02-20 13:16:25.955611488 +0900
+++ /home/dbs/pg-queryplans/postgres/src/test/regress/results/brin.out	2024-02-20 16:07:32.928009452 +0900
@@ -363,6 +363,7 @@
 	END LOOP;
 END;
 $x$;
+INFO:  Path param info: 0.000000
 RESET enable_seqscan;
 RESET enable_bitmapscan;
 INSERT INTO brintest SELECT
diff -U3 /home/dbs/pg-queryplans/postgres/src/test/regress/expected/gin.out /home/dbs/pg-queryplans/postgres/src/test/regress/results/gin.out
--- /home/dbs/pg-queryplans/postgres/src/test/regress/expected/gin.out	2024-02-20 13:16:25.959611416 +0900
+++ /home/dbs/pg-queryplans/postgres/src/test/regress/results/gin.out	2024-02-20 16:07:32.748012080 +0900
@@ -185,6 +185,13 @@
   lateral explain_query_json($$select * from t_gin_test_tbl where $$ || query) js,
   lateral execute_text_query_index($$select string_agg((i, j)::text, ' ') from t_gin_test_tbl where $$ || query) res_index,
   lateral execute_text_query_heap($$select string_agg((i, j)::text, ' ') from t_gin_test_tbl where $$ || query) res_heap;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                    query                   | return by index | removed by recheck | match 
 -------------------------------------------+-----------------+--------------------+-------
   i @> '{}'                                | 7               | 0                  | t
diff -U3 /home/dbs/pg-queryplans/postgres/src/test/regress/expected/gist.out /home/dbs/pg-queryplans/postgres/src/test/regress/results/gist.out
--- /home/dbs/pg-queryplans/postgres/src/test/regress/expected/gist.out	2024-02-20 13:16:25.959611416 +0900
+++ /home/dbs/pg-queryplans/postgres/src/test/regress/results/gist.out	2024-02-20 16:07:32.800011321 +0900
@@ -138,6 +138,7 @@
           (box(point(0.8,0.8), point(1.0,1.0)))) as v(bb)
 cross join lateral
   (select p from gist_tbl where p <@ bb order by p <-> bb[0] limit 2) ss;
+INFO:  Path param info: 0.000000
                              QUERY PLAN                             
 --------------------------------------------------------------------
  Nested Loop
@@ -154,6 +155,7 @@
           (box(point(0.8,0.8), point(1.0,1.0)))) as v(bb)
 cross join lateral
   (select p from gist_tbl where p <@ bb order by p <-> bb[0] limit 2) ss;
+INFO:  Path param info: 0.000000
       p      
 -------------
  (0.5,0.5)
diff -U3 /home/dbs/pg-queryplans/postgres/src/test/regress/expected/spgist.out /home/dbs/pg-queryplans/postgres/src/test/regress/results/spgist.out
--- /home/dbs/pg-queryplans/postgres/src/test/regress/expected/spgist.out	2024-02-20 13:16:25.975611131 +0900
+++ /home/dbs/pg-queryplans/postgres/src/test/regress/results/spgist.out	2024-02-20 16:07:32.684013014 +0900
@@ -32,10 +32,15 @@
   from generate_series(1,100,5) i,
        generate_series(1,100,5) j,
        generate_series(1,10) s;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
 create index spgist_box_idx on spgist_box_tbl using spgist (b);
 select count(*)
   from (values (point(5,5)),(point(8,8)),(point(12,12))) v(p)
  where exists(select * from spgist_box_tbl b where b.b && box(v.p,v.p));
+INFO:  Path param info: 0.000000
  count 
 -------
      3
@@ -93,4 +98,5 @@
 select box(point(i,j))
   from generate_series(1,100,5) i,
        generate_series(1,10,5) j;
+INFO:  Path param info: 0.000000
 -- leave this table around, to help in testing dump/restore
diff -U3 /home/dbs/pg-queryplans/postgres/src/test/regress/expected/privileges.out /home/dbs/pg-queryplans/postgres/src/test/regress/results/privileges.out
--- /home/dbs/pg-queryplans/postgres/src/test/regress/expected/privileges.out	2024-02-20 13:16:25.967611274 +0900
+++ /home/dbs/pg-queryplans/postgres/src/test/regress/results/privileges.out	2024-02-20 16:07:33.008008284 +0900
@@ -267,11 +267,13 @@
 WARNING:  no privileges were granted for "atest1"
 -- checks in subquery, both ok
 SELECT * FROM atest1 WHERE ( b IN ( SELECT col1 FROM atest2 ) );
+INFO:  Path param info: 0.000000
  a | b 
 ---+---
 (0 rows)
 
 SELECT * FROM atest2 WHERE ( col1 IN ( SELECT b FROM atest1 ) );
+INFO:  Path param info: 0.000000
  col1 | col2 
 ------+------
 (0 rows)
@@ -334,6 +336,7 @@
 UPDATE atest2 SET col2 = NOT col2; -- fails; requires SELECT on atest2
 ERROR:  permission denied for table atest2
 UPDATE atest2 SET col2 = true FROM atest1 WHERE atest1.a = 5; -- ok
+INFO:  Path param info: 0.000000
 SELECT * FROM atest1 FOR UPDATE; -- fail
 ERROR:  permission denied for table atest1
 SELECT * FROM atest2 FOR UPDATE; -- fail
@@ -349,8 +352,10 @@
 ERROR:  permission denied for table atest2
 -- checks in subquery, both fail
 SELECT * FROM atest1 WHERE ( b IN ( SELECT col1 FROM atest2 ) );
+INFO:  Path param info: 0.000000
 ERROR:  permission denied for table atest2
 SELECT * FROM atest2 WHERE ( col1 IN ( SELECT b FROM atest1 ) );
+INFO:  Path param info: 0.000000
 ERROR:  permission denied for table atest2
 SET SESSION AUTHORIZATION regress_priv_user4;
 COPY atest2 FROM stdin; -- ok
@@ -384,6 +389,7 @@
 GRANT SELECT ON atest12sbv TO PUBLIC;
 -- This plan should use nestloop, knowing that few rows will be selected.
 EXPLAIN (COSTS OFF) SELECT * FROM atest12v x, atest12v y WHERE x.a = y.b;
+INFO:  Path param info: 0.000000
                    QUERY PLAN                    
 -------------------------------------------------
  Nested Loop
@@ -397,6 +403,7 @@
 -- And this one.
 EXPLAIN (COSTS OFF) SELECT * FROM atest12 x, atest12 y
   WHERE x.a = y.b and abs(y.a) <<< 5;
+INFO:  Path param info: 0.000000
                     QUERY PLAN                     
 ---------------------------------------------------
  Nested Loop
@@ -409,6 +416,7 @@
 -- This should also be a nestloop, but the security barrier forces the inner
 -- scan to be materialized
 EXPLAIN (COSTS OFF) SELECT * FROM atest12sbv x, atest12sbv y WHERE x.a = y.b;
+INFO:  Path param info: 0.000000
                 QUERY PLAN                 
 -------------------------------------------
  Nested Loop
@@ -433,6 +441,7 @@
 -- These plans should continue to use a nestloop, since they execute with the
 -- privileges of the view owner.
 EXPLAIN (COSTS OFF) SELECT * FROM atest12v x, atest12v y WHERE x.a = y.b;
+INFO:  Path param info: 0.000000
                    QUERY PLAN                    
 -------------------------------------------------
  Nested Loop
@@ -444,6 +453,7 @@
 (6 rows)
 
 EXPLAIN (COSTS OFF) SELECT * FROM atest12sbv x, atest12sbv y WHERE x.a = y.b;
+INFO:  Path param info: 0.000000
                 QUERY PLAN                 
 -------------------------------------------
  Nested Loop
@@ -458,6 +468,7 @@
 -- A non-security barrier view does not guard against information leakage.
 EXPLAIN (COSTS OFF) SELECT * FROM atest12v x, atest12v y
   WHERE x.a = y.b and abs(y.a) <<< 5;
+INFO:  Path param info: 0.000000
                    QUERY PLAN                    
 -------------------------------------------------
  Nested Loop
@@ -471,6 +482,7 @@
 -- But a security barrier view isolates the leaky operator.
 EXPLAIN (COSTS OFF) SELECT * FROM atest12sbv x, atest12sbv y
   WHERE x.a = y.b and abs(y.a) <<< 5;
+INFO:  Path param info: 0.000000
              QUERY PLAN              
 -------------------------------------
  Nested Loop
@@ -489,6 +501,7 @@
 SET SESSION AUTHORIZATION regress_priv_user2;
 -- regress_priv_user2 should continue to get a good row estimate.
 EXPLAIN (COSTS OFF) SELECT * FROM atest12v x, atest12v y WHERE x.a = y.b;
+INFO:  Path param info: 0.000000
                    QUERY PLAN                    
 -------------------------------------------------
  Nested Loop
@@ -503,6 +516,7 @@
 -- to make use of the expression index's statistics.
 EXPLAIN (COSTS OFF) SELECT * FROM atest12 x, atest12 y
   WHERE x.a = y.b and abs(y.a) <<< 5;
+INFO:  Path param info: 0.000000
               QUERY PLAN              
 --------------------------------------
  Hash Join
@@ -651,68 +665,93 @@
 (1 row)
 
 SELECT 1 FROM atest5 a JOIN atest5 b USING (one); -- ok
+INFO:  Path param info: 0.000000
  ?column? 
 ----------
         1
 (1 row)
 
 SELECT 1 FROM atest5 a JOIN atest5 b USING (two); -- fail
+INFO:  Path param info: 0.000000
 ERROR:  permission denied for table atest5
 SELECT 1 FROM atest5 a NATURAL JOIN atest5 b; -- fail
+INFO:  Path param info: 0.000000
 ERROR:  permission denied for table atest5
 SELECT * FROM (atest5 a JOIN atest5 b USING (one)) j; -- fail
+INFO:  Path param info: 0.000000
 ERROR:  permission denied for table atest5
 SELECT j.* FROM (atest5 a JOIN atest5 b USING (one)) j; -- fail
+INFO:  Path param info: 0.000000
 ERROR:  permission denied for table atest5
 SELECT (j.*) IS NULL FROM (atest5 a JOIN atest5 b USING (one)) j; -- fail
+INFO:  Path param info: 0.000000
 ERROR:  permission denied for table atest5
 SELECT one FROM (atest5 a JOIN atest5 b(one,x,y,z) USING (one)) j; -- ok
+INFO:  Path param info: 0.000000
  one 
 -----
    1
 (1 row)
 
 SELECT j.one FROM (atest5 a JOIN atest5 b(one,x,y,z) USING (one)) j; -- ok
+INFO:  Path param info: 0.000000
  one 
 -----
    1
 (1 row)
 
 SELECT two FROM (atest5 a JOIN atest5 b(one,x,y,z) USING (one)) j; -- fail
+INFO:  Path param info: 0.000000
 ERROR:  permission denied for table atest5
 SELECT j.two FROM (atest5 a JOIN atest5 b(one,x,y,z) USING (one)) j; -- fail
+INFO:  Path param info: 0.000000
 ERROR:  permission denied for table atest5
 SELECT y FROM (atest5 a JOIN atest5 b(one,x,y,z) USING (one)) j; -- fail
+INFO:  Path param info: 0.000000
 ERROR:  permission denied for table atest5
 SELECT j.y FROM (atest5 a JOIN atest5 b(one,x,y,z) USING (one)) j; -- fail
+INFO:  Path param info: 0.000000
 ERROR:  permission denied for table atest5
 SELECT * FROM (atest5 a JOIN atest5 b USING (one)); -- fail
+INFO:  Path param info: 0.000000
 ERROR:  permission denied for table atest5
 SELECT a.* FROM (atest5 a JOIN atest5 b USING (one)); -- fail
+INFO:  Path param info: 0.000000
 ERROR:  permission denied for table atest5
 SELECT (a.*) IS NULL FROM (atest5 a JOIN atest5 b USING (one)); -- fail
+INFO:  Path param info: 0.000000
 ERROR:  permission denied for table atest5
 SELECT two FROM (atest5 a JOIN atest5 b(one,x,y,z) USING (one)); -- fail
+INFO:  Path param info: 0.000000
 ERROR:  permission denied for table atest5
 SELECT a.two FROM (atest5 a JOIN atest5 b(one,x,y,z) USING (one)); -- fail
+INFO:  Path param info: 0.000000
 ERROR:  permission denied for table atest5
 SELECT y FROM (atest5 a JOIN atest5 b(one,x,y,z) USING (one)); -- fail
+INFO:  Path param info: 0.000000
 ERROR:  permission denied for table atest5
 SELECT b.y FROM (atest5 a JOIN atest5 b(one,x,y,z) USING (one)); -- fail
+INFO:  Path param info: 0.000000
 ERROR:  permission denied for table atest5
 SELECT y FROM (atest5 a LEFT JOIN atest5 b(one,x,y,z) USING (one)); -- fail
+INFO:  Path param info: 0.000000
 ERROR:  permission denied for table atest5
 SELECT b.y FROM (atest5 a LEFT JOIN atest5 b(one,x,y,z) USING (one)); -- fail
+INFO:  Path param info: 0.000000
 ERROR:  permission denied for table atest5
 SELECT y FROM (atest5 a FULL JOIN atest5 b(one,x,y,z) USING (one)); -- fail
+INFO:  Path param info: 0.000000
 ERROR:  permission denied for table atest5
 SELECT b.y FROM (atest5 a FULL JOIN atest5 b(one,x,y,z) USING (one)); -- fail
+INFO:  Path param info: 0.000000
 ERROR:  permission denied for table atest5
 SELECT 1 FROM atest5 WHERE two = 2; -- fail
 ERROR:  permission denied for table atest5
 SELECT * FROM atest1, atest5; -- fail
+INFO:  Path param info: 0.000000
 ERROR:  permission denied for table atest5
 SELECT atest1.* FROM atest1, atest5; -- ok
+INFO:  Path param info: 0.000000
  a |  b  
 ---+-----
  1 | two
@@ -720,6 +759,7 @@
 (2 rows)
 
 SELECT atest1.*,atest5.one FROM atest1, atest5; -- ok
+INFO:  Path param info: 0.000000
  a |  b  | one 
 ---+-----+-----
  1 | two |   1
@@ -727,8 +767,10 @@
 (2 rows)
 
 SELECT atest1.*,atest5.one FROM atest1 JOIN atest5 ON (atest1.a = atest5.two); -- fail
+INFO:  Path param info: 0.000000
 ERROR:  permission denied for table atest5
 SELECT atest1.*,atest5.one FROM atest1 JOIN atest5 ON (atest1.a = atest5.one); -- ok
+INFO:  Path param info: 0.000000
  a |  b  | one 
 ---+-----+-----
  1 | two |   1
@@ -741,11 +783,13 @@
 GRANT SELECT (one,two) ON atest6 TO regress_priv_user4;
 SET SESSION AUTHORIZATION regress_priv_user4;
 SELECT one, two FROM atest5 NATURAL JOIN atest6; -- fail still
+INFO:  Path param info: 0.000000
 ERROR:  permission denied for table atest5
 SET SESSION AUTHORIZATION regress_priv_user1;
 GRANT SELECT (two) ON atest5 TO regress_priv_user4;
 SET SESSION AUTHORIZATION regress_priv_user4;
 SELECT one, two FROM atest5 NATURAL JOIN atest6; -- ok now
+INFO:  Path param info: 0.000000
  one | two 
 -----+-----
 (0 rows)
@@ -837,6 +881,7 @@
 	UPDATE SET b = s.b
 WHEN NOT MATCHED THEN
 	INSERT VALUES (a, NULL);
+INFO:  Path param info: 0.000000
 ERROR:  permission denied for table msource
 -- fail (s.b used in the INSERTed values)
 MERGE INTO mtarget t USING msource s ON t.a = s.a
@@ -844,6 +889,7 @@
 	UPDATE SET b = 'x'
 WHEN NOT MATCHED THEN
 	INSERT VALUES (a, b);
+INFO:  Path param info: 0.000000
 ERROR:  permission denied for table msource
 -- fail (s.b used in the WHEN quals)
 MERGE INTO mtarget t USING msource s ON t.a = s.a
@@ -851,6 +897,7 @@
 	UPDATE SET b = 'x'
 WHEN NOT MATCHED THEN
 	INSERT VALUES (a, NULL);
+INFO:  Path param info: 0.000000
 ERROR:  permission denied for table msource
 -- this should be ok since only s.a is accessed
 BEGIN;
@@ -859,6 +906,7 @@
 	UPDATE SET b = 'ok'
 WHEN NOT MATCHED THEN
 	INSERT VALUES (a, NULL);
+INFO:  Path param info: 0.000000
 ROLLBACK;
 SET SESSION AUTHORIZATION regress_priv_user1;
 GRANT SELECT (b) ON msource TO regress_priv_user4;
@@ -870,6 +918,7 @@
 	UPDATE SET b = s.b
 WHEN NOT MATCHED THEN
 	INSERT VALUES (a, b);
+INFO:  Path param info: 0.000000
 ROLLBACK;
 --
 -- test target privileges
@@ -880,6 +929,7 @@
 	UPDATE SET b = t.b
 WHEN NOT MATCHED THEN
 	INSERT VALUES (a, NULL);
+INFO:  Path param info: 0.000000
 ERROR:  permission denied for table mtarget
 -- fail (no UPDATE on t.a)
 MERGE INTO mtarget t USING msource s ON t.a = s.a
@@ -887,6 +937,7 @@
 	UPDATE SET b = s.b, a = t.a + 1
 WHEN NOT MATCHED THEN
 	INSERT VALUES (a, b);
+INFO:  Path param info: 0.000000
 ERROR:  permission denied for table mtarget
 -- fail (no SELECT on t.b)
 MERGE INTO mtarget t USING msource s ON t.a = s.a
@@ -894,17 +945,20 @@
 	UPDATE SET b = s.b
 WHEN NOT MATCHED THEN
 	INSERT VALUES (a, b);
+INFO:  Path param info: 0.000000
 ERROR:  permission denied for table mtarget
 -- ok
 BEGIN;
 MERGE INTO mtarget t USING msource s ON t.a = s.a
 WHEN MATCHED THEN
 	UPDATE SET b = s.b;
+INFO:  Path param info: 0.000000
 ROLLBACK;
 -- fail (no DELETE)
 MERGE INTO mtarget t USING msource s ON t.a = s.a
 WHEN MATCHED AND t.b IS NOT NULL THEN
 	DELETE;
+INFO:  Path param info: 0.000000
 ERROR:  permission denied for table mtarget
 -- grant delete privileges
 SET SESSION AUTHORIZATION regress_priv_user1;
@@ -914,6 +968,7 @@
 MERGE INTO mtarget t USING msource s ON t.a = s.a
 WHEN MATCHED AND t.b IS NOT NULL THEN
 	DELETE;
+INFO:  Path param info: 0.000000
 ROLLBACK;
 -- check error reporting with column privs
 SET SESSION AUTHORIZATION regress_priv_user1;
@@ -996,6 +1051,7 @@
 SELECT atest6 FROM atest6; -- fail
 ERROR:  permission denied for table atest6
 SELECT one FROM atest5 NATURAL JOIN atest6; -- fail
+INFO:  Path param info: 0.000000
 ERROR:  permission denied for table atest5
 SET SESSION AUTHORIZATION regress_priv_user1;
 ALTER TABLE atest6 DROP COLUMN three;
@@ -1006,6 +1062,7 @@
 (0 rows)
 
 SELECT one FROM atest5 NATURAL JOIN atest6; -- ok
+INFO:  Path param info: 0.000000
  one 
 -----
 (0 rows)
@@ -1388,6 +1445,7 @@
 select has_table_privilege(t2.oid,t1.oid,'select')
 from (select oid from pg_class where relname = 'pg_authid') as t1,
   (select oid from pg_roles where rolname = current_user) as t2;
+INFO:  Path param info: 0.000000
  has_table_privilege 
 ---------------------
  t
@@ -1396,6 +1454,7 @@
 select has_table_privilege(t2.oid,t1.oid,'insert')
 from (select oid from pg_class where relname = 'pg_authid') as t1,
   (select oid from pg_roles where rolname = current_user) as t2;
+INFO:  Path param info: 0.000000
  has_table_privilege 
 ---------------------
  t
@@ -1471,6 +1530,7 @@
 select has_table_privilege(t2.oid,t1.oid,'select')
 from (select oid from pg_class where relname = 'pg_class') as t1,
   (select oid from pg_roles where rolname = current_user) as t2;
+INFO:  Path param info: 0.000000
  has_table_privilege 
 ---------------------
  t
@@ -1479,6 +1539,7 @@
 select has_table_privilege(t2.oid,t1.oid,'insert')
 from (select oid from pg_class where relname = 'pg_class') as t1,
   (select oid from pg_roles where rolname = current_user) as t2;
+INFO:  Path param info: 0.000000
  has_table_privilege 
 ---------------------
  f
@@ -1552,6 +1613,7 @@
 select has_table_privilege(t2.oid,t1.oid,'select')
 from (select oid from pg_class where relname = 'atest1') as t1,
   (select oid from pg_roles where rolname = current_user) as t2;
+INFO:  Path param info: 0.000000
  has_table_privilege 
 ---------------------
  t
@@ -1560,6 +1622,7 @@
 select has_table_privilege(t2.oid,t1.oid,'insert')
 from (select oid from pg_class where relname = 'atest1') as t1,
   (select oid from pg_roles where rolname = current_user) as t2;
+INFO:  Path param info: 0.000000
  has_table_privilege 
 ---------------------
  f
@@ -1818,6 +1881,9 @@
 CREATE UNIQUE INDEX ON sro_index_mv (c) WHERE unwanted_grant_nofail(1) > 0;
 \c -
 REFRESH MATERIALIZED VIEW CONCURRENTLY sro_index_mv;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
 REFRESH MATERIALIZED VIEW sro_index_mv;
 DROP OWNED BY regress_sro_user;
 DROP ROLE regress_sro_user;
@@ -2143,6 +2209,12 @@
 (3 rows)
 
 TABLE information_schema.applicable_roles ORDER BY role_name COLLATE "C";
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
        grantee       |      role_name      | is_grantable 
 ---------------------+---------------------+--------------
  regress_priv_group2 | pg_database_owner   | NO
@@ -2471,6 +2543,7 @@
 SELECT count(*)
   FROM pg_default_acl d LEFT JOIN pg_namespace n ON defaclnamespace = n.oid
   WHERE nspname = 'testns';
+INFO:  Path param info: 0.000000
  count 
 -------
      3
@@ -2485,6 +2558,7 @@
 SELECT d.*     -- check that entries went away
   FROM pg_default_acl d LEFT JOIN pg_namespace n ON defaclnamespace = n.oid
   WHERE nspname IS NULL AND defaclnamespace != 0;
+INFO:  Path param info: 0.000000
  oid | defaclrole | defaclnamespace | defaclobjtype | defaclacl 
 -----+------------+-----------------+---------------+-----------
 (0 rows)
@@ -2606,6 +2680,7 @@
 SET SESSION ROLE regress_schemauser1;
 CREATE SCHEMA testns;
 SELECT nspname, rolname FROM pg_namespace, pg_roles WHERE pg_namespace.nspname = 'testns' AND pg_namespace.nspowner = pg_roles.oid;
+INFO:  Path param info: 0.000000
  nspname |       rolname       
 ---------+---------------------
  testns  | regress_schemauser1
@@ -2614,6 +2689,7 @@
 ALTER SCHEMA testns OWNER TO regress_schemauser2;
 ALTER ROLE regress_schemauser2 RENAME TO regress_schemauser_renamed;
 SELECT nspname, rolname FROM pg_namespace, pg_roles WHERE pg_namespace.nspname = 'testns' AND pg_namespace.nspowner = pg_roles.oid;
+INFO:  Path param info: 0.000000
  nspname |          rolname           
 ---------+----------------------------
  testns  | regress_schemauser_renamed
@@ -2638,6 +2714,7 @@
 set session role regress_priv_user4;
 grant select on dep_priv_test to regress_priv_user5;
 \dp dep_priv_test
+INFO:  Path param info: 0.000000
                                                Access privileges
  Schema |     Name      | Type  |               Access privileges               | Column privileges | Policies 
 --------+---------------+-------+-----------------------------------------------+-------------------+----------
@@ -2652,6 +2729,7 @@
 set session role regress_priv_user2;
 revoke select on dep_priv_test from regress_priv_user4 cascade;
 \dp dep_priv_test
+INFO:  Path param info: 0.000000
                                                Access privileges
  Schema |     Name      | Type  |               Access privileges               | Column privileges | Policies 
 --------+---------------+-------+-----------------------------------------------+-------------------+----------
@@ -2665,6 +2743,7 @@
 set session role regress_priv_user3;
 revoke select on dep_priv_test from regress_priv_user4 cascade;
 \dp dep_priv_test
+INFO:  Path param info: 0.000000
                                                Access privileges
  Schema |     Name      | Type  |               Access privileges               | Column privileges | Policies 
 --------+---------------+-------+-----------------------------------------------+-------------------+----------
diff -U3 /home/dbs/pg-queryplans/postgres/src/test/regress/expected/collate.out /home/dbs/pg-queryplans/postgres/src/test/regress/results/collate.out
--- /home/dbs/pg-queryplans/postgres/src/test/regress/expected/collate.out	2024-02-20 13:16:25.955611488 +0900
+++ /home/dbs/pg-queryplans/postgres/src/test/regress/results/collate.out	2024-02-20 16:07:32.504015642 +0900
@@ -16,6 +16,23 @@
     b text COLLATE "C" NOT NULL
 );
 \d collate_test1
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
         Table "collate_tests.collate_test1"
  Column |  Type   | Collation | Nullable | Default 
 --------+---------+-----------+----------+---------
@@ -33,6 +50,23 @@
     LIKE collate_test1
 );
 \d collate_test_like
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
       Table "collate_tests.collate_test_like"
  Column |  Type   | Collation | Nullable | Default 
 --------+---------+-----------+----------+---------
@@ -194,6 +228,8 @@
 CREATE VIEW collview3 AS SELECT a, lower((x || x) COLLATE "POSIX") FROM collate_test10;
 SELECT table_name, view_definition FROM information_schema.views
   WHERE table_name LIKE 'collview%' ORDER BY 1;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  table_name |                view_definition                 
 ------------+------------------------------------------------
  collview1  |  SELECT a,                                    +
@@ -623,10 +659,12 @@
 CREATE TABLE collate_test22 (f2 text COLLATE "POSIX");
 INSERT INTO collate_test22 VALUES ('foo'), ('bar'), ('baz');
 ALTER TABLE collate_test22 ADD FOREIGN KEY (f2) REFERENCES collate_test20; -- fail
+INFO:  Path param info: 0.000000
 ERROR:  insert or update on table "collate_test22" violates foreign key constraint "collate_test22_f2_fkey"
 DETAIL:  Key (f2)=(baz) is not present in table "collate_test20".
 DELETE FROM collate_test22 WHERE f2 = 'baz';
 ALTER TABLE collate_test22 ADD FOREIGN KEY (f2) REFERENCES collate_test20;
+INFO:  Path param info: 0.000000
 RESET enable_seqscan;
 RESET enable_hashjoin;
 RESET enable_nestloop;
@@ -693,6 +731,11 @@
 SELECT c1+1 AS c1p FROM
   (SELECT ('4' COLLATE "C")::INT AS c1) ss;
 \d+ collate_on_int
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                     View "collate_tests.collate_on_int"
  Column |  Type   | Collation | Nullable | Default | Storage | Description 
 --------+---------+-----------+----------+---------+---------+-------------
diff -U3 /home/dbs/pg-queryplans/postgres/src/test/regress/expected/matview.out /home/dbs/pg-queryplans/postgres/src/test/regress/results/matview.out
--- /home/dbs/pg-queryplans/postgres/src/test/regress/expected/matview.out	2024-02-20 13:16:25.963611345 +0900
+++ /home/dbs/pg-queryplans/postgres/src/test/regress/results/matview.out	2024-02-20 16:07:32.580014533 +0900
@@ -94,6 +94,25 @@
 CREATE INDEX mvtest_aa ON mvtest_bb (grandtot);
 -- check that plans seem reasonable
 \d+ mvtest_tvm
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                            Materialized view "public.mvtest_tvm"
  Column |  Type   | Collation | Nullable | Default | Storage  | Stats target | Description 
 --------+---------+-----------+----------+---------+----------+--------------+-------------
@@ -106,6 +125,25 @@
   ORDER BY type;
 
 \d+ mvtest_tvm
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                            Materialized view "public.mvtest_tvm"
  Column |  Type   | Collation | Nullable | Default | Storage  | Stats target | Description 
 --------+---------+-----------+----------+---------+----------+--------------+-------------
@@ -118,6 +156,25 @@
   ORDER BY type;
 
 \d+ mvtest_tvvm
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                            Materialized view "public.mvtest_tvvm"
   Column  |  Type   | Collation | Nullable | Default | Storage | Stats target | Description 
 ----------+---------+-----------+----------+---------+---------+--------------+-------------
@@ -127,6 +184,37 @@
    FROM mvtest_tvv;
 
 \d+ mvtest_bb
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                             Materialized view "public.mvtest_bb"
   Column  |  Type   | Collation | Nullable | Default | Storage | Stats target | Description 
 ----------+---------+-----------+----------+---------+---------+--------------+-------------
@@ -141,7 +229,39 @@
 CREATE SCHEMA mvtest_mvschema;
 ALTER MATERIALIZED VIEW mvtest_tvm SET SCHEMA mvtest_mvschema;
 \d+ mvtest_tvm
+INFO:  Path param info: 0.000000
 \d+ mvtest_tvmm
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                            Materialized view "public.mvtest_tvmm"
   Column  |  Type   | Collation | Nullable | Default | Storage | Stats target | Description 
 ----------+---------+-----------+----------+---------+---------+--------------+-------------
@@ -155,6 +275,25 @@
 
 SET search_path = mvtest_mvschema, public;
 \d+ mvtest_tvm
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                       Materialized view "mvtest_mvschema.mvtest_tvm"
  Column |  Type   | Collation | Nullable | Default | Storage  | Stats target | Description 
 --------+---------+-----------+----------+---------+----------+--------------+-------------
@@ -186,6 +325,9 @@
 (3 rows)
 
 REFRESH MATERIALIZED VIEW CONCURRENTLY mvtest_tm;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
 REFRESH MATERIALIZED VIEW mvtest_tvm;
 SELECT * FROM mvtest_tm ORDER BY type;
  type | totamt 
@@ -300,6 +442,8 @@
 ERROR:  cannot lock rows in materialized view "mvtest_tvvm"
 -- test join of mv and view
 SELECT type, m.totamt AS mtot, v.totamt AS vtot FROM mvtest_tm m LEFT JOIN mvtest_tv v USING (type) ORDER BY type;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  type | mtot | vtot 
 ------+------+------
  x    |    5 |    5
@@ -340,6 +484,11 @@
 CREATE VIEW mvtest_vt1 AS SELECT 1 moo;
 CREATE VIEW mvtest_vt2 AS SELECT moo, 2*moo FROM mvtest_vt1 UNION ALL SELECT moo, 3*moo FROM mvtest_vt1;
 \d+ mvtest_vt2
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                           View "public.mvtest_vt2"
   Column  |  Type   | Collation | Nullable | Default | Storage | Description 
 ----------+---------+-----------+----------+---------+---------+-------------
@@ -356,6 +505,25 @@
 
 CREATE MATERIALIZED VIEW mv_test2 AS SELECT moo, 2*moo FROM mvtest_vt2 UNION ALL SELECT moo, 3*moo FROM mvtest_vt2;
 \d+ mv_test2
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                             Materialized view "public.mv_test2"
   Column  |  Type   | Collation | Nullable | Default | Storage | Stats target | Description 
 ----------+---------+-----------+----------+---------+---------+--------------+-------------
@@ -391,6 +559,7 @@
 ERROR:  could not create unique index "mvtest_mv_a_idx"
 DETAIL:  Key (a)=(1) is duplicated.
 REFRESH MATERIALIZED VIEW CONCURRENTLY mvtest_mv;
+INFO:  Path param info: 0.000000
 ERROR:  new data for materialized view "mvtest_mv" contains duplicate rows without any null columns
 DETAIL:  Row: (1,10)
 DROP TABLE mvtest_foo CASCADE;
@@ -405,6 +574,9 @@
 INSERT INTO mvtest_foo VALUES(3, 4, 5);
 REFRESH MATERIALIZED VIEW mvtest_mv;
 REFRESH MATERIALIZED VIEW CONCURRENTLY mvtest_mv;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
 DROP TABLE mvtest_foo CASCADE;
 NOTICE:  drop cascades to materialized view mvtest_mv
 -- allow subquery to reference unpopulated matview if WITH NO DATA is specified
@@ -423,6 +595,9 @@
 CREATE UNIQUE INDEX mvtest_boxmv_id ON mvtest_boxmv (id);
 UPDATE mvtest_boxes SET b = '(2,2),(1,1)' WHERE id = 2;
 REFRESH MATERIALIZED VIEW CONCURRENTLY mvtest_boxmv;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
 SELECT * FROM mvtest_boxmv ORDER BY id;
  id |              b              
 ----+-----------------------------
@@ -449,6 +624,9 @@
 REFRESH MATERIALIZED VIEW mvtest_mv_v;
 UPDATE mvtest_v SET j = 3 WHERE x = 1;
 REFRESH MATERIALIZED VIEW CONCURRENTLY mvtest_mv_v;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
 REFRESH MATERIALIZED VIEW mvtest_mv_v_2;
 REFRESH MATERIALIZED VIEW mvtest_mv_v_3;
 REFRESH MATERIALIZED VIEW mvtest_mv_v_4;
@@ -493,6 +671,25 @@
 CREATE MATERIALIZED VIEW mv_unspecified_types AS
   SELECT 42 as i, 42.5 as num, 'foo' as u, 'foo'::unknown as u2, null as n;
 \d+ mv_unspecified_types
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                       Materialized view "public.mv_unspecified_types"
  Column |  Type   | Collation | Nullable | Default | Storage  | Stats target | Description 
 --------+---------+-----------+----------+---------+----------+--------------+-------------
@@ -526,6 +723,7 @@
 CREATE TABLE mvtest_v AS SELECT generate_series(1,10) AS a;
 CREATE MATERIALIZED VIEW mvtest_mv_v AS SELECT a FROM mvtest_v WHERE a <= 5;
 DELETE FROM mvtest_v WHERE EXISTS ( SELECT * FROM mvtest_mv_v WHERE mvtest_mv_v.a = mvtest_v.a );
+INFO:  Path param info: 0.000000
 SELECT * FROM mvtest_v;
  a  
 ----
@@ -570,6 +768,9 @@
 RESET ROLE;
 REFRESH MATERIALIZED VIEW mvtest_mv_foo;
 REFRESH MATERIALIZED VIEW CONCURRENTLY mvtest_mv_foo;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
 DROP OWNED BY regress_user_mvtest CASCADE;
 DROP ROLE regress_user_mvtest;
 -- Concurrent refresh requires a unique index on the materialized
@@ -586,6 +787,7 @@
 NOTICE:  index "mvtest_drop_idx" does not exist, skipping
 CREATE UNIQUE INDEX mvtest_drop_idx ON drop_idx_matview (i);
 REFRESH MATERIALIZED VIEW CONCURRENTLY drop_idx_matview;
+INFO:  Path param info: 0.000000
 ERROR:  could not find suitable unique index on materialized view
 DROP MATERIALIZED VIEW drop_idx_matview; -- clean up
 -- make sure that create WITH NO DATA works via SPI
diff -U3 /home/dbs/pg-queryplans/postgres/src/test/regress/expected/lock.out /home/dbs/pg-queryplans/postgres/src/test/regress/results/lock.out
--- /home/dbs/pg-queryplans/postgres/src/test/regress/expected/lock.out	2024-02-20 13:16:25.963611345 +0900
+++ /home/dbs/pg-queryplans/postgres/src/test/regress/results/lock.out	2024-02-20 16:07:32.484015934 +0900
@@ -48,6 +48,8 @@
 select relname from pg_locks l, pg_class c
  where l.relation = c.oid and relname like '%lock_%' and mode = 'ExclusiveLock'
  order by relname;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
   relname   
 ------------
  lock_tbl1
@@ -61,6 +63,8 @@
 select relname from pg_locks l, pg_class c
  where l.relation = c.oid and relname like '%lock_%' and mode = 'ExclusiveLock'
  order by relname;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
   relname   
 ------------
  lock_tbl1
@@ -75,6 +79,8 @@
 select relname from pg_locks l, pg_class c
  where l.relation = c.oid and relname like '%lock_%' and mode = 'ExclusiveLock'
  order by relname;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
   relname   
 ------------
  lock_tbl1
@@ -90,6 +96,8 @@
 select relname from pg_locks l, pg_class c
  where l.relation = c.oid and relname like '%lock_%' and mode = 'ExclusiveLock'
  order by relname;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
   relname   
 ------------
  lock_tbl1
@@ -104,6 +112,8 @@
 select relname from pg_locks l, pg_class c
  where l.relation = c.oid and relname like '%lock_%' and mode = 'ExclusiveLock'
  order by relname;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
   relname   
 ------------
  lock_tbl1
@@ -118,6 +128,8 @@
 select relname from pg_locks l, pg_class c
  where l.relation = c.oid and relname like '%lock_%' and mode = 'ExclusiveLock'
  order by relname;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
   relname   
 ------------
  lock_tbl1
@@ -174,6 +186,8 @@
 select relname from pg_locks l, pg_class c
  where l.relation = c.oid and relname like '%lock_%' and mode = 'AccessExclusiveLock'
  order by relname;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
   relname   
 ------------
  lock_tbl1
@@ -210,6 +224,8 @@
 select relname from pg_locks l, pg_class c
  where l.relation = c.oid and relname like '%lock_%' and mode = 'AccessExclusiveLock'
  order by relname;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
   relname   
 ------------
  lock_tbl1
diff -U3 /home/dbs/pg-queryplans/postgres/src/test/regress/expected/replica_identity.out /home/dbs/pg-queryplans/postgres/src/test/regress/results/replica_identity.out
--- /home/dbs/pg-queryplans/postgres/src/test/regress/expected/replica_identity.out	2024-02-20 13:16:25.971611203 +0900
+++ /home/dbs/pg-queryplans/postgres/src/test/regress/results/replica_identity.out	2024-02-20 16:07:32.520015409 +0900
@@ -75,6 +75,39 @@
 (1 row)
 
 \d test_replica_identity
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                             Table "public.test_replica_identity"
  Column |  Type   | Collation | Nullable |                      Default                      
 --------+---------+-----------+----------+---------------------------------------------------
@@ -105,6 +138,39 @@
 (1 row)
 
 \d test_replica_identity
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                             Table "public.test_replica_identity"
  Column |  Type   | Collation | Nullable |                      Default                      
 --------+---------+-----------+----------+---------------------------------------------------
@@ -153,6 +219,41 @@
 (1 row)
 
 \d+ test_replica_identity
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                                 Table "public.test_replica_identity"
  Column |  Type   | Collation | Nullable |                      Default                      | Storage  | Stats target | Description 
 --------+---------+-----------+----------+---------------------------------------------------+----------+--------------+-------------
@@ -186,6 +287,35 @@
 CREATE TABLE test_replica_identity2 (id int UNIQUE NOT NULL);
 ALTER TABLE test_replica_identity2 REPLICA IDENTITY USING INDEX test_replica_identity2_id_key;
 \d test_replica_identity2
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
        Table "public.test_replica_identity2"
  Column |  Type   | Collation | Nullable | Default 
 --------+---------+-----------+----------+---------
@@ -195,6 +325,35 @@
 
 ALTER TABLE test_replica_identity2 ALTER COLUMN id TYPE bigint;
 \d test_replica_identity2
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
       Table "public.test_replica_identity2"
  Column |  Type  | Collation | Nullable | Default 
 --------+--------+-----------+----------+---------
@@ -207,6 +366,35 @@
 CREATE UNIQUE INDEX test_replica_identity3_id_key ON test_replica_identity3 (id);
 ALTER TABLE test_replica_identity3 REPLICA IDENTITY USING INDEX test_replica_identity3_id_key;
 \d test_replica_identity3
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
        Table "public.test_replica_identity3"
  Column |  Type   | Collation | Nullable | Default 
 --------+---------+-----------+----------+---------
@@ -216,6 +404,35 @@
 
 ALTER TABLE test_replica_identity3 ALTER COLUMN id TYPE bigint;
 \d test_replica_identity3
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
       Table "public.test_replica_identity3"
  Column |  Type  | Collation | Nullable | Default 
 --------+--------+-----------+----------+---------
@@ -242,6 +459,40 @@
 ALTER TABLE ONLY test_replica_identity4_1
   ADD CONSTRAINT test_replica_identity4_1_pkey PRIMARY KEY (id);
 \d+ test_replica_identity4
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                     Partitioned table "public.test_replica_identity4"
  Column |  Type   | Collation | Nullable | Default | Storage | Stats target | Description 
 --------+---------+-----------+----------+---------+---------+--------------+-------------
@@ -254,6 +505,40 @@
 ALTER INDEX test_replica_identity4_pkey
   ATTACH PARTITION test_replica_identity4_1_pkey;
 \d+ test_replica_identity4
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                     Partitioned table "public.test_replica_identity4"
  Column |  Type   | Collation | Nullable | Default | Storage | Stats target | Description 
 --------+---------+-----------+----------+---------+---------+--------------+-------------
diff -U3 /home/dbs/pg-queryplans/postgres/src/test/regress/expected/rowsecurity.out /home/dbs/pg-queryplans/postgres/src/test/regress/results/rowsecurity.out
--- /home/dbs/pg-queryplans/postgres/src/test/regress/expected/rowsecurity.out	2024-02-20 13:16:25.971611203 +0900
+++ /home/dbs/pg-queryplans/postgres/src/test/regress/results/rowsecurity.out	2024-02-20 16:07:32.648013541 +0900
@@ -93,6 +93,8 @@
 CREATE POLICY p1r ON document AS RESTRICTIVE TO regress_rls_dave
     USING (cid <> 44);
 \dp
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                                                   Access privileges
        Schema       |   Name   | Type  |              Access privileges              | Column privileges |                  Policies                  
 --------------------+----------+-------+---------------------------------------------+-------------------+--------------------------------------------
@@ -113,6 +115,39 @@
 (3 rows)
 
 \d document
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
         Table "regress_rls_schema.document"
  Column  |  Type   | Collation | Nullable | Default 
 ---------+---------+-----------+----------+---------
@@ -138,6 +173,11 @@
       USING (((cid <> 44) AND (cid < 50)))
 
 SELECT * FROM pg_policies WHERE schemaname = 'regress_rls_schema' AND tablename = 'document' ORDER BY policyname;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
      schemaname     | tablename | policyname | permissive  |       roles        | cmd |                    qual                    | with_check 
 --------------------+-----------+------------+-------------+--------------------+-----+--------------------------------------------+------------
  regress_rls_schema | document  | p1         | PERMISSIVE  | {public}           | ALL | (dlevel <= ( SELECT uaccount.seclv        +| 
@@ -166,6 +206,8 @@
 (5 rows)
 
 SELECT * FROM document NATURAL JOIN category WHERE f_leak(dtitle) ORDER BY did;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
 NOTICE:  f_leak => my first novel
 NOTICE:  f_leak => my first manga
 NOTICE:  f_leak => great science fiction
@@ -223,6 +265,8 @@
 (10 rows)
 
 SELECT * FROM document NATURAL JOIN category WHERE f_leak(dtitle) ORDER BY did;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
 NOTICE:  f_leak => my first novel
 NOTICE:  f_leak => my second novel
 NOTICE:  f_leak => my science fiction
@@ -275,6 +319,7 @@
 (5 rows)
 
 EXPLAIN (COSTS OFF) SELECT * FROM document NATURAL JOIN category WHERE f_leak(dtitle);
+INFO:  Path param info: 0.000000
                         QUERY PLAN                         
 -----------------------------------------------------------
  Hash Join
@@ -310,6 +355,8 @@
 (7 rows)
 
 SELECT * FROM document NATURAL JOIN category WHERE f_leak(dtitle) ORDER BY did;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
 NOTICE:  f_leak => my first novel
 NOTICE:  f_leak => my second novel
 NOTICE:  f_leak => my science fiction
@@ -339,6 +386,7 @@
 (5 rows)
 
 EXPLAIN (COSTS OFF) SELECT * FROM document NATURAL JOIN category WHERE f_leak(dtitle);
+INFO:  Path param info: 0.000000
                                                 QUERY PLAN                                                
 ----------------------------------------------------------------------------------------------------------
  Hash Join
@@ -384,6 +432,8 @@
 (5 rows)
 
 SELECT * FROM document NATURAL JOIN category WHERE f_leak(dtitle) ORDER by did;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
 NOTICE:  f_leak => my first novel
 NOTICE:  f_leak => my second novel
 NOTICE:  f_leak => my science fiction
@@ -412,6 +462,8 @@
 (3 rows)
 
 SELECT * FROM document NATURAL JOIN category WHERE f_leak(dtitle) ORDER by did;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
 NOTICE:  f_leak => great science fiction
 NOTICE:  f_leak => great technology book
 NOTICE:  f_leak => great manga
@@ -430,6 +482,7 @@
 (2 rows)
 
 EXPLAIN (COSTS OFF) SELECT * FROM document NATURAL JOIN category WHERE f_leak(dtitle);
+INFO:  Path param info: 0.000000
                           QUERY PLAN                           
 ---------------------------------------------------------------
  Nested Loop
@@ -449,6 +502,7 @@
 -- cannot delete PK referenced by invisible FK
 SET SESSION AUTHORIZATION regress_rls_bob;
 SELECT * FROM document d FULL OUTER JOIN category c on d.cid = c.cid ORDER BY d.did, c.cid;
+INFO:  Path param info: 0.000000
  did | cid | dlevel |     dauthor     |       dtitle       | cid |   cname    
 -----+-----+--------+-----------------+--------------------+-----+------------
    1 |  11 |      1 | regress_rls_bob | my first novel     |  11 | novel
@@ -465,6 +519,7 @@
 -- can insert FK referencing invisible PK
 SET SESSION AUTHORIZATION regress_rls_carol;
 SELECT * FROM document d FULL OUTER JOIN category c on d.cid = c.cid ORDER BY d.did, c.cid;
+INFO:  Path param info: 0.000000
  did | cid | dlevel |      dauthor      |        dtitle         | cid |      cname      
 -----+-----+--------+-------------------+-----------------------+-----+-----------------
    6 |  22 |      1 | regress_rls_carol | great science fiction |  22 | science fiction
@@ -938,6 +993,28 @@
 CREATE POLICY pp1r ON part_document AS RESTRICTIVE TO regress_rls_dave
     USING (cid < 55);
 \d+ part_document
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                     Partitioned table "regress_rls_schema.part_document"
  Column  |  Type   | Collation | Nullable | Default | Storage  | Stats target | Description 
 ---------+---------+-----------+----------+---------+----------+--------------+-------------
@@ -960,6 +1037,10 @@
             part_document_satire FOR VALUES FROM (55) TO (56)
 
 SELECT * FROM pg_policies WHERE schemaname = 'regress_rls_schema' AND tablename like '%part_document%' ORDER BY policyname;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
      schemaname     |   tablename   | policyname | permissive  |       roles        | cmd |                    qual                    | with_check 
 --------------------+---------------+------------+-------------+--------------------+-----+--------------------------------------------+------------
  regress_rls_schema | part_document | pp1        | PERMISSIVE  | {public}           | ALL | (dlevel <= ( SELECT uaccount.seclv        +| 
@@ -1702,6 +1783,7 @@
 -- updates with from clause
 EXPLAIN (COSTS OFF) UPDATE t2 SET b=t2.b FROM t3
 WHERE t2.a = 3 and t3.a = 2 AND f_leak(t2.b) AND f_leak(t3.b);
+INFO:  Path param info: 0.000000
                            QUERY PLAN                            
 -----------------------------------------------------------------
  Update on t2
@@ -1714,10 +1796,12 @@
 
 UPDATE t2 SET b=t2.b FROM t3
 WHERE t2.a = 3 and t3.a = 2 AND f_leak(t2.b) AND f_leak(t3.b);
+INFO:  Path param info: 0.000000
 NOTICE:  f_leak => cde
 NOTICE:  f_leak => yyyyyy
 EXPLAIN (COSTS OFF) UPDATE t1 SET b=t1.b FROM t2
 WHERE t1.a = 3 and t2.a = 3 AND f_leak(t1.b) AND f_leak(t2.b);
+INFO:  Path param info: 0.000000
                               QUERY PLAN                               
 -----------------------------------------------------------------------
  Update on t1
@@ -1738,9 +1822,11 @@
 
 UPDATE t1 SET b=t1.b FROM t2
 WHERE t1.a = 3 and t2.a = 3 AND f_leak(t1.b) AND f_leak(t2.b);
+INFO:  Path param info: 0.000000
 NOTICE:  f_leak => cde
 EXPLAIN (COSTS OFF) UPDATE t2 SET b=t2.b FROM t1
 WHERE t1.a = 3 and t2.a = 3 AND f_leak(t1.b) AND f_leak(t2.b);
+INFO:  Path param info: 0.000000
                               QUERY PLAN                               
 -----------------------------------------------------------------------
  Update on t2
@@ -1758,11 +1844,13 @@
 
 UPDATE t2 SET b=t2.b FROM t1
 WHERE t1.a = 3 and t2.a = 3 AND f_leak(t1.b) AND f_leak(t2.b);
+INFO:  Path param info: 0.000000
 NOTICE:  f_leak => cde
 -- updates with from clause self join
 EXPLAIN (COSTS OFF) UPDATE t2 t2_1 SET b = t2_2.b FROM t2 t2_2
 WHERE t2_1.a = 3 AND t2_2.a = t2_1.a AND t2_2.b = t2_1.b
 AND f_leak(t2_1.b) AND f_leak(t2_2.b) RETURNING *, t2_1, t2_2;
+INFO:  Path param info: 0.000000
                            QUERY PLAN                            
 -----------------------------------------------------------------
  Update on t2 t2_1
@@ -1777,6 +1865,7 @@
 UPDATE t2 t2_1 SET b = t2_2.b FROM t2 t2_2
 WHERE t2_1.a = 3 AND t2_2.a = t2_1.a AND t2_2.b = t2_1.b
 AND f_leak(t2_1.b) AND f_leak(t2_2.b) RETURNING *, t2_1, t2_2;
+INFO:  Path param info: 0.000000
 NOTICE:  f_leak => cde
 NOTICE:  f_leak => cde
  id  | a |  b  |  c  | id  | a |  b  |  c  |      t2_1       |      t2_2       
@@ -1787,6 +1876,7 @@
 EXPLAIN (COSTS OFF) UPDATE t1 t1_1 SET b = t1_2.b FROM t1 t1_2
 WHERE t1_1.a = 4 AND t1_2.a = t1_1.a AND t1_2.b = t1_1.b
 AND f_leak(t1_1.b) AND f_leak(t1_2.b) RETURNING *, t1_1, t1_2;
+INFO:  Path param info: 0.000000
                                  QUERY PLAN                                  
 -----------------------------------------------------------------------------
  Update on t1 t1_1
@@ -1815,6 +1905,7 @@
 UPDATE t1 t1_1 SET b = t1_2.b FROM t1 t1_2
 WHERE t1_1.a = 4 AND t1_2.a = t1_1.a AND t1_2.b = t1_1.b
 AND f_leak(t1_1.b) AND f_leak(t1_2.b) RETURNING *, t1_1, t1_2;
+INFO:  Path param info: 0.000000
 NOTICE:  f_leak => daddad_updt
 NOTICE:  f_leak => daddad_updt
 NOTICE:  f_leak => defdef
@@ -2243,6 +2334,7 @@
 	DELETE
 WHEN NOT MATCHED THEN
 	INSERT VALUES (12, 11, 1, 'regress_rls_dave', 'another novel');
+INFO:  Path param info: 0.000000
 ERROR:  new row violates row-level security policy for table "document"
 -- This should be fine
 MERGE INTO document d
@@ -2252,6 +2344,7 @@
 	DELETE
 WHEN NOT MATCHED THEN
 	INSERT VALUES (12, 11, 1, 'regress_rls_bob', 'another novel');
+INFO:  Path param info: 0.000000
 -- ok
 MERGE INTO document d
 USING (SELECT 1 as sdid) s
@@ -2260,6 +2353,7 @@
 	UPDATE SET dnotes = dnotes || ' notes added by merge4 '
 WHEN NOT MATCHED THEN
 	INSERT VALUES (12, 11, 1, 'regress_rls_bob', 'another novel');
+INFO:  Path param info: 0.000000
 -- drop and create a new SELECT policy which prevents us from reading
 -- any document except with category 'novel'
 RESET SESSION AUTHORIZATION;
@@ -2276,6 +2370,7 @@
 	UPDATE SET dnotes = dnotes || ' notes added by merge5 '
 WHEN NOT MATCHED THEN
 	INSERT VALUES (12, 11, 1, 'regress_rls_bob', 'another novel');
+INFO:  Path param info: 0.000000
 ERROR:  duplicate key value violates unique constraint "document_pkey"
 -- UPDATE action fails if new row is not visible
 MERGE INTO document d
@@ -2300,6 +2395,7 @@
 	UPDATE SET dnotes = dnotes || ' notes added by merge8 '
 WHEN NOT MATCHED THEN
 	INSERT VALUES (13, 44, 1, 'regress_rls_bob', 'new manga');
+INFO:  Path param info: 0.000000
 RESET SESSION AUTHORIZATION;
 -- drop the restrictive SELECT policy so that we can look at the
 -- final state of the table
@@ -2368,6 +2464,7 @@
 
 PREPARE plancache_test2 AS WITH q AS MATERIALIZED (SELECT * FROM z1 WHERE f_leak(b)) SELECT * FROM q,z2;
 EXPLAIN (COSTS OFF) EXECUTE plancache_test2;
+INFO:  Path param info: 0.000000
                    QUERY PLAN                    
 -------------------------------------------------
  Nested Loop
@@ -2381,6 +2478,7 @@
 
 PREPARE plancache_test3 AS WITH q AS MATERIALIZED (SELECT * FROM z2) SELECT * FROM q,z1 WHERE f_leak(z1.b);
 EXPLAIN (COSTS OFF) EXECUTE plancache_test3;
+INFO:  Path param info: 0.000000
                      QUERY PLAN                      
 -----------------------------------------------------
  Nested Loop
@@ -2417,6 +2515,7 @@
 (2 rows)
 
 EXPLAIN (COSTS OFF) EXECUTE plancache_test2;
+INFO:  Path param info: 0.000000
                    QUERY PLAN                    
 -------------------------------------------------
  Nested Loop
@@ -2429,6 +2528,7 @@
 (7 rows)
 
 EXPLAIN (COSTS OFF) EXECUTE plancache_test3;
+INFO:  Path param info: 0.000000
                      QUERY PLAN                      
 -----------------------------------------------------
  Nested Loop
@@ -2465,6 +2565,7 @@
 (2 rows)
 
 EXPLAIN (COSTS OFF) EXECUTE plancache_test2;
+INFO:  Path param info: 0.000000
                    QUERY PLAN                    
 -------------------------------------------------
  Nested Loop
@@ -2477,6 +2578,7 @@
 (7 rows)
 
 EXPLAIN (COSTS OFF) EXECUTE plancache_test3;
+INFO:  Path param info: 0.000000
                      QUERY PLAN                      
 -----------------------------------------------------
  Nested Loop
@@ -2513,6 +2615,7 @@
 (2 rows)
 
 EXPLAIN (COSTS OFF) EXECUTE plancache_test2;
+INFO:  Path param info: 0.000000
                    QUERY PLAN                    
 -------------------------------------------------
  Nested Loop
@@ -2525,6 +2628,7 @@
 (7 rows)
 
 EXPLAIN (COSTS OFF) EXECUTE plancache_test3;
+INFO:  Path param info: 0.000000
                      QUERY PLAN                      
 -----------------------------------------------------
  Nested Loop
@@ -3163,6 +3267,7 @@
 );
 INSERT INTO test_qual_pushdown VALUES ('abc'),('def');
 SELECT * FROM y2 JOIN test_qual_pushdown ON (b = abc) WHERE f_leak(abc);
+INFO:  Path param info: 0.000000
 NOTICE:  f_leak => abc
 NOTICE:  f_leak => def
  a | b | abc 
@@ -3170,6 +3275,7 @@
 (0 rows)
 
 EXPLAIN (COSTS OFF) SELECT * FROM y2 JOIN test_qual_pushdown ON (b = abc) WHERE f_leak(abc);
+INFO:  Path param info: 0.000000
                                QUERY PLAN                                
 -------------------------------------------------------------------------
  Hash Join
@@ -3182,6 +3288,7 @@
 (7 rows)
 
 SELECT * FROM y2 JOIN test_qual_pushdown ON (b = abc) WHERE f_leak(b);
+INFO:  Path param info: 0.000000
 NOTICE:  f_leak => 5feceb66ffc86f38d952786c6d696c79
 NOTICE:  f_leak => d4735e3a265e16eee03f59718b9b5d03
 NOTICE:  f_leak => 4e07408562bedb8b60ce05c1decfe3ad
@@ -3201,6 +3308,7 @@
 (0 rows)
 
 EXPLAIN (COSTS OFF) SELECT * FROM y2 JOIN test_qual_pushdown ON (b = abc) WHERE f_leak(b);
+INFO:  Path param info: 0.000000
                                        QUERY PLAN                                        
 -----------------------------------------------------------------------------------------
  Hash Join
@@ -3340,6 +3448,7 @@
     FROM pg_policy pol
     JOIN pg_class pc ON (pc.oid = pol.polrelid)
     WHERE relname = 't1';
+INFO:  Path param info: 0.000000
  polname | relname 
 ---------+---------
  p1      | t1
@@ -3350,6 +3459,7 @@
     FROM pg_policy pol
     JOIN pg_class pc ON (pc.oid = pol.polrelid)
     WHERE relname = 't1';
+INFO:  Path param info: 0.000000
  polname | relname 
 ---------+---------
  p2      | t1
@@ -3453,6 +3563,7 @@
 SET SESSION AUTHORIZATION regress_rls_bob;
 -- Check RLS JOIN with Non-RLS.
 SELECT id, author, message FROM blog JOIN comment ON id = blog_id;
+INFO:  Path param info: 0.000000
  id | author |   message   
 ----+--------+-------------
   4 | alice  | insane!
@@ -3461,6 +3572,7 @@
 
 -- Check Non-RLS JOIN with RLS.
 SELECT id, author, message FROM comment JOIN blog ON id = blog_id;
+INFO:  Path param info: 0.000000
  id | author |   message   
 ----+--------+-------------
   4 | alice  | insane!
@@ -3473,12 +3585,14 @@
 SET SESSION AUTHORIZATION regress_rls_bob;
 -- Check RLS JOIN RLS
 SELECT id, author, message FROM blog JOIN comment ON id = blog_id;
+INFO:  Path param info: 0.000000
  id | author |   message   
 ----+--------+-------------
   2 | bob    | who did it?
 (1 row)
 
 SELECT id, author, message FROM comment JOIN blog ON id = blog_id;
+INFO:  Path param info: 0.000000
  id | author |   message   
 ----+--------+-------------
   2 | bob    | who did it?
@@ -3905,6 +4019,15 @@
 SELECT attname, most_common_vals FROM pg_stats
   WHERE tablename = 'current_check'
   ORDER BY 1;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
   attname  | most_common_vals  
 -----------+-------------------
  currentid | 
@@ -3923,6 +4046,15 @@
 SELECT attname, most_common_vals FROM pg_stats
   WHERE tablename = 'current_check'
   ORDER BY 1;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  attname | most_common_vals 
 ---------+------------------
 (0 rows)
@@ -4065,6 +4197,7 @@
 (2 rows)
 
 UPDATE r1 SET a = r2.a + 2 FROM r2 WHERE r1.a = r2.a RETURNING *; -- OK
+INFO:  Path param info: 0.000000
  a  | a  
 ----+----
  12 | 10
@@ -4072,6 +4205,7 @@
 (2 rows)
 
 DELETE FROM r1 USING r2 WHERE r1.a = r2.a + 2 RETURNING *; -- OK
+INFO:  Path param info: 0.000000
  a  | a  
 ----+----
  12 | 10
diff -U3 /home/dbs/pg-queryplans/postgres/src/test/regress/expected/object_address.out /home/dbs/pg-queryplans/postgres/src/test/regress/results/object_address.out
--- /home/dbs/pg-queryplans/postgres/src/test/regress/expected/object_address.out	2024-02-20 13:16:25.967611274 +0900
+++ /home/dbs/pg-queryplans/postgres/src/test/regress/results/object_address.out	2024-02-20 16:07:32.496015759 +0900
@@ -455,6 +455,12 @@
      pg_identify_object_as_address(classid, objid, objsubid) AS ioa (typ, nms, args),
      pg_get_object_address(typ, nms, ioa.args) AS addr2
 ORDER BY addr1.classid, addr1.objid, addr1.objsubid;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
 default acl|NULL|NULL|for role regress_addr_user in schema public on tables|t
 default acl|NULL|NULL|for role regress_addr_user on tables|t
 type|pg_catalog|_int4|integer[]|t
diff -U3 /home/dbs/pg-queryplans/postgres/src/test/regress/expected/tablesample.out /home/dbs/pg-queryplans/postgres/src/test/regress/results/tablesample.out
--- /home/dbs/pg-queryplans/postgres/src/test/regress/expected/tablesample.out	2024-02-20 13:16:25.975611131 +0900
+++ /home/dbs/pg-queryplans/postgres/src/test/regress/results/tablesample.out	2024-02-20 16:07:32.488015876 +0900
@@ -69,6 +69,11 @@
 CREATE VIEW test_tablesample_v2 AS
   SELECT id FROM test_tablesample TABLESAMPLE SYSTEM (99);
 \d+ test_tablesample_v1
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                      View "public.test_tablesample_v1"
  Column |  Type   | Collation | Nullable | Default | Storage | Description 
 --------+---------+-----------+----------+---------+---------+-------------
@@ -78,6 +83,11 @@
    FROM test_tablesample TABLESAMPLE system ((10 * 2)) REPEATABLE (2);
 
 \d+ test_tablesample_v2
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                      View "public.test_tablesample_v2"
  Column |  Type   | Collation | Nullable | Default | Storage | Description 
 --------+---------+-----------+----------+---------+---------+-------------
@@ -231,6 +241,7 @@
 select * from
   (values (0),(100)) v(pct),
   lateral (select count(*) from tenk1 tablesample bernoulli (pct)) ss;
+INFO:  Path param info: 0.000000
  pct | count 
 -----+-------
    0 |     0
@@ -240,6 +251,7 @@
 select * from
   (values (0),(100)) v(pct),
   lateral (select count(*) from tenk1 tablesample system (pct)) ss;
+INFO:  Path param info: 0.000000
  pct | count 
 -----+-------
    0 |     0
@@ -251,6 +263,7 @@
   (values (0),(100)) v(pct),
   lateral (select * from tenk1 tablesample bernoulli (pct)) ss
   group by pct;
+INFO:  Path param info: 0.000000
                        QUERY PLAN                       
 --------------------------------------------------------
  HashAggregate
@@ -265,6 +278,7 @@
   (values (0),(100)) v(pct),
   lateral (select * from tenk1 tablesample bernoulli (pct)) ss
   group by pct;
+INFO:  Path param info: 0.000000
  pct | count 
 -----+-------
  100 | 10000
@@ -274,6 +288,7 @@
   (values (0),(100)) v(pct),
   lateral (select * from tenk1 tablesample system (pct)) ss
   group by pct;
+INFO:  Path param info: 0.000000
  pct | count 
 -----+-------
  100 | 10000
diff -U3 /home/dbs/pg-queryplans/postgres/src/test/regress/expected/groupingsets.out /home/dbs/pg-queryplans/postgres/src/test/regress/results/groupingsets.out
--- /home/dbs/pg-queryplans/postgres/src/test/regress/expected/groupingsets.out	2024-02-20 13:16:25.959611416 +0900
+++ /home/dbs/pg-queryplans/postgres/src/test/regress/results/groupingsets.out	2024-02-20 16:07:32.572014649 +0900
@@ -305,6 +305,7 @@
 -- empty input with joins tests some important code paths
 select t1.a, t2.b, sum(t1.v), count(*) from gstest_empty t1, gstest_empty t2
  group by grouping sets ((t1.a,t2.b),());
+INFO:  Path param info: 0.000000
  a | b | sum | count 
 ---+---+-----+-------
    |   |     |     0
@@ -314,6 +315,7 @@
 select t1.a, t2.b, grouping(t1.a, t2.b), sum(t1.v), max(t2.a)
   from gstest1 t1, gstest2 t2
  group by grouping sets ((t1.a, t2.b), ());
+INFO:  Path param info: 0.000000
  a | b | grouping | sum  | max 
 ---+---+----------+------+-----
  1 | 1 |        0 |  420 |   1
@@ -330,6 +332,8 @@
 select t1.a, t2.b, grouping(t1.a, t2.b), sum(t1.v), max(t2.a)
   from gstest1 t1 join gstest2 t2 on (t1.a=t2.a)
  group by grouping sets ((t1.a, t2.b), ());
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  a | b | grouping | sum | max 
 ---+---+----------+-----+-----
  1 | 1 |        0 | 420 |   1
@@ -341,6 +345,8 @@
 select a, b, grouping(a, b), sum(t1.v), max(t2.c)
   from gstest1 t1 join gstest2 t2 using (a,b)
  group by grouping sets ((a, b), ());
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  a | b | grouping | sum | max 
 ---+---+----------+-----+-----
  1 | 1 |        0 | 147 |   2
@@ -534,6 +540,7 @@
 select a, b, sum(v.x)
   from (values (1),(2)) v(x), gstest_data(v.x)
  group by rollup (a,b);
+INFO:  Path param info: 0.000000
  a | b | sum 
 ---+---+-----
  1 | 1 |   1
@@ -717,6 +724,7 @@
 select a, b, sum(v.x)
   from (values (1),(2)) v(x), gstest_data(v.x)
  group by cube (a,b) order by a,b;
+INFO:  Path param info: 0.000000
  a | b | sum 
 ---+---+-----
  1 | 1 |   1
@@ -934,6 +942,7 @@
 
 -- More rescan tests
 select * from (values (1),(2)) v(a) left join lateral (select v.a, four, ten, count(*) from onek group by cube(four,ten)) s on true order by v.a,four,ten;
+INFO:  Path param info: 0.000000
  a | a | four | ten | count 
 ---+---+------+-----+-------
  1 | 1 |    0 |   0 |    50
@@ -1306,6 +1315,7 @@
   from (values (1),(2)) v(x), gstest_data(v.x)
  group by grouping sets (a,b)
  order by 1, 2, 3;
+INFO:  Path param info: 0.000000
  a | b | sum 
 ---+---+-----
  1 |   |   3
@@ -1320,6 +1330,7 @@
     from (values (1),(2)) v(x), gstest_data(v.x)
    group by grouping sets (a,b)
    order by 3, 1, 2;
+INFO:  Path param info: 0.000000
                              QUERY PLAN                              
 ---------------------------------------------------------------------
  Sort
@@ -1422,6 +1433,7 @@
 select a, b, sum(v.x)
   from (values (1),(2)) v(x), gstest_data(v.x)
  group by cube (a,b) order by a,b;
+INFO:  Path param info: 0.000000
  a | b | sum 
 ---+---+-----
  1 | 1 |   1
@@ -1442,6 +1454,7 @@
   select a, b, sum(v.x)
     from (values (1),(2)) v(x), gstest_data(v.x)
    group by cube (a,b) order by a,b;
+INFO:  Path param info: 0.000000
                    QUERY PLAN                   
 ------------------------------------------------
  Sort
@@ -1513,6 +1526,7 @@
 COMMIT;
 -- More rescan tests
 select * from (values (1),(2)) v(a) left join lateral (select v.a, four, ten, count(*) from onek group by cube(four,ten)) s on true order by v.a,four,ten;
+INFO:  Path param info: 0.000000
  a | a | four | ten | count 
 ---+---+------+-----+-------
  1 | 1 |    0 |   0 |    50
@@ -1597,6 +1611,7 @@
 -- Rescan logic changes when there are no empty grouping sets, so test
 -- that too:
 select * from (values (1),(2)) v(a) left join lateral (select v.a, four, ten, count(*) from onek group by grouping sets(four,ten)) s on true order by v.a,four,ten;
+INFO:  Path param info: 0.000000
  a | a | four | ten | count 
 ---+---+------+-----+-------
  1 | 1 |    0 |     |   250
@@ -1743,6 +1758,7 @@
   lateral (select a, i, j, count(*) from
              bug_16784 group by cube(i,j)) s
   order by v.a, i, j;
+INFO:  Path param info: 0.000000
  a | a | i | j  | count 
 ---+---+---+----+-------
  1 | 1 | 0 |  1 |     1
diff -U3 /home/dbs/pg-queryplans/postgres/src/test/regress/expected/drop_operator.out /home/dbs/pg-queryplans/postgres/src/test/regress/results/drop_operator.out
--- /home/dbs/pg-queryplans/postgres/src/test/regress/expected/drop_operator.out	2024-02-20 13:16:25.955611488 +0900
+++ /home/dbs/pg-queryplans/postgres/src/test/regress/results/drop_operator.out	2024-02-20 16:07:32.452016401 +0900
@@ -16,6 +16,7 @@
 FROM    pg_catalog.pg_operator fk
 WHERE   oprcom != 0 AND
         NOT EXISTS(SELECT 1 FROM pg_catalog.pg_operator pk WHERE pk.oid = fk.oprcom);
+INFO:  Path param info: 0.000000
  ctid | oprcom 
 ------+--------
 (0 rows)
@@ -24,6 +25,7 @@
 FROM    pg_catalog.pg_operator fk
 WHERE   oprnegate != 0 AND
         NOT EXISTS(SELECT 1 FROM pg_catalog.pg_operator pk WHERE pk.oid = fk.oprnegate);
+INFO:  Path param info: 0.000000
  ctid | oprnegate 
 ------+-----------
 (0 rows)
@@ -46,6 +48,7 @@
 FROM    pg_catalog.pg_operator fk
 WHERE   oprcom != 0 AND
         NOT EXISTS(SELECT 1 FROM pg_catalog.pg_operator pk WHERE pk.oid = fk.oprcom);
+INFO:  Path param info: 0.000000
  ctid | oprcom 
 ------+--------
 (0 rows)
@@ -54,6 +57,7 @@
 FROM    pg_catalog.pg_operator fk
 WHERE   oprnegate != 0 AND
         NOT EXISTS(SELECT 1 FROM pg_catalog.pg_operator pk WHERE pk.oid = fk.oprnegate);
+INFO:  Path param info: 0.000000
  ctid | oprnegate 
 ------+-----------
 (0 rows)
diff -U3 /home/dbs/pg-queryplans/postgres/src/test/regress/expected/identity.out /home/dbs/pg-queryplans/postgres/src/test/regress/results/identity.out
--- /home/dbs/pg-queryplans/postgres/src/test/regress/expected/identity.out	2024-02-20 13:16:25.959611416 +0900
+++ /home/dbs/pg-queryplans/postgres/src/test/regress/results/identity.out	2024-02-20 16:07:32.552014942 +0900
@@ -10,6 +10,114 @@
 ALTER TABLE itest3 ALTER COLUMN a ADD GENERATED ALWAYS AS IDENTITY;  -- error
 ERROR:  column "a" of relation "itest3" is already an identity column
 SELECT table_name, column_name, column_default, is_nullable, is_identity, identity_generation, identity_start, identity_increment, identity_maximum, identity_minimum, identity_cycle FROM information_schema.columns WHERE table_name LIKE 'itest_' ORDER BY 1, 2;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  table_name | column_name | column_default | is_nullable | is_identity | identity_generation | identity_start | identity_increment |  identity_maximum   | identity_minimum | identity_cycle 
 ------------+-------------+----------------+-------------+-------------+---------------------+----------------+--------------------+---------------------+------------------+----------------
  itest1     | a           |                | NO          | YES         | BY DEFAULT          | 1              | 1                  | 2147483647          | 1                | NO
@@ -22,6 +130,18 @@
 
 -- internal sequences should not be shown here
 SELECT sequence_name FROM information_schema.sequences WHERE sequence_name LIKE 'itest%';
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  sequence_name 
 ---------------
 (0 rows)
@@ -33,6 +153,26 @@
 (1 row)
 
 \d itest1_a_seq
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                     Sequence "public.itest1_a_seq"
   Type   | Start | Minimum |  Maximum   | Increment | Cycles? | Cache 
 ---------+-------+---------+------------+-----------+---------+-------
@@ -357,6 +497,23 @@
 (1 row)
 
 \d itest3
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                            Table "public.itest3"
  Column |  Type   | Collation | Nullable |             Default              
 --------+---------+-----------+----------+----------------------------------
@@ -370,6 +527,23 @@
   ADD COLUMN c int GENERATED BY DEFAULT AS IDENTITY,
   ALTER COLUMN c SET GENERATED ALWAYS;
 \d itest3
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                            Table "public.itest3"
  Column |  Type   | Collation | Nullable |             Default              
 --------+---------+-----------+----------+----------------------------------
@@ -392,6 +566,68 @@
 (3 rows)
 
 SELECT table_name, column_name, is_identity, identity_generation FROM information_schema.columns WHERE table_name = 'itest6' ORDER BY 1, 2;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  table_name | column_name | is_identity | identity_generation 
 ------------+-------------+-------------+---------------------
  itest6     | a           | YES         | BY DEFAULT
@@ -432,6 +668,69 @@
 ALTER TABLE itest7d ADD COLUMN b int GENERATED ALWAYS AS IDENTITY;  -- error
 ERROR:  cannot recursively add identity column to table that has child tables
 SELECT table_name, column_name, is_nullable, is_identity, identity_generation FROM information_schema.columns WHERE table_name LIKE 'itest7%' ORDER BY 1, 2;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  table_name | column_name | is_nullable | is_identity | identity_generation 
 ------------+-------------+-------------+-------------+---------------------
  itest7     | a           | NO          | YES         | ALWAYS
@@ -498,6 +797,25 @@
 (2 rows)
 
 \d+ itest8
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                                Table "public.itest8"
  Column |  Type   | Collation | Nullable |             Default              | Storage | Stats target | Description 
 --------+---------+-----------+----------+----------------------------------+---------+--------------+-------------
@@ -508,6 +826,26 @@
  f5     | bigint  |           |          |                                  | plain   |              | 
 
 \d itest8_f2_seq
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                    Sequence "public.itest8_f2_seq"
   Type   | Start | Minimum |  Maximum   | Increment | Cycles? | Cache 
 ---------+-------+---------+------------+-----------+---------+-------
@@ -515,6 +853,26 @@
 Sequence for identity column: public.itest8.f2
 
 \d itest8_f3_seq
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                    Sequence "public.itest8_f3_seq"
   Type   | Start | Minimum |  Maximum   | Increment | Cycles? | Cache 
 ---------+-------+---------+------------+-----------+---------+-------
@@ -522,6 +880,26 @@
 Sequence for identity column: public.itest8.f3
 
 \d itest8_f4_seq
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                        Sequence "public.itest8_f4_seq"
   Type  | Start | Minimum |       Maximum       | Increment | Cycles? | Cache 
 --------+-------+---------+---------------------+-----------+---------+-------
@@ -529,6 +907,7 @@
 Sequence for identity column: public.itest8.f4
 
 \d itest8_f5_seq
+INFO:  Path param info: 0.000000
 DROP TABLE itest8;
 -- typed tables (currently not supported)
 CREATE TYPE itest_type AS (f1 integer, f2 text, f3 bigint);
@@ -577,26 +956,31 @@
 ON t.a = s.s_a
 WHEN NOT MATCHED THEN
 	INSERT (a, b) OVERRIDING USER VALUE VALUES (s.s_a, s.s_b);
+INFO:  Path param info: 0.000000
 MERGE INTO itest15 t
 USING (SELECT 30 AS s_a, 'inserted by merge' AS s_b) s
 ON t.a = s.s_a
 WHEN NOT MATCHED THEN
 	INSERT (a, b) OVERRIDING SYSTEM VALUE VALUES (s.s_a, s.s_b);
+INFO:  Path param info: 0.000000
 MERGE INTO itest16 t
 USING (SELECT 10 AS s_a, 'inserted by merge' AS s_b) s
 ON t.a = s.s_a
 WHEN NOT MATCHED THEN
 	INSERT (a, b) VALUES (s.s_a, s.s_b);
+INFO:  Path param info: 0.000000
 MERGE INTO itest16 t
 USING (SELECT 20 AS s_a, 'inserted by merge' AS s_b) s
 ON t.a = s.s_a
 WHEN NOT MATCHED THEN
 	INSERT (a, b) OVERRIDING USER VALUE VALUES (s.s_a, s.s_b);
+INFO:  Path param info: 0.000000
 MERGE INTO itest16 t
 USING (SELECT 30 AS s_a, 'inserted by merge' AS s_b) s
 ON t.a = s.s_a
 WHEN NOT MATCHED THEN
 	INSERT (a, b) OVERRIDING SYSTEM VALUE VALUES (s.s_a, s.s_b);
+INFO:  Path param info: 0.000000
 SELECT * FROM itest15;
  a  |         b         
 ----+-------------------
diff -U3 /home/dbs/pg-queryplans/postgres/src/test/regress/expected/generated.out /home/dbs/pg-queryplans/postgres/src/test/regress/results/generated.out
--- /home/dbs/pg-queryplans/postgres/src/test/regress/expected/generated.out	2024-02-20 13:16:25.959611416 +0900
+++ /home/dbs/pg-queryplans/postgres/src/test/regress/results/generated.out	2024-02-20 16:07:32.628013832 +0900
@@ -7,6 +7,114 @@
 CREATE TABLE gtest0 (a int PRIMARY KEY, b int GENERATED ALWAYS AS (55) STORED);
 CREATE TABLE gtest1 (a int PRIMARY KEY, b int GENERATED ALWAYS AS (a * 2) STORED);
 SELECT table_name, column_name, column_default, is_nullable, is_generated, generation_expression FROM information_schema.columns WHERE table_name LIKE 'gtest_' ORDER BY 1, 2;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  table_name | column_name | column_default | is_nullable | is_generated | generation_expression 
 ------------+-------------+----------------+-------------+--------------+-----------------------
  gtest0     | a           |                | NO          | NEVER        | 
@@ -16,12 +124,192 @@
 (4 rows)
 
 SELECT table_name, column_name, dependent_column FROM information_schema.column_column_usage ORDER BY 1, 2, 3;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  table_name | column_name | dependent_column 
 ------------+-------------+------------------
  gtest1     | a           | b
 (1 row)
 
 \d gtest1
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                             Table "public.gtest1"
  Column |  Type   | Collation | Nullable |              Default               
 --------+---------+-----------+----------+------------------------------------
@@ -165,6 +453,7 @@
 CREATE TABLE gtestx (x int, y int);
 INSERT INTO gtestx VALUES (11, 1), (22, 2), (33, 3);
 SELECT * FROM gtestx, gtest1 WHERE gtestx.y = gtest1.a;
+INFO:  Path param info: 0.000000
  x  | y | a | b 
 ----+---+---+---
  11 | 1 | 1 | 2
@@ -207,6 +496,7 @@
 MERGE INTO gtestm t USING (VALUES (1, 10), (2, 20)) v(id, f1) ON t.id = v.id
   WHEN MATCHED THEN UPDATE SET f1 = v.f1
   WHEN NOT MATCHED THEN INSERT VALUES (v.id, v.f1, 200);
+INFO:  Path param info: 0.000000
 SELECT * FROM gtestm ORDER BY id;
  id | f1 | f2  | f3 | f4  
 ----+----+-----+----+-----
@@ -270,6 +560,23 @@
 (0 rows)
 
 \d gtest1_1
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                            Table "public.gtest1_1"
  Column |  Type   | Collation | Nullable |              Default               
 --------+---------+-----------+----------+------------------------------------
@@ -312,6 +619,25 @@
 CREATE TABLE gtestx (x int, b int GENERATED ALWAYS AS (a * 22) STORED) INHERITS (gtest1);  -- ok, overrides parent
 NOTICE:  merging column "b" with inherited definition
 \d+ gtestx
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                                 Table "public.gtestx"
  Column |  Type   | Collation | Nullable |               Default               | Storage | Stats target | Description 
 --------+---------+-----------+----------+-------------------------------------+---------+--------------+-------------
@@ -348,6 +674,23 @@
 NOTICE:  moving and merging column "b" with inherited definition
 DETAIL:  User-specified column moved to the position of the inherited column.
 \d gtest1_y
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                            Table "public.gtest1_y"
  Column |  Type   | Collation | Nullable |              Default               
 --------+---------+-----------+----------+------------------------------------
@@ -523,6 +866,35 @@
 ALTER TABLE gtest10 DROP COLUMN b CASCADE;  -- drops c too
 NOTICE:  drop cascades to column c of table gtest10
 \d gtest10
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
               Table "public.gtest10"
  Column |  Type   | Collation | Nullable | Default 
 --------+---------+-----------+----------+---------
@@ -619,6 +991,35 @@
 CREATE INDEX gtest22c_expr_idx ON gtest22c ((b * 3));
 CREATE INDEX gtest22c_pred_idx ON gtest22c (a) WHERE b > 0;
 \d gtest22c
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                            Table "public.gtest22c"
  Column |  Type   | Collation | Nullable |              Default               
 --------+---------+-----------+----------+------------------------------------
@@ -682,6 +1083,39 @@
 ERROR:  invalid ON DELETE action for foreign key constraint containing generated column
 CREATE TABLE gtest23b (a int PRIMARY KEY, b int GENERATED ALWAYS AS (a * 2) STORED REFERENCES gtest23a (x));
 \d gtest23b
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                            Table "public.gtest23b"
  Column |  Type   | Collation | Nullable |              Default               
 --------+---------+-----------+----------+------------------------------------
@@ -756,6 +1190,24 @@
 CREATE TABLE gtest_child3 (f1 date NOT NULL, f2 bigint, f3 bigint GENERATED ALWAYS AS (f2 * 33) STORED);
 ALTER TABLE gtest_parent ATTACH PARTITION gtest_child3 FOR VALUES FROM ('2016-09-01') TO ('2016-10-01');
 \d gtest_child
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                           Table "public.gtest_child"
  Column |  Type  | Collation | Nullable |               Default               
 --------+--------+-----------+----------+-------------------------------------
@@ -765,6 +1217,24 @@
 Partition of: gtest_parent FOR VALUES FROM ('07-01-2016') TO ('08-01-2016')
 
 \d gtest_child2
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                           Table "public.gtest_child2"
  Column |  Type  | Collation | Nullable |               Default                
 --------+--------+-----------+----------+--------------------------------------
@@ -774,6 +1244,24 @@
 Partition of: gtest_parent FOR VALUES FROM ('08-01-2016') TO ('09-01-2016')
 
 \d gtest_child3
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                           Table "public.gtest_child3"
  Column |  Type  | Collation | Nullable |               Default                
 --------+--------+-----------+----------+--------------------------------------
@@ -849,6 +1337,35 @@
 (2 rows)
 
 \d gtest25
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                          Table "public.gtest25"
  Column |       Type       | Collation | Nullable |                       Default                        
 --------+------------------+-----------+----------+------------------------------------------------------
@@ -873,6 +1390,23 @@
 DETAIL:  Column "a" is used by generated column "x".
 ALTER TABLE gtest27 ALTER COLUMN x TYPE numeric;
 \d gtest27
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                 Table "public.gtest27"
  Column |  Type   | Collation | Nullable |                  Default                   
 --------+---------+-----------+----------+--------------------------------------------
@@ -899,6 +1433,23 @@
   ALTER COLUMN b TYPE bigint,
   ADD COLUMN x bigint GENERATED ALWAYS AS ((a + b) * 2) STORED;
 \d gtest27
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                               Table "public.gtest27"
  Column |  Type  | Collation | Nullable |                 Default                  
 --------+--------+-----------+----------+------------------------------------------
@@ -913,6 +1464,23 @@
 ERROR:  cannot alter type of a column used by a generated column
 DETAIL:  Column "a" is used by generated column "x".
 \d gtest27
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                               Table "public.gtest27"
  Column |  Type  | Collation | Nullable |                 Default                  
 --------+--------+-----------+----------+------------------------------------------
@@ -950,6 +1518,23 @@
 (4 rows)
 
 \d gtest29
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
               Table "public.gtest29"
  Column |  Type   | Collation | Nullable | Default 
 --------+---------+-----------+----------+---------
@@ -959,6 +1544,23 @@
 -- check that dependencies between columns have also been removed
 ALTER TABLE gtest29 DROP COLUMN a;  -- should not drop b
 \d gtest29
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
               Table "public.gtest29"
  Column |  Type   | Collation | Nullable | Default 
 --------+---------+-----------+----------+---------
@@ -972,6 +1574,23 @@
 CREATE TABLE gtest30_1 () INHERITS (gtest30);
 ALTER TABLE gtest30 ALTER COLUMN b DROP EXPRESSION;
 \d gtest30
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
               Table "public.gtest30"
  Column |  Type   | Collation | Nullable | Default 
 --------+---------+-----------+----------+---------
@@ -980,6 +1599,23 @@
 Number of child tables: 1 (Use \d+ to list them.)
 
 \d gtest30_1
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
              Table "public.gtest30_1"
  Column |  Type   | Collation | Nullable | Default 
 --------+---------+-----------+----------+---------
@@ -997,6 +1633,23 @@
 ALTER TABLE ONLY gtest30 ALTER COLUMN b DROP EXPRESSION;  -- error
 ERROR:  ALTER TABLE / DROP EXPRESSION must be applied to child tables too
 \d gtest30
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                             Table "public.gtest30"
  Column |  Type   | Collation | Nullable |              Default               
 --------+---------+-----------+----------+------------------------------------
@@ -1005,6 +1658,23 @@
 Number of child tables: 1 (Use \d+ to list them.)
 
 \d gtest30_1
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                            Table "public.gtest30_1"
  Column |  Type   | Collation | Nullable |              Default               
 --------+---------+-----------+----------+------------------------------------
@@ -1166,6 +1836,23 @@
 ALTER TABLE gtest28a DROP COLUMN a;
 CREATE TABLE gtest28b (LIKE gtest28a INCLUDING GENERATED);
 \d gtest28*
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                            Table "public.gtest28a"
  Column |  Type   | Collation | Nullable |              Default               
 --------+---------+-----------+----------+------------------------------------
@@ -1173,6 +1860,22 @@
  c      | integer |           |          | 
  x      | integer |           |          | generated always as (b * 2) stored
 
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                            Table "public.gtest28b"
  Column |  Type   | Collation | Nullable |              Default               
 --------+---------+-----------+----------+------------------------------------
diff -U3 /home/dbs/pg-queryplans/postgres/src/test/regress/expected/join_hash.out /home/dbs/pg-queryplans/postgres/src/test/regress/results/join_hash.out
--- /home/dbs/pg-queryplans/postgres/src/test/regress/expected/join_hash.out	2024-02-20 13:16:25.963611345 +0900
+++ /home/dbs/pg-queryplans/postgres/src/test/regress/results/join_hash.out	2024-02-20 16:07:32.932009394 +0900
@@ -89,6 +89,7 @@
 set local hash_mem_multiplier = 1.0;
 explain (costs off)
   select count(*) from simple r join simple s using (id);
+INFO:  Path param info: 0.000000
                QUERY PLAN               
 ----------------------------------------
  Aggregate
@@ -100,6 +101,7 @@
 (6 rows)
 
 select count(*) from simple r join simple s using (id);
+INFO:  Path param info: 0.000000
  count 
 -------
  20000
@@ -110,6 +112,7 @@
 $$
   select count(*) from simple r join simple s using (id);
 $$);
+INFO:  Path param info: 0.000000
  initially_multibatch | increased_batches 
 ----------------------+-------------------
  f                    | f
@@ -124,6 +127,7 @@
 set local enable_parallel_hash = off;
 explain (costs off)
   select count(*) from simple r join simple s using (id);
+INFO:  Path param info: 0.000000
                       QUERY PLAN                       
 -------------------------------------------------------
  Finalize Aggregate
@@ -138,6 +142,7 @@
 (9 rows)
 
 select count(*) from simple r join simple s using (id);
+INFO:  Path param info: 0.000000
  count 
 -------
  20000
@@ -148,6 +153,7 @@
 $$
   select count(*) from simple r join simple s using (id);
 $$);
+INFO:  Path param info: 0.000000
  initially_multibatch | increased_batches 
 ----------------------+-------------------
  f                    | f
@@ -162,6 +168,7 @@
 set local enable_parallel_hash = on;
 explain (costs off)
   select count(*) from simple r join simple s using (id);
+INFO:  Path param info: 0.000000
                          QUERY PLAN                          
 -------------------------------------------------------------
  Finalize Aggregate
@@ -176,6 +183,7 @@
 (9 rows)
 
 select count(*) from simple r join simple s using (id);
+INFO:  Path param info: 0.000000
  count 
 -------
  20000
@@ -186,6 +194,7 @@
 $$
   select count(*) from simple r join simple s using (id);
 $$);
+INFO:  Path param info: 0.000000
  initially_multibatch | increased_batches 
 ----------------------+-------------------
  f                    | f
@@ -202,6 +211,7 @@
 set local hash_mem_multiplier = 1.0;
 explain (costs off)
   select count(*) from simple r join simple s using (id);
+INFO:  Path param info: 0.000000
                QUERY PLAN               
 ----------------------------------------
  Aggregate
@@ -213,6 +223,7 @@
 (6 rows)
 
 select count(*) from simple r join simple s using (id);
+INFO:  Path param info: 0.000000
  count 
 -------
  20000
@@ -223,6 +234,7 @@
 $$
   select count(*) from simple r join simple s using (id);
 $$);
+INFO:  Path param info: 0.000000
  initially_multibatch | increased_batches 
 ----------------------+-------------------
  t                    | f
@@ -237,6 +249,7 @@
 set local enable_parallel_hash = off;
 explain (costs off)
   select count(*) from simple r join simple s using (id);
+INFO:  Path param info: 0.000000
                       QUERY PLAN                       
 -------------------------------------------------------
  Finalize Aggregate
@@ -251,6 +264,7 @@
 (9 rows)
 
 select count(*) from simple r join simple s using (id);
+INFO:  Path param info: 0.000000
  count 
 -------
  20000
@@ -261,6 +275,7 @@
 $$
   select count(*) from simple r join simple s using (id);
 $$);
+INFO:  Path param info: 0.000000
  initially_multibatch | increased_batches 
 ----------------------+-------------------
  t                    | f
@@ -275,6 +290,7 @@
 set local enable_parallel_hash = on;
 explain (costs off)
   select count(*) from simple r join simple s using (id);
+INFO:  Path param info: 0.000000
                          QUERY PLAN                          
 -------------------------------------------------------------
  Finalize Aggregate
@@ -289,6 +305,7 @@
 (9 rows)
 
 select count(*) from simple r join simple s using (id);
+INFO:  Path param info: 0.000000
  count 
 -------
  20000
@@ -299,6 +316,7 @@
 $$
   select count(*) from simple r join simple s using (id);
 $$);
+INFO:  Path param info: 0.000000
  initially_multibatch | increased_batches 
 ----------------------+-------------------
  t                    | f
@@ -306,6 +324,7 @@
 
 -- parallel full multi-batch hash join
 select count(*) from simple r full outer join simple s using (id);
+INFO:  Path param info: 0.000000
  count 
 -------
  20000
@@ -323,6 +342,7 @@
 set local hash_mem_multiplier = 1.0;
 explain (costs off)
   select count(*) FROM simple r JOIN bigger_than_it_looks s USING (id);
+INFO:  Path param info: 0.000000
                       QUERY PLAN                      
 ------------------------------------------------------
  Aggregate
@@ -334,6 +354,7 @@
 (6 rows)
 
 select count(*) FROM simple r JOIN bigger_than_it_looks s USING (id);
+INFO:  Path param info: 0.000000
  count 
 -------
  20000
@@ -344,6 +365,7 @@
 $$
   select count(*) FROM simple r JOIN bigger_than_it_looks s USING (id);
 $$);
+INFO:  Path param info: 0.000000
  initially_multibatch | increased_batches 
 ----------------------+-------------------
  f                    | t
@@ -358,6 +380,7 @@
 set local enable_parallel_hash = off;
 explain (costs off)
   select count(*) from simple r join bigger_than_it_looks s using (id);
+INFO:  Path param info: 0.000000
                             QUERY PLAN                            
 ------------------------------------------------------------------
  Finalize Aggregate
@@ -372,6 +395,7 @@
 (9 rows)
 
 select count(*) from simple r join bigger_than_it_looks s using (id);
+INFO:  Path param info: 0.000000
  count 
 -------
  20000
@@ -382,6 +406,7 @@
 $$
   select count(*) from simple r join bigger_than_it_looks s using (id);
 $$);
+INFO:  Path param info: 0.000000
  initially_multibatch | increased_batches 
 ----------------------+-------------------
  f                    | t
@@ -396,6 +421,7 @@
 set local enable_parallel_hash = on;
 explain (costs off)
   select count(*) from simple r join bigger_than_it_looks s using (id);
+INFO:  Path param info: 0.000000
                                 QUERY PLAN                                 
 ---------------------------------------------------------------------------
  Finalize Aggregate
@@ -410,6 +436,7 @@
 (9 rows)
 
 select count(*) from simple r join bigger_than_it_looks s using (id);
+INFO:  Path param info: 0.000000
  count 
 -------
  20000
@@ -420,6 +447,7 @@
 $$
   select count(*) from simple r join bigger_than_it_looks s using (id);
 $$);
+INFO:  Path param info: 0.000000
  initially_multibatch | increased_batches 
 ----------------------+-------------------
  f                    | t
@@ -438,6 +466,7 @@
 set local hash_mem_multiplier = 1.0;
 explain (costs off)
   select count(*) from simple r join extremely_skewed s using (id);
+INFO:  Path param info: 0.000000
                     QUERY PLAN                    
 --------------------------------------------------
  Aggregate
@@ -449,6 +478,7 @@
 (6 rows)
 
 select count(*) from simple r join extremely_skewed s using (id);
+INFO:  Path param info: 0.000000
  count 
 -------
  20000
@@ -458,6 +488,7 @@
 $$
   select count(*) from simple r join extremely_skewed s using (id);
 $$);
+INFO:  Path param info: 0.000000
  original | final 
 ----------+-------
         1 |     2
@@ -472,6 +503,7 @@
 set local enable_parallel_hash = off;
 explain (costs off)
   select count(*) from simple r join extremely_skewed s using (id);
+INFO:  Path param info: 0.000000
                        QUERY PLAN                       
 --------------------------------------------------------
  Aggregate
@@ -485,6 +517,7 @@
 (8 rows)
 
 select count(*) from simple r join extremely_skewed s using (id);
+INFO:  Path param info: 0.000000
  count 
 -------
  20000
@@ -494,6 +527,7 @@
 $$
   select count(*) from simple r join extremely_skewed s using (id);
 $$);
+INFO:  Path param info: 0.000000
  original | final 
 ----------+-------
         1 |     2
@@ -508,6 +542,7 @@
 set local enable_parallel_hash = on;
 explain (costs off)
   select count(*) from simple r join extremely_skewed s using (id);
+INFO:  Path param info: 0.000000
                               QUERY PLAN                               
 -----------------------------------------------------------------------
  Finalize Aggregate
@@ -522,6 +557,7 @@
 (9 rows)
 
 select count(*) from simple r join extremely_skewed s using (id);
+INFO:  Path param info: 0.000000
  count 
 -------
  20000
@@ -531,6 +567,7 @@
 $$
   select count(*) from simple r join extremely_skewed s using (id);
 $$);
+INFO:  Path param info: 0.000000
  original | final 
 ----------+-------
         1 |     4
@@ -548,6 +585,7 @@
 $$
   select count(*) from simple r join simple s using (id);
 $$);
+INFO:  Path param info: 0.000000
  original | final 
 ----------+-------
         1 |     1
@@ -576,6 +614,8 @@
   select count(*) from join_foo
     left join (select b1.id, b1.t from join_bar b1 join join_bar b2 using (id)) ss
     on join_foo.id < ss.id + 1 and join_foo.id > ss.id - 1;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                      QUERY PLAN                                     
 ------------------------------------------------------------------------------------
  Aggregate
@@ -594,6 +634,8 @@
 select count(*) from join_foo
   left join (select b1.id, b1.t from join_bar b1 join join_bar b2 using (id)) ss
   on join_foo.id < ss.id + 1 and join_foo.id > ss.id - 1;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  count 
 -------
      3
@@ -606,6 +648,8 @@
     left join (select b1.id, b1.t from join_bar b1 join join_bar b2 using (id)) ss
     on join_foo.id < ss.id + 1 and join_foo.id > ss.id - 1;
 $$);
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  multibatch 
 ------------
  t
@@ -628,6 +672,8 @@
   select count(*) from join_foo
     left join (select b1.id, b1.t from join_bar b1 join join_bar b2 using (id)) ss
     on join_foo.id < ss.id + 1 and join_foo.id > ss.id - 1;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                      QUERY PLAN                                     
 ------------------------------------------------------------------------------------
  Aggregate
@@ -646,6 +692,8 @@
 select count(*) from join_foo
   left join (select b1.id, b1.t from join_bar b1 join join_bar b2 using (id)) ss
   on join_foo.id < ss.id + 1 and join_foo.id > ss.id - 1;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  count 
 -------
      3
@@ -658,6 +706,8 @@
     left join (select b1.id, b1.t from join_bar b1 join join_bar b2 using (id)) ss
     on join_foo.id < ss.id + 1 and join_foo.id > ss.id - 1;
 $$);
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  multibatch 
 ------------
  f
@@ -680,6 +730,8 @@
   select count(*) from join_foo
     left join (select b1.id, b1.t from join_bar b1 join join_bar b2 using (id)) ss
     on join_foo.id < ss.id + 1 and join_foo.id > ss.id - 1;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                      QUERY PLAN                                     
 ------------------------------------------------------------------------------------
  Aggregate
@@ -698,6 +750,8 @@
 select count(*) from join_foo
   left join (select b1.id, b1.t from join_bar b1 join join_bar b2 using (id)) ss
   on join_foo.id < ss.id + 1 and join_foo.id > ss.id - 1;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  count 
 -------
      3
@@ -710,6 +764,8 @@
     left join (select b1.id, b1.t from join_bar b1 join join_bar b2 using (id)) ss
     on join_foo.id < ss.id + 1 and join_foo.id > ss.id - 1;
 $$);
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  multibatch 
 ------------
  t
@@ -732,6 +788,8 @@
   select count(*) from join_foo
     left join (select b1.id, b1.t from join_bar b1 join join_bar b2 using (id)) ss
     on join_foo.id < ss.id + 1 and join_foo.id > ss.id - 1;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                      QUERY PLAN                                     
 ------------------------------------------------------------------------------------
  Aggregate
@@ -750,6 +808,8 @@
 select count(*) from join_foo
   left join (select b1.id, b1.t from join_bar b1 join join_bar b2 using (id)) ss
   on join_foo.id < ss.id + 1 and join_foo.id > ss.id - 1;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  count 
 -------
      3
@@ -762,6 +822,8 @@
     left join (select b1.id, b1.t from join_bar b1 join join_bar b2 using (id)) ss
     on join_foo.id < ss.id + 1 and join_foo.id > ss.id - 1;
 $$);
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  multibatch 
 ------------
  f
@@ -774,6 +836,7 @@
 set local max_parallel_workers_per_gather = 0;
 explain (costs off)
      select  count(*) from simple r full outer join simple s using (id);
+INFO:  Path param info: 0.000000
                QUERY PLAN               
 ----------------------------------------
  Aggregate
@@ -785,6 +848,7 @@
 (6 rows)
 
 select  count(*) from simple r full outer join simple s using (id);
+INFO:  Path param info: 0.000000
  count 
 -------
  20000
@@ -797,6 +861,7 @@
 set local max_parallel_workers_per_gather = 2;
 explain (costs off)
      select  count(*) from simple r full outer join simple s using (id);
+INFO:  Path param info: 0.000000
                QUERY PLAN               
 ----------------------------------------
  Aggregate
@@ -808,6 +873,7 @@
 (6 rows)
 
 select  count(*) from simple r full outer join simple s using (id);
+INFO:  Path param info: 0.000000
  count 
 -------
  20000
@@ -819,6 +885,7 @@
 set local max_parallel_workers_per_gather = 2;
 explain (costs off)
      select  count(*) from simple r full outer join simple s using (id);
+INFO:  Path param info: 0.000000
                          QUERY PLAN                          
 -------------------------------------------------------------
  Finalize Aggregate
@@ -833,6 +900,7 @@
 (9 rows)
 
 select  count(*) from simple r full outer join simple s using (id);
+INFO:  Path param info: 0.000000
  count 
 -------
  20000
@@ -845,6 +913,7 @@
 set local max_parallel_workers_per_gather = 0;
 explain (costs off)
      select  count(*) from simple r full outer join simple s on (r.id = 0 - s.id);
+INFO:  Path param info: 0.000000
                QUERY PLAN               
 ----------------------------------------
  Aggregate
@@ -856,6 +925,7 @@
 (6 rows)
 
 select  count(*) from simple r full outer join simple s on (r.id = 0 - s.id);
+INFO:  Path param info: 0.000000
  count 
 -------
  40000
@@ -868,6 +938,7 @@
 set local max_parallel_workers_per_gather = 2;
 explain (costs off)
      select  count(*) from simple r full outer join simple s on (r.id = 0 - s.id);
+INFO:  Path param info: 0.000000
                QUERY PLAN               
 ----------------------------------------
  Aggregate
@@ -879,6 +950,7 @@
 (6 rows)
 
 select  count(*) from simple r full outer join simple s on (r.id = 0 - s.id);
+INFO:  Path param info: 0.000000
  count 
 -------
  40000
@@ -890,6 +962,7 @@
 set local max_parallel_workers_per_gather = 2;
 explain (costs off)
      select  count(*) from simple r full outer join simple s on (r.id = 0 - s.id);
+INFO:  Path param info: 0.000000
                          QUERY PLAN                          
 -------------------------------------------------------------
  Finalize Aggregate
@@ -904,6 +977,7 @@
 (9 rows)
 
 select  count(*) from simple r full outer join simple s on (r.id = 0 - s.id);
+INFO:  Path param info: 0.000000
  count 
 -------
  40000
@@ -923,6 +997,7 @@
 explain (costs off)
   select length(max(s.t))
   from wide left join (select id, coalesce(t, '') || '' as t from wide) s using (id);
+INFO:  Path param info: 1058.000000
                            QUERY PLAN                           
 ----------------------------------------------------------------
  Finalize Aggregate
@@ -938,6 +1013,7 @@
 
 select length(max(s.t))
 from wide left join (select id, coalesce(t, '') || '' as t from wide) s using (id);
+INFO:  Path param info: 1058.000000
  length 
 --------
  320000
@@ -949,6 +1025,7 @@
   select length(max(s.t))
   from wide left join (select id, coalesce(t, '') || '' as t from wide) s using (id);
 $$);
+INFO:  Path param info: 1058.000000
  multibatch 
 ------------
  t
@@ -973,6 +1050,7 @@
 UPDATE hjtest_matchbits_t2 set id = 2;
 SELECT * FROM hjtest_matchbits_t1 t1 FULL JOIN hjtest_matchbits_t2 t2 ON t1.id = t2.id
   ORDER BY t1.id;
+INFO:  Path param info: 0.000000
  id | id 
 ----+----
   1 |   
@@ -986,6 +1064,7 @@
 RESET parallel_setup_cost;
 SET enable_parallel_hash = off;
 SELECT * FROM hjtest_matchbits_t1 t1 FULL JOIN hjtest_matchbits_t2 t2 ON t1.id = t2.id;
+INFO:  Path param info: 0.000000
  id | id 
 ----+----
   1 |   
@@ -1028,6 +1107,7 @@
     AND (SELECT hjtest_1.b * 5) < 50
     AND (SELECT hjtest_2.c * 5) < 55
     AND hjtest_1.a <> hjtest_2.b;
+INFO:  Path param info: 0.000000
                                            QUERY PLAN                                           
 ------------------------------------------------------------------------------------------------
  Hash Join
@@ -1068,6 +1148,7 @@
     AND (SELECT hjtest_1.b * 5) < 50
     AND (SELECT hjtest_2.c * 5) < 55
     AND hjtest_1.a <> hjtest_2.b;
+INFO:  Path param info: 0.000000
   a1  | a2 |    t1    |    t2    
 ------+----+----------+----------
  text | t  | hjtest_1 | hjtest_2
@@ -1082,6 +1163,7 @@
     AND (SELECT hjtest_1.b * 5) < 50
     AND (SELECT hjtest_2.c * 5) < 55
     AND hjtest_1.a <> hjtest_2.b;
+INFO:  Path param info: 0.000000
                                            QUERY PLAN                                           
 ------------------------------------------------------------------------------------------------
  Hash Join
@@ -1122,6 +1204,7 @@
     AND (SELECT hjtest_1.b * 5) < 50
     AND (SELECT hjtest_2.c * 5) < 55
     AND hjtest_1.a <> hjtest_2.b;
+INFO:  Path param info: 0.000000
   a1  | a2 |    t1    |    t2    
 ------+----+----------+----------
  text | t  | hjtest_1 | hjtest_2
@@ -1138,6 +1221,9 @@
 int8_tbl i8,
 lateral (select t1.fivethous, i4.f1 from tenk1 t1 join int4_tbl i4
          on t1.fivethous = i4.f1+i8.q2 order by 1,2) ss;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                         QUERY PLAN                         
 -----------------------------------------------------------
  Nested Loop
@@ -1155,6 +1241,9 @@
 int8_tbl i8,
 lateral (select t1.fivethous, i4.f1 from tenk1 t1 join int4_tbl i4
          on t1.fivethous = i4.f1+i8.q2 order by 1,2) ss;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  q2  | fivethous | f1 
 -----+-----------+----
  456 |       456 |  0
diff -U3 /home/dbs/pg-queryplans/postgres/src/test/regress/expected/brin_bloom.out /home/dbs/pg-queryplans/postgres/src/test/regress/results/brin_bloom.out
--- /home/dbs/pg-queryplans/postgres/src/test/regress/expected/brin_bloom.out	2024-02-20 13:16:25.955611488 +0900
+++ /home/dbs/pg-queryplans/postgres/src/test/regress/results/brin_bloom.out	2024-02-20 16:07:33.072007350 +0900
@@ -287,6 +287,7 @@
 	END LOOP;
 END;
 $x$;
+INFO:  Path param info: 0.000000
 RESET enable_seqscan;
 RESET enable_bitmapscan;
 INSERT INTO brintest_bloom SELECT
diff -U3 /home/dbs/pg-queryplans/postgres/src/test/regress/expected/brin_multi.out /home/dbs/pg-queryplans/postgres/src/test/regress/results/brin_multi.out
--- /home/dbs/pg-queryplans/postgres/src/test/regress/expected/brin_multi.out	2024-02-20 13:16:25.955611488 +0900
+++ /home/dbs/pg-queryplans/postgres/src/test/regress/results/brin_multi.out	2024-02-20 16:07:33.128006532 +0900
@@ -316,6 +316,7 @@
 	END LOOP;
 END;
 $x$;
+INFO:  Path param info: 0.000000
 RESET enable_seqscan;
 RESET enable_bitmapscan;
 INSERT INTO brintest_multi SELECT
diff -U3 /home/dbs/pg-queryplans/postgres/src/test/regress/expected/create_table_like.out /home/dbs/pg-queryplans/postgres/src/test/regress/results/create_table_like.out
--- /home/dbs/pg-queryplans/postgres/src/test/regress/expected/create_table_like.out	2024-02-20 13:16:25.955611488 +0900
+++ /home/dbs/pg-queryplans/postgres/src/test/regress/results/create_table_like.out	2024-02-20 16:07:33.224005130 +0900
@@ -68,6 +68,23 @@
 DROP TABLE inhg;
 CREATE TABLE test_like_id_1 (a bigint GENERATED ALWAYS AS IDENTITY, b text);
 \d test_like_id_1
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                      Table "public.test_like_id_1"
  Column |  Type  | Collation | Nullable |           Default            
 --------+--------+-----------+----------+------------------------------
@@ -83,6 +100,23 @@
 
 CREATE TABLE test_like_id_2 (LIKE test_like_id_1);
 \d test_like_id_2
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
           Table "public.test_like_id_2"
  Column |  Type  | Collation | Nullable | Default 
 --------+--------+-----------+----------+---------
@@ -99,6 +133,23 @@
 
 CREATE TABLE test_like_id_3 (LIKE test_like_id_1 INCLUDING IDENTITY);
 \d test_like_id_3
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                      Table "public.test_like_id_3"
  Column |  Type  | Collation | Nullable |           Default            
 --------+--------+-----------+----------+------------------------------
@@ -115,6 +166,23 @@
 DROP TABLE test_like_id_1, test_like_id_2, test_like_id_3;
 CREATE TABLE test_like_gen_1 (a int, b int GENERATED ALWAYS AS (a * 2) STORED);
 \d test_like_gen_1
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                         Table "public.test_like_gen_1"
  Column |  Type   | Collation | Nullable |              Default               
 --------+---------+-----------+----------+------------------------------------
@@ -130,6 +198,23 @@
 
 CREATE TABLE test_like_gen_2 (LIKE test_like_gen_1);
 \d test_like_gen_2
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
           Table "public.test_like_gen_2"
  Column |  Type   | Collation | Nullable | Default 
 --------+---------+-----------+----------+---------
@@ -145,6 +230,23 @@
 
 CREATE TABLE test_like_gen_3 (LIKE test_like_gen_1 INCLUDING GENERATED);
 \d test_like_gen_3
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                         Table "public.test_like_gen_3"
  Column |  Type   | Collation | Nullable |              Default               
 --------+---------+-----------+----------+------------------------------------
@@ -164,6 +266,23 @@
   c int GENERATED ALWAYS AS (a * 2) STORED,
   a int CHECK (a > 0));
 \d test_like_4
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                           Table "public.test_like_4"
  Column |  Type   | Collation | Nullable |              Default               
 --------+---------+-----------+----------+------------------------------------
@@ -178,6 +297,23 @@
 CREATE TABLE test_like_4c (LIKE test_like_4 INCLUDING GENERATED);
 CREATE TABLE test_like_4d (LIKE test_like_4 INCLUDING DEFAULTS INCLUDING GENERATED);
 \d test_like_4a
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
             Table "public.test_like_4a"
  Column |  Type   | Collation | Nullable | Default 
 --------+---------+-----------+----------+---------
@@ -193,6 +329,23 @@
 (1 row)
 
 \d test_like_4b
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
             Table "public.test_like_4b"
  Column |  Type   | Collation | Nullable | Default 
 --------+---------+-----------+----------+---------
@@ -208,6 +361,23 @@
 (1 row)
 
 \d test_like_4c
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                          Table "public.test_like_4c"
  Column |  Type   | Collation | Nullable |              Default               
 --------+---------+-----------+----------+------------------------------------
@@ -223,6 +393,23 @@
 (1 row)
 
 \d test_like_4d
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                          Table "public.test_like_4d"
  Column |  Type   | Collation | Nullable |              Default               
 --------+---------+-----------+----------+------------------------------------
@@ -244,6 +431,23 @@
 CREATE TABLE test_like_5c (LIKE test_like_4 INCLUDING ALL)
   INHERITS (test_like_5, test_like_5x);
 \d test_like_5c
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                          Table "public.test_like_5c"
  Column |  Type   | Collation | Nullable |              Default               
 --------+---------+-----------+----------+------------------------------------
@@ -286,6 +490,39 @@
 /* Use primary key imported by LIKE for self-referential FK constraint */
 CREATE TABLE inhz (x text REFERENCES inhz, LIKE inhx INCLUDING INDEXES);
 \d inhz
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
               Table "public.inhz"
  Column | Type | Collation | Nullable | Default 
 --------+------+-----------+----------+---------
@@ -327,6 +564,25 @@
 ALTER TABLE ctlt4 ALTER COLUMN c SET STORAGE EXTERNAL;
 CREATE TABLE ctlt12_storage (LIKE ctlt1 INCLUDING STORAGE, LIKE ctlt2 INCLUDING STORAGE);
 \d+ ctlt12_storage
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                              Table "public.ctlt12_storage"
  Column | Type | Collation | Nullable | Default | Storage  | Stats target | Description 
 --------+------+-----------+----------+---------+----------+--------------+-------------
@@ -336,6 +592,25 @@
 
 CREATE TABLE ctlt12_comments (LIKE ctlt1 INCLUDING COMMENTS, LIKE ctlt2 INCLUDING COMMENTS);
 \d+ ctlt12_comments
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                              Table "public.ctlt12_comments"
  Column | Type | Collation | Nullable | Default | Storage  | Stats target | Description 
 --------+------+-----------+----------+---------+----------+--------------+-------------
@@ -348,6 +623,25 @@
 NOTICE:  merging column "b" with inherited definition
 NOTICE:  merging constraint "ctlt1_a_check" with inherited definition
 \d+ ctlt1_inh
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                 Table "public.ctlt1_inh"
  Column | Type | Collation | Nullable | Default | Storage  | Stats target | Description 
 --------+------+-----------+----------+---------+----------+--------------+-------------
@@ -358,6 +652,7 @@
 Inherits: ctlt1
 
 SELECT description FROM pg_description, pg_constraint c WHERE classoid = 'pg_constraint'::regclass AND objoid = c.oid AND c.conrelid = 'ctlt1_inh'::regclass;
+INFO:  Path param info: 0.000000
  description 
 -------------
  t1_a_check
@@ -366,6 +661,25 @@
 CREATE TABLE ctlt13_inh () INHERITS (ctlt1, ctlt3);
 NOTICE:  merging multiple inherited definitions of column "a"
 \d+ ctlt13_inh
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                Table "public.ctlt13_inh"
  Column | Type | Collation | Nullable | Default | Storage  | Stats target | Description 
 --------+------+-----------+----------+---------+----------+--------------+-------------
@@ -382,6 +696,37 @@
 CREATE TABLE ctlt13_like (LIKE ctlt3 INCLUDING CONSTRAINTS INCLUDING INDEXES INCLUDING COMMENTS INCLUDING STORAGE) INHERITS (ctlt1);
 NOTICE:  merging column "a" with inherited definition
 \d+ ctlt13_like
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                Table "public.ctlt13_like"
  Column | Type | Collation | Nullable | Default | Storage  | Stats target | Description 
 --------+------+-----------+----------+---------+----------+--------------+-------------
@@ -397,6 +742,7 @@
 Inherits: ctlt1
 
 SELECT description FROM pg_description, pg_constraint c WHERE classoid = 'pg_constraint'::regclass AND objoid = c.oid AND c.conrelid = 'ctlt13_like'::regclass;
+INFO:  Path param info: 0.000000
  description 
 -------------
  t3_a_check
@@ -404,6 +750,37 @@
 
 CREATE TABLE ctlt_all (LIKE ctlt1 INCLUDING ALL);
 \d+ ctlt_all
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                 Table "public.ctlt_all"
  Column | Type | Collation | Nullable | Default | Storage  | Stats target | Description 
 --------+------+-----------+----------+---------+----------+--------------+-------------
@@ -420,6 +797,16 @@
     "public.ctlt_all_expr_stat" ON (a || b) FROM ctlt_all
 
 SELECT c.relname, objsubid, description FROM pg_description, pg_index i, pg_class c WHERE classoid = 'pg_class'::regclass AND objoid = i.indexrelid AND c.oid = i.indexrelid AND i.indrelid = 'ctlt_all'::regclass ORDER BY c.relname, objsubid;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
     relname     | objsubid | description 
 ----------------+----------+-------------
  ctlt_all_b_idx |        0 | index b_key
@@ -427,6 +814,8 @@
 (2 rows)
 
 SELECT s.stxname, objsubid, description FROM pg_description, pg_statistic_ext s WHERE classoid = 'pg_statistic_ext'::regclass AND objoid = s.oid AND s.stxrelid = 'ctlt_all'::regclass ORDER BY s.stxname, objsubid;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
       stxname       | objsubid |  description  
 --------------------+----------+---------------
  ctlt_all_a_b_stat  |        0 | ab stats
@@ -444,6 +833,38 @@
 -- Check that LIKE isn't confused by a system catalog of the same name
 CREATE TABLE pg_attrdef (LIKE ctlt1 INCLUDING ALL);
 \d+ public.pg_attrdef
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                Table "public.pg_attrdef"
  Column | Type | Collation | Nullable | Default | Storage  | Stats target | Description 
 --------+------+-----------+----------+---------+----------+--------------+-------------
@@ -466,6 +887,37 @@
 SET LOCAL search_path = ctl_schema, public;
 CREATE TABLE ctlt1 (LIKE ctlt1 INCLUDING ALL);
 \d+ ctlt1
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                 Table "ctl_schema.ctlt1"
  Column | Type | Collation | Nullable | Default | Storage  | Stats target | Description 
 --------+------+-----------+----------+---------+----------+--------------+-------------
@@ -488,6 +940,23 @@
 CREATE TABLE noinh_con_copy (a int CHECK (a > 0) NO INHERIT);
 CREATE TABLE noinh_con_copy1 (LIKE noinh_con_copy INCLUDING CONSTRAINTS);
 \d noinh_con_copy1
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
           Table "public.noinh_con_copy1"
  Column |  Type   | Collation | Nullable | Default 
 --------+---------+-----------+----------+---------
diff -U3 /home/dbs/pg-queryplans/postgres/src/test/regress/expected/alter_generic.out /home/dbs/pg-queryplans/postgres/src/test/regress/results/alter_generic.out
--- /home/dbs/pg-queryplans/postgres/src/test/regress/expected/alter_generic.out	2024-02-20 13:16:25.951611559 +0900
+++ /home/dbs/pg-queryplans/postgres/src/test/regress/results/alter_generic.out	2024-02-20 16:07:33.164006006 +0900
@@ -96,6 +96,11 @@
   WHERE p.pronamespace = n.oid AND p.proowner = a.oid
     AND n.nspname IN ('alt_nsp1', 'alt_nsp2')
   ORDER BY nspname, proname;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  nspname  |  proname  | prorettype | prokind |           rolname           
 ----------+-----------+------------+---------+-----------------------------
  alt_nsp1 | alt_agg2  | integer    | a       | regress_alter_generic_user2
@@ -145,6 +150,12 @@
   WHERE c.connamespace = n.oid AND c.conowner = a.oid
     AND n.nspname IN ('alt_nsp1', 'alt_nsp2')
   ORDER BY nspname, conname;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  nspname  |  conname  |           rolname           
 ----------+-----------+-----------------------------
  alt_nsp1 | alt_conv2 | regress_alter_generic_user2
@@ -203,6 +214,8 @@
   FROM pg_language l, pg_authid a
   WHERE l.lanowner = a.oid AND l.lanname like 'alt_lang%'
   ORDER BY lanname;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
   lanname  |           rolname           
 -----------+-----------------------------
  alt_lang2 | regress_alter_generic_user2
@@ -236,6 +249,11 @@
   WHERE o.oprnamespace = n.oid AND o.oprowner = a.oid
     AND n.nspname IN ('alt_nsp1', 'alt_nsp2')
   ORDER BY nspname, oprname;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  nspname  | oprname |           rolname           | oprleft | oprright | oprcode 
 ----------+---------+-----------------------------+---------+----------+---------
  alt_nsp1 | @+@     | regress_alter_generic_user3 | integer | integer  | int4pl
@@ -308,6 +326,20 @@
     AND n.nspname IN ('alt_nsp1', 'alt_nsp2')
 	AND NOT opfname LIKE 'alt_opc%'
   ORDER BY nspname, opfname;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  nspname  | opfname  | amname |           rolname           
 ----------+----------+--------+-----------------------------
  alt_nsp1 | alt_opf2 | hash   | regress_alter_generic_user2
@@ -321,6 +353,20 @@
   WHERE o.opcmethod = m.oid AND o.opcnamespace = n.oid AND o.opcowner = a.oid
     AND n.nspname IN ('alt_nsp1', 'alt_nsp2')
   ORDER BY nspname, opcname;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  nspname  | opcname  | amname |           rolname           
 ----------+----------+--------+-----------------------------
  alt_nsp1 | alt_opc2 | hash   | regress_alter_generic_user2
@@ -555,6 +601,11 @@
  WHERE s.stxnamespace = n.oid AND s.stxowner = a.oid
    AND n.nspname in ('alt_nsp1', 'alt_nsp2')
  ORDER BY nspname, stxname;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  nspname  |  stxname  |           rolname           
 ----------+-----------+-----------------------------
  alt_nsp1 | alt_stat2 | regress_alter_generic_user2
@@ -596,6 +647,11 @@
   WHERE t.dictnamespace = n.oid AND t.dictowner = a.oid
     AND n.nspname in ('alt_nsp1', 'alt_nsp2')
   ORDER BY nspname, dictname;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  nspname  |   dictname   |           rolname           
 ----------+--------------+-----------------------------
  alt_nsp1 | alt_ts_dict2 | regress_alter_generic_user2
@@ -637,6 +693,11 @@
   WHERE t.cfgnamespace = n.oid AND t.cfgowner = a.oid
     AND n.nspname in ('alt_nsp1', 'alt_nsp2')
   ORDER BY nspname, cfgname;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  nspname  |   cfgname    |           rolname           
 ----------+--------------+-----------------------------
  alt_nsp1 | alt_ts_conf2 | regress_alter_generic_user2
@@ -664,6 +725,8 @@
   FROM pg_ts_template t, pg_namespace n
   WHERE t.tmplnamespace = n.oid AND nspname like 'alt_nsp%'
   ORDER BY nspname, tmplname;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  nspname  |   tmplname   
 ----------+--------------
  alt_nsp1 | alt_ts_temp2
@@ -693,6 +756,8 @@
   FROM pg_ts_parser t, pg_namespace n
   WHERE t.prsnamespace = n.oid AND nspname like 'alt_nsp%'
   ORDER BY nspname, prsname;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  nspname  |   prsname   
 ----------+-------------
  alt_nsp1 | alt_ts_prs2
diff -U3 /home/dbs/pg-queryplans/postgres/src/test/regress/expected/misc.out /home/dbs/pg-queryplans/postgres/src/test/regress/results/misc.out
--- /home/dbs/pg-queryplans/postgres/src/test/regress/expected/misc.out	2024-02-20 13:16:25.963611345 +0900
+++ /home/dbs/pg-queryplans/postgres/src/test/regress/results/misc.out	2024-02-20 16:07:33.180005774 +0900
@@ -44,11 +44,13 @@
    FROM onek
    WHERE onek.stringu1 = 'JBAAAA' and
 	  onek.stringu1 = tmp.stringu1;
+INFO:  Path param info: 0.000000
 UPDATE tmp
    SET stringu1 = reverse_name(onek2.stringu1)
    FROM onek2
    WHERE onek2.stringu1 = 'JCAAAA' and
 	  onek2.stringu1 = tmp.stringu1;
+INFO:  Path param info: 0.000000
 DROP TABLE tmp;
 --UPDATE person*
 --   SET age = age + 1;
diff -U3 /home/dbs/pg-queryplans/postgres/src/test/regress/expected/merge.out /home/dbs/pg-queryplans/postgres/src/test/regress/results/merge.out
--- /home/dbs/pg-queryplans/postgres/src/test/regress/expected/merge.out	2024-02-20 13:16:25.963611345 +0900
+++ /home/dbs/pg-queryplans/postgres/src/test/regress/results/merge.out	2024-02-20 16:07:33.212005305 +0900
@@ -15,6 +15,7 @@
 INSERT INTO target VALUES (2, 20);
 INSERT INTO target VALUES (3, 30);
 SELECT t.ctid is not null as matched, t.*, s.* FROM source s FULL OUTER JOIN target t ON s.sid = t.tid ORDER BY t.tid, s.sid;
+INFO:  Path param info: 0.000000
  matched | tid | balance | sid | delta 
 ---------+-----+---------+-----+-------
  t       |   1 |      10 |     |      
@@ -38,6 +39,7 @@
 ON t.tid = s.sid
 WHEN MATCHED THEN
 	DELETE;
+INFO:  Path param info: 0.000000
                QUERY PLAN               
 ----------------------------------------
  Merge on target t
@@ -164,6 +166,7 @@
 ON target.tid = source2.sid
 WHEN MATCHED THEN
 	UPDATE SET balance = 0;
+INFO:  Path param info: 0.000000
 ERROR:  permission denied for table source2
 GRANT INSERT ON target TO regress_merge_no_privs;
 SET SESSION AUTHORIZATION regress_merge_no_privs;
@@ -172,6 +175,7 @@
 ON target.tid = source2.sid
 WHEN MATCHED THEN
 	UPDATE SET balance = 0;
+INFO:  Path param info: 0.000000
 ERROR:  permission denied for table target
 GRANT UPDATE ON target2 TO regress_merge_privs;
 SET SESSION AUTHORIZATION regress_merge_privs;
@@ -180,12 +184,14 @@
 ON target2.tid = source.sid
 WHEN MATCHED THEN
 	DELETE;
+INFO:  Path param info: 0.000000
 ERROR:  permission denied for table target2
 MERGE INTO target2
 USING source
 ON target2.tid = source.sid
 WHEN NOT MATCHED THEN
 	INSERT DEFAULT VALUES;
+INFO:  Path param info: 0.000000
 ERROR:  permission denied for table target2
 -- check if the target can be accessed from source relation subquery; we should
 -- not be able to do so
@@ -207,22 +213,26 @@
 ON target.tid = source.sid
 WHEN MATCHED THEN
 	UPDATE SET balance = 0;
+INFO:  Path param info: 0.000000
 MERGE INTO target t
 USING source AS s
 ON t.tid = s.sid
 WHEN MATCHED THEN
 	UPDATE SET balance = 0;
+INFO:  Path param info: 0.000000
 MERGE INTO target t
 USING source AS s
 ON t.tid = s.sid
 WHEN MATCHED THEN
 	DELETE;
+INFO:  Path param info: 0.000000
 BEGIN;
 MERGE INTO target t
 USING source AS s
 ON t.tid = s.sid
 WHEN NOT MATCHED THEN
 	INSERT DEFAULT VALUES;
+INFO:  Path param info: 0.000000
 ROLLBACK;
 -- insert some non-matching source rows to work from
 INSERT INTO source VALUES (4, 40);
@@ -245,22 +255,26 @@
 ON t.tid = s.sid
 WHEN NOT MATCHED THEN
 	DO NOTHING;
+INFO:  Path param info: 0.000000
 MERGE INTO target t
 USING source AS s
 ON t.tid = s.sid
 WHEN MATCHED THEN
 	UPDATE SET balance = 0;
+INFO:  Path param info: 0.000000
 MERGE INTO target t
 USING source AS s
 ON t.tid = s.sid
 WHEN MATCHED THEN
 	DELETE;
+INFO:  Path param info: 0.000000
 BEGIN;
 MERGE INTO target t
 USING source AS s
 ON t.tid = s.sid
 WHEN NOT MATCHED THEN
 	INSERT DEFAULT VALUES;
+INFO:  Path param info: 0.000000
 SELECT * FROM target ORDER BY tid;
  tid | balance 
 -----+---------
@@ -281,6 +295,7 @@
 ON t.tid = s.sid
 WHEN MATCHED THEN
 	UPDATE SET balance = 0;
+INFO:  Path param info: 0.000000
                QUERY PLAN               
 ----------------------------------------
  Merge on target t
@@ -297,6 +312,7 @@
 ON t.tid = s.sid
 WHEN MATCHED THEN
 	DELETE;
+INFO:  Path param info: 0.000000
                QUERY PLAN               
 ----------------------------------------
  Merge on target t
@@ -313,6 +329,7 @@
 ON t.tid = s.sid
 WHEN NOT MATCHED THEN
 	INSERT VALUES (4, NULL);
+INFO:  Path param info: 0.000000
                QUERY PLAN               
 ----------------------------------------
  Merge on target t
@@ -351,6 +368,7 @@
 ON t.tid = s.sid
 WHEN MATCHED THEN
 	UPDATE SET balance = 0;
+INFO:  Path param info: 0.000000
 SELECT * FROM target ORDER BY tid;
  tid | balance 
 -----+---------
@@ -367,6 +385,7 @@
 ON t.tid = s.sid
 WHEN MATCHED THEN
 	DELETE;
+INFO:  Path param info: 0.000000
 SELECT * FROM target ORDER BY tid;
  tid | balance 
 -----+---------
@@ -380,6 +399,7 @@
 ON t.tid = s.sid
 WHEN MATCHED THEN
 	DO NOTHING;
+INFO:  Path param info: 0.000000
 SELECT * FROM target ORDER BY tid;
  tid | balance 
 -----+---------
@@ -395,6 +415,7 @@
 ON t.tid = s.sid
 WHEN NOT MATCHED THEN
 	INSERT VALUES (4, NULL);
+INFO:  Path param info: 0.000000
 SELECT * FROM target ORDER BY tid;
  tid | balance 
 -----+---------
@@ -430,6 +451,7 @@
 ON t.tid = s.sid
 WHEN MATCHED THEN
 	UPDATE SET balance = 0;
+INFO:  Path param info: 0.000000
 ERROR:  MERGE command cannot affect row a second time
 HINT:  Ensure that not more than one source row matches any one target row.
 ROLLBACK;
@@ -439,6 +461,7 @@
 ON t.tid = s.sid
 WHEN MATCHED THEN
 	DELETE;
+INFO:  Path param info: 0.000000
 ERROR:  MERGE command cannot affect row a second time
 HINT:  Ensure that not more than one source row matches any one target row.
 ROLLBACK;
@@ -469,6 +492,7 @@
 ON t.tid = s.sid
 WHEN NOT MATCHED THEN
   INSERT VALUES (4, NULL);
+INFO:  Path param info: 0.000000
 ERROR:  duplicate key value violates unique constraint "target_pkey"
 DETAIL:  Key (tid)=(4) already exists.
 SELECT * FROM target ORDER BY tid;
@@ -505,6 +529,7 @@
 	INSERT VALUES (4, 4)
 WHEN MATCHED THEN
 	UPDATE SET balance = 0;
+INFO:  Path param info: 0.000000
 SELECT * FROM target ORDER BY tid;
  tid | balance 
 -----+---------
@@ -524,6 +549,7 @@
 	UPDATE SET balance = 0
 WHEN NOT MATCHED THEN
 	INSERT VALUES (4, 4);
+INFO:  Path param info: 0.000000
 SELECT * FROM target ORDER BY tid;
  tid | balance 
 -----+---------
@@ -542,6 +568,7 @@
 ON t.tid = s.sid
 WHEN MATCHED THEN
 	UPDATE SET balance = t.balance + s.delta;
+INFO:  Path param info: 0.000000
 SELECT * FROM target ORDER BY tid;
  tid | balance 
 -----+---------
@@ -558,6 +585,7 @@
 ON t.tid = s.sid
 WHEN NOT MATCHED THEN
 	INSERT VALUES (s.sid, s.delta);
+INFO:  Path param info: 0.000000
 SELECT * FROM target ORDER BY tid;
  tid | balance 
 -----+---------
@@ -578,6 +606,7 @@
 ON t.tid = s.sid
 WHEN NOT MATCHED THEN
   INSERT VALUES (s.sid, s.delta);
+INFO:  Path param info: 0.000000
 SELECT * FROM target ORDER BY tid;
  tid | balance 
 -----+---------
@@ -599,6 +628,7 @@
 ON t.tid = s.sid
 WHEN NOT MATCHED THEN
 	INSERT (tid, balance) VALUES (s.sid, s.delta);
+INFO:  Path param info: 0.000000
 SELECT * FROM target ORDER BY tid;
  tid | balance 
 -----+---------
@@ -642,6 +672,7 @@
 	UPDATE SET balance = t.balance + s.delta
 WHEN NOT MATCHED THEN
 	INSERT VALUES (s.sid, s.delta);
+INFO:  Path param info: 0.000000
 SELECT * FROM target ORDER BY tid;
  tid | balance 
 -----+---------
@@ -675,6 +706,7 @@
 USING wq_source s ON t.tid = s.sid
 WHEN NOT MATCHED THEN
 	INSERT (tid) VALUES (s.sid);
+INFO:  Path param info: 0.000000
 SELECT * FROM wq_target;
  tid | balance 
 -----+---------
@@ -687,6 +719,7 @@
 USING wq_source s ON t.tid = s.sid
 WHEN NOT MATCHED AND FALSE THEN
 	INSERT (tid) VALUES (s.sid);
+INFO:  Path param info: 0.000000
 SELECT * FROM wq_target;
  tid | balance 
 -----+---------
@@ -697,6 +730,7 @@
 USING wq_source s ON t.tid = s.sid
 WHEN NOT MATCHED AND s.balance <> 100 THEN
 	INSERT (tid) VALUES (s.sid);
+INFO:  Path param info: 0.000000
 SELECT * FROM wq_target;
  tid | balance 
 -----+---------
@@ -708,6 +742,7 @@
 USING wq_source s ON t.tid = s.sid
 WHEN NOT MATCHED AND s.balance = 100 THEN
 	INSERT (tid) VALUES (s.sid);
+INFO:  Path param info: 0.000000
 SELECT * FROM wq_target;
  tid | balance 
 -----+---------
@@ -732,6 +767,7 @@
 USING wq_source s ON t.tid = s.sid
 WHEN NOT MATCHED AND s.balance = 100 THEN
 	INSERT (tid) VALUES (s.sid);
+INFO:  Path param info: 0.000000
 SELECT * FROM wq_target;
  tid | balance 
 -----+---------
@@ -749,6 +785,7 @@
 USING wq_source s ON t.tid = s.sid
 WHEN MATCHED AND s.balance = 100 THEN
 	UPDATE SET balance = t.balance + s.balance;
+INFO:  Path param info: 0.000000
 SELECT * FROM wq_target;
  tid | balance 
 -----+---------
@@ -759,6 +796,7 @@
 USING wq_source s ON t.tid = s.sid
 WHEN MATCHED AND t.balance = 100 THEN
 	UPDATE SET balance = t.balance + s.balance;
+INFO:  Path param info: 0.000000
 SELECT * FROM wq_target;
  tid | balance 
 -----+---------
@@ -770,6 +808,7 @@
 USING wq_source s ON t.tid = s.sid
 WHEN MATCHED AND t.balance = 99 AND s.balance > 100 THEN
 	UPDATE SET balance = t.balance + s.balance;
+INFO:  Path param info: 0.000000
 SELECT * FROM wq_target;
  tid | balance 
 -----+---------
@@ -780,6 +819,7 @@
 USING wq_source s ON t.tid = s.sid
 WHEN MATCHED AND t.balance = 99 AND s.balance = 100 THEN
 	UPDATE SET balance = t.balance + s.balance;
+INFO:  Path param info: 0.000000
 SELECT * FROM wq_target;
  tid | balance 
 -----+---------
@@ -791,6 +831,7 @@
 USING wq_source s ON t.tid = s.sid
 WHEN MATCHED AND t.balance = 99 OR s.balance > 100 THEN
 	UPDATE SET balance = t.balance + s.balance;
+INFO:  Path param info: 0.000000
 SELECT * FROM wq_target;
  tid | balance 
 -----+---------
@@ -801,6 +842,7 @@
 USING wq_source s ON t.tid = s.sid
 WHEN MATCHED AND t.balance = 199 OR s.balance > 100 THEN
 	UPDATE SET balance = t.balance + s.balance;
+INFO:  Path param info: 0.000000
 SELECT * FROM wq_target;
  tid | balance 
 -----+---------
@@ -813,6 +855,7 @@
 USING wq_source s ON (t.tid = s.sid)
 WHEN matched and t = s or t.tid = s.sid THEN
 	UPDATE SET balance = t.balance + s.balance;
+INFO:  Path param info: 0.000000
 SELECT * FROM wq_target;
  tid | balance 
 -----+---------
@@ -825,6 +868,7 @@
 USING wq_source s ON t.tid = s.sid
 WHEN MATCHED AND t.balance > (SELECT max(balance) FROM target) THEN
 	UPDATE SET balance = t.balance + s.balance;
+INFO:  Path param info: 0.000000
 -- check if we can access system columns in the conditions
 MERGE INTO wq_target t
 USING wq_source s ON t.tid = s.sid
@@ -837,6 +881,7 @@
 USING wq_source s ON t.tid = s.sid
 WHEN MATCHED AND t.tableoid >= 0 THEN
 	UPDATE SET balance = t.balance + s.balance;
+INFO:  Path param info: 0.000000
 SELECT * FROM wq_target;
  tid | balance 
 -----+---------
@@ -902,6 +947,7 @@
 	DELETE
 WHEN NOT MATCHED THEN
 	INSERT VALUES (s.sid, s.delta);
+INFO:  Path param info: 0.000000
 NOTICE:  BEFORE INSERT STATEMENT trigger
 NOTICE:  BEFORE UPDATE STATEMENT trigger
 NOTICE:  BEFORE DELETE STATEMENT trigger
@@ -932,6 +978,7 @@
 END;
 $$;
 SELECT * FROM target full outer join source on (sid = tid);
+INFO:  Path param info: 0.000000
  tid | balance | sid | delta 
 -----+---------+-----+-------
    3 |      30 |   3 |    20
@@ -961,6 +1008,7 @@
 RAISE NOTICE 'ROW_COUNT = %', result;
 END;
 $$;
+INFO:  Path param info: 0.000000
 NOTICE:  BEFORE INSERT STATEMENT trigger
 NOTICE:  BEFORE UPDATE STATEMENT trigger
 NOTICE:  BEFORE DELETE STATEMENT trigger
@@ -973,6 +1021,7 @@
 NOTICE:  Not found
 NOTICE:  ROW_COUNT = 0
 SELECT * FROM target FULL OUTER JOIN source ON (sid = tid);
+INFO:  Path param info: 0.000000
  tid | balance | sid | delta 
 -----+---------+-----+-------
    3 |      30 |   3 |    20
@@ -995,6 +1044,7 @@
 	UPDATE SET balance = t.balance - s.delta;
 END;
 $$;
+INFO:  Path param info: 0.000000
 NOTICE:  BEFORE UPDATE STATEMENT trigger
 NOTICE:  BEFORE UPDATE ROW trigger row: (3,30) -> (3,10)
 NOTICE:  BEFORE UPDATE ROW trigger row: (2,20) -> (2,15)
@@ -1009,6 +1059,7 @@
 ON t.tid = s.sid
 WHEN NOT MATCHED THEN
 	INSERT (tid, balance) VALUES (s.sid, s.delta);
+INFO:  Path param info: 0.000000
 NOTICE:  BEFORE INSERT STATEMENT trigger
 NOTICE:  BEFORE INSERT ROW trigger row: (9,57)
 NOTICE:  AFTER INSERT ROW trigger row: (9,57)
@@ -1030,6 +1081,7 @@
 ON t.tid = s.sid
 WHEN NOT MATCHED THEN
 	INSERT (tid, balance) VALUES (s.sid, s.delta);
+INFO:  Path param info: 0.000000
 NOTICE:  BEFORE INSERT STATEMENT trigger
 NOTICE:  BEFORE INSERT ROW trigger row: (4,40)
 NOTICE:  AFTER INSERT ROW trigger row: (4,40)
@@ -1050,6 +1102,7 @@
 ON t.tid = s.sid
 WHEN NOT MATCHED THEN
 	INSERT (tid, balance) VALUES (s.sid, s.newname);
+INFO:  Path param info: 0.000000
 NOTICE:  BEFORE INSERT STATEMENT trigger
 NOTICE:  BEFORE INSERT ROW trigger row: (4,40)
 NOTICE:  AFTER INSERT ROW trigger row: (4,40)
@@ -1073,6 +1126,7 @@
 	UPDATE SET balance = t1.balance + t2.balance
 WHEN NOT MATCHED THEN
 	INSERT VALUES (t2.tid, t2.balance);
+INFO:  Path param info: 0.000000
 NOTICE:  BEFORE INSERT STATEMENT trigger
 NOTICE:  BEFORE UPDATE STATEMENT trigger
 NOTICE:  BEFORE UPDATE ROW trigger row: (1,10) -> (1,20)
@@ -1098,6 +1152,7 @@
 ON t.tid = s.sid
 WHEN NOT MATCHED THEN
 	INSERT (tid, balance) VALUES (s.sid, s.delta);
+INFO:  Path param info: 0.000000
 NOTICE:  BEFORE INSERT STATEMENT trigger
 NOTICE:  AFTER INSERT STATEMENT trigger
 SELECT * FROM target ORDER BY tid;
@@ -1120,6 +1175,7 @@
 ON t.tid = s.sid
 WHEN NOT MATCHED THEN
 	INSERT (tid, balance) VALUES (s.sid, s.delta);
+INFO:  Path param info: 0.000000
 NOTICE:  BEFORE INSERT STATEMENT trigger
 NOTICE:  BEFORE INSERT ROW trigger row: (4,40)
 NOTICE:  AFTER INSERT ROW trigger row: (4,40)
@@ -1225,6 +1281,7 @@
 ON tid = sid
 WHEN MATCHED AND t.balance > delta THEN
 	UPDATE SET balance = t.balance + delta;
+INFO:  Path param info: 0.000000
 SELECT * FROM sq_target;
  tid | balance 
 -----+---------
@@ -1242,6 +1299,7 @@
 ON tid = sid
 WHEN MATCHED THEN
     UPDATE SET balance = v.balance + delta;
+INFO:  Path param info: 0.000000
 SELECT * FROM sq_target;
  tid | balance 
 -----+---------
@@ -1277,6 +1335,7 @@
 	INSERT (balance, tid) VALUES (balance + delta, sid)
 WHEN MATCHED AND tid < 2 THEN
 	DELETE;
+INFO:  Path param info: 0.000000
 SELECT * FROM sq_target;
  tid | balance 
 -----+---------
@@ -1301,6 +1360,7 @@
 	INSERT (balance, tid) VALUES (balance + delta, sid)
 WHEN MATCHED AND tid < 2 THEN
 	DELETE;
+INFO:  Path param info: 0.000000
 ROLLBACK;
 -- RETURNING
 BEGIN;
@@ -1345,6 +1405,7 @@
 MERGE INTO ex_mtarget t USING ex_msource s ON t.a = s.a
 WHEN MATCHED THEN
 	UPDATE SET b = t.b + 1');
+INFO:  Path param info: 0.000000
                             explain_merge                             
 ----------------------------------------------------------------------
  Merge on ex_mtarget t (actual rows=0 loops=1)
@@ -1366,6 +1427,7 @@
 MERGE INTO ex_mtarget t USING ex_msource s ON t.a = s.a
 WHEN MATCHED AND t.a < 10 THEN
 	UPDATE SET b = t.b + 1');
+INFO:  Path param info: 0.000000
                             explain_merge                             
 ----------------------------------------------------------------------
  Merge on ex_mtarget t (actual rows=0 loops=1)
@@ -1389,6 +1451,7 @@
 	UPDATE SET b = t.b + 1
 WHEN MATCHED AND t.a >= 10 AND t.a <= 20 THEN
 	DELETE');
+INFO:  Path param info: 0.000000
                             explain_merge                             
 ----------------------------------------------------------------------
  Merge on ex_mtarget t (actual rows=0 loops=1)
@@ -1410,6 +1473,7 @@
 MERGE INTO ex_mtarget t USING ex_msource s ON t.a = s.a
 WHEN NOT MATCHED AND s.a < 10 THEN
 	INSERT VALUES (a, b)');
+INFO:  Path param info: 0.000000
                             explain_merge                             
 ----------------------------------------------------------------------
  Merge on ex_mtarget t (actual rows=0 loops=1)
@@ -1435,6 +1499,7 @@
 	DELETE
 WHEN NOT MATCHED AND s.a < 20 THEN
 	INSERT VALUES (a, b)');
+INFO:  Path param info: 0.000000
                             explain_merge                             
 ----------------------------------------------------------------------
  Merge on ex_mtarget t (actual rows=0 loops=1)
@@ -1456,6 +1521,7 @@
 MERGE INTO ex_mtarget t USING ex_msource s ON t.a = s.a AND t.a < -1000
 WHEN MATCHED AND t.a < 10 THEN
 	DO NOTHING');
+INFO:  Path param info: 0.000000
                            explain_merge                            
 --------------------------------------------------------------------
  Merge on ex_mtarget t (actual rows=0 loops=1)
@@ -1481,6 +1547,7 @@
 ON tid = sid
 WHEN MATCHED THEN
     UPDATE SET balance = (SELECT count(*) FROM sq_target);
+INFO:  Path param info: 0.000000
 SELECT * FROM sq_target WHERE tid = 1;
  tid | balance 
 -----+---------
@@ -1494,6 +1561,7 @@
 ON tid = sid
 WHEN MATCHED AND (SELECT count(*) > 0 FROM sq_target) THEN
     UPDATE SET balance = 42;
+INFO:  Path param info: 0.000000
 SELECT * FROM sq_target WHERE tid = 1;
  tid | balance 
 -----+---------
@@ -1507,6 +1575,7 @@
 ON tid = sid AND (SELECT count(*) > 0 FROM sq_target)
 WHEN MATCHED THEN
     UPDATE SET balance = 42;
+INFO:  Path param info: 0.000000
 SELECT * FROM sq_target WHERE tid = 1;
  tid | balance 
 -----+---------
@@ -1540,6 +1609,7 @@
     UPDATE SET balance = balance + delta, val = val || ' updated by merge'
   WHEN NOT MATCHED THEN
     INSERT VALUES (sid, delta, 'inserted by merge');
+INFO:  Path param info: 0.000000
 SELECT * FROM pa_target ORDER BY tid;
  tid | balance |           val            
 -----+---------+--------------------------
@@ -1569,6 +1639,7 @@
     UPDATE SET balance = balance + delta, val = val || ' updated by merge'
   WHEN NOT MATCHED THEN
     INSERT VALUES (sid, delta, 'inserted by merge');
+INFO:  Path param info: 0.000000
 SELECT * FROM pa_target ORDER BY tid;
  tid | balance |           val            
 -----+---------+--------------------------
@@ -1615,6 +1686,7 @@
 END;
 $$;
 SELECT merge_func();
+INFO:  Path param info: 0.000000
  merge_func 
 ------------
          14
@@ -1677,6 +1749,7 @@
 RAISE NOTICE 'ROW_COUNT = %', result;
 END;
 $$;
+INFO:  Path param info: 0.000000
 NOTICE:  ROW_COUNT = 14
 SELECT * FROM pa_target ORDER BY tid;
  tid | balance |           val            
@@ -1708,6 +1781,7 @@
     UPDATE SET balance = balance + delta, val = val || ' updated by merge'
   WHEN NOT MATCHED THEN
     INSERT VALUES (sid, delta, 'inserted by merge');
+INFO:  Path param info: 0.000000
 SELECT * FROM pa_target ORDER BY tid;
  tid | balance |           val            
 -----+---------+--------------------------
@@ -1749,6 +1823,7 @@
 RAISE NOTICE 'ROW_COUNT = %', result;
 END;
 $$;
+INFO:  Path param info: 0.000000
 NOTICE:  ROW_COUNT = 14
 SELECT * FROM pa_target ORDER BY tid;
  tid | balance |           val            
@@ -1791,6 +1866,7 @@
 RAISE NOTICE 'ROW_COUNT = %', result;
 END;
 $$;
+INFO:  Path param info: 0.000000
 NOTICE:  ROW_COUNT = 10
 SELECT * FROM pa_target ORDER BY tid;
  tid | balance |           val            
@@ -1833,6 +1909,7 @@
 RAISE NOTICE 'ROW_COUNT = %', result;
 END;
 $$;
+INFO:  Path param info: 0.000000
 NOTICE:  ROW_COUNT = 3
 SELECT * FROM pa_target ORDER BY tid;
  tid | balance |           val            
@@ -1853,6 +1930,7 @@
   ON t.tid = s.sid AND t.tid IN (1,2,3,4)
   WHEN MATCHED THEN
     UPDATE SET tid = tid - 1;
+INFO:  Path param info: 0.000000
 ERROR:  new row violates row-level security policy for table "pa_target"
 ROLLBACK;
 DROP TABLE pa_source;
@@ -1890,6 +1968,7 @@
     UPDATE SET balance = balance + delta, val = val || ' updated by merge'
   WHEN NOT MATCHED THEN
     INSERT VALUES (slogts::timestamp, sid, delta, 'inserted by merge');
+INFO:  Path param info: 0.000000
 SELECT * FROM pa_target ORDER BY tid;
           logts           | tid | balance |           val            
 --------------------------+-----+---------+--------------------------
@@ -1915,6 +1994,7 @@
 EXPLAIN (VERBOSE, COSTS OFF)
 MERGE INTO pa_target t USING pa_source s ON t.tid = s.sid
   WHEN NOT MATCHED THEN INSERT VALUES (s.sid);
+INFO:  Path param info: 0.000000
                          QUERY PLAN                          
 -------------------------------------------------------------
  Merge on public.pa_target t
@@ -1933,6 +2013,7 @@
 
 MERGE INTO pa_target t USING pa_source s ON t.tid = s.sid
   WHEN NOT MATCHED THEN INSERT VALUES (s.sid);
+INFO:  Path param info: 0.000000
 TABLE pa_target;
  tid 
 -----
@@ -1946,6 +2027,7 @@
 EXPLAIN (VERBOSE, COSTS OFF)
 MERGE INTO pa_target t USING pa_source s ON t.tid = s.sid
   WHEN NOT MATCHED THEN INSERT VALUES (s.sid);
+INFO:  Path param info: 0.000000
                  QUERY PLAN                 
 --------------------------------------------
  Merge on public.pa_target t
@@ -1964,6 +2046,7 @@
 
 MERGE INTO pa_target t USING pa_source s ON t.tid = s.sid
   WHEN NOT MATCHED THEN INSERT VALUES (s.sid);
+INFO:  Path param info: 0.000000
 ERROR:  no partition of relation "pa_target" found for row
 DETAIL:  Partition key of the failing row contains (tid) = (1).
 DROP TABLE pa_source;
@@ -1989,6 +2072,10 @@
 ON t.tid = sid1
 WHEN NOT MATCHED THEN
 	INSERT VALUES (sid1, delta, sval);
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
 -- try accessing columns from either side of the source join
 MERGE INTO cj_target t
 USING cj_source2 s2
@@ -1998,6 +2085,11 @@
 	INSERT VALUES (sid2, delta, sval)
 WHEN MATCHED THEN
 	DELETE;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
 -- some simple expressions in INSERT targetlist
 MERGE INTO cj_target t
 USING cj_source2 s2
@@ -2007,12 +2099,22 @@
 	INSERT VALUES (sid2, delta + scat, sval)
 WHEN MATCHED THEN
 	UPDATE SET val = val || ' updated by merge';
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
 MERGE INTO cj_target t
 USING cj_source2 s2
 	INNER JOIN cj_source1 s1 ON sid1 = sid2 AND scat = 20
 ON t.tid = sid1
 WHEN MATCHED THEN
 	UPDATE SET val = val || ' ' || delta::text;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
 SELECT * FROM cj_target;
  tid | balance |               val                
 -----+---------+----------------------------------
@@ -2029,6 +2131,8 @@
 ON t.tid = fj.scat
 WHEN NOT MATCHED THEN
 	INSERT (tid, balance, val) VALUES (fj.scat, fj.delta, fj.phv);
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
 SELECT * FROM cj_target;
  tid | balance |               val                
 -----+---------+----------------------------------
@@ -2052,6 +2156,10 @@
 ON t.tid = s1.sid
 WHEN NOT MATCHED THEN
 	INSERT VALUES (s2.sid, delta, sval);
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
 DROP TABLE cj_source2, cj_source1, cj_target;
 -- Function scans
 CREATE TABLE fs_target (a int, b int, c text)
@@ -2063,6 +2171,7 @@
 	UPDATE SET b = b + id
 WHEN NOT MATCHED THEN
 	INSERT VALUES (id, -1);
+INFO:  Path param info: 0.000000
 MERGE INTO fs_target t
 USING generate_series(1,100,2) AS id
 ON t.a = id
@@ -2070,6 +2179,7 @@
 	UPDATE SET b = b + id, c = 'updated '|| id.*::text
 WHEN NOT MATCHED THEN
 	INSERT VALUES (id, -1, 'inserted ' || id.*::text);
+INFO:  Path param info: 0.000000
 SELECT count(*) FROM fs_target;
  count 
 -------
@@ -2163,6 +2273,7 @@
 WHEN NOT MATCHED THEN INSERT
      (city_id, logdate, peaktemp, unitsales)
    VALUES (city_id, logdate, peaktemp, unitsales);
+INFO:  Path param info: 0.000000
 SELECT tableoid::regclass, * FROM measurement ORDER BY city_id, logdate, peaktemp;
        tableoid       | city_id |  logdate   | peaktemp | unitsales 
 ----------------------+---------+------------+----------+-----------
@@ -2193,6 +2304,7 @@
 WHEN NOT MATCHED THEN INSERT
      (city_id, logdate, peaktemp, unitsales)
    VALUES (city_id, logdate, peaktemp, unitsales);
+INFO:  Path param info: 0.000000
 SELECT tableoid::regclass, * FROM measurement ORDER BY city_id, logdate;
        tableoid       | city_id |  logdate   | peaktemp | unitsales 
 ----------------------+---------+------------+----------+-----------
@@ -2211,6 +2323,7 @@
  USING ONLY measurement m ON
       (nm.city_id = m.city_id and nm.logdate=m.logdate)
 WHEN MATCHED THEN DELETE;
+INFO:  Path param info: 0.000000
 SELECT * FROM new_measurement ORDER BY city_id, logdate;
  city_id |  logdate   | peaktemp | unitsales 
 ---------+------------+----------+-----------
@@ -2228,6 +2341,7 @@
  USING measurement m ON
       (nm.city_id = m.city_id and nm.logdate=m.logdate)
 WHEN MATCHED THEN DELETE;
+INFO:  Path param info: 0.000000
 SELECT * FROM new_measurement ORDER BY city_id, logdate;
  city_id |  logdate   | peaktemp | unitsales 
 ---------+------------+----------+-----------
diff -U3 /home/dbs/pg-queryplans/postgres/src/test/regress/expected/misc_functions.out /home/dbs/pg-queryplans/postgres/src/test/regress/results/misc_functions.out
--- /home/dbs/pg-queryplans/postgres/src/test/regress/expected/misc_functions.out	2024-02-20 13:16:25.963611345 +0900
+++ /home/dbs/pg-queryplans/postgres/src/test/regress/results/misc_functions.out	2024-02-20 16:07:33.160006065 +0900
@@ -475,6 +475,7 @@
   (select pg_tablespace_databases(oid) as pts from pg_tablespace
    where spcname = 'pg_default') pts
   join pg_database db on pts.pts = db.oid;
+INFO:  Path param info: 0.000000
  ?column? 
 ----------
  t
@@ -540,6 +541,7 @@
 EXPLAIN (COSTS OFF)
 SELECT * FROM tenk1 a JOIN tenk1 b ON a.unique1 = b.unique1
 WHERE my_int_eq(a.unique2, 42);
+INFO:  Path param info: 0.000000
                   QUERY PLAN                  
 ----------------------------------------------
  Hash Join
@@ -559,6 +561,7 @@
 EXPLAIN (COSTS OFF)
 SELECT * FROM tenk1 a JOIN tenk1 b ON a.unique1 = b.unique1
 WHERE my_int_eq(a.unique2, 42);
+INFO:  Path param info: 0.000000
                    QUERY PLAN                    
 -------------------------------------------------
  Nested Loop
@@ -575,6 +578,7 @@
   SUPPORT test_support_func;
 EXPLAIN (COSTS OFF)
 SELECT * FROM tenk1 a JOIN my_gen_series(1,1000) g ON a.unique1 = g;
+INFO:  Path param info: 0.000000
                QUERY PLAN               
 ----------------------------------------
  Hash Join
@@ -586,6 +590,7 @@
 
 EXPLAIN (COSTS OFF)
 SELECT * FROM tenk1 a JOIN my_gen_series(1,10) g ON a.unique1 = g;
+INFO:  Path param info: 0.000000
                    QUERY PLAN                    
 -------------------------------------------------
  Nested Loop
diff -U3 /home/dbs/pg-queryplans/postgres/src/test/regress/expected/tsrf.out /home/dbs/pg-queryplans/postgres/src/test/regress/results/tsrf.out
--- /home/dbs/pg-queryplans/postgres/src/test/regress/expected/tsrf.out	2024-02-20 13:16:25.975611131 +0900
+++ /home/dbs/pg-queryplans/postgres/src/test/regress/results/tsrf.out	2024-02-20 16:07:33.144006299 +0900
@@ -103,6 +103,7 @@
 explain (verbose, costs off)
 SELECT * FROM few f1,
   (SELECT unnest(ARRAY[1,2]) FROM few f2 WHERE false OFFSET 0) ss;
+INFO:  Path param info: 0.000000
                    QUERY PLAN                   
 ------------------------------------------------
  Result
@@ -112,6 +113,7 @@
 
 SELECT * FROM few f1,
   (SELECT unnest(ARRAY[1,2]) FROM few f2 WHERE false OFFSET 0) ss;
+INFO:  Path param info: 0.000000
  id | dataa | datab | unnest 
 ----+-------+-------+--------
 (0 rows)
diff -U3 /home/dbs/pg-queryplans/postgres/src/test/regress/expected/tidscan.out /home/dbs/pg-queryplans/postgres/src/test/regress/results/tidscan.out
--- /home/dbs/pg-queryplans/postgres/src/test/regress/expected/tidscan.out	2024-02-20 13:16:25.975611131 +0900
+++ /home/dbs/pg-queryplans/postgres/src/test/regress/results/tidscan.out	2024-02-20 16:07:33.152006181 +0900
@@ -113,6 +113,7 @@
 EXPLAIN (COSTS OFF)
 SELECT t1.ctid, t1.*, t2.ctid, t2.*
 FROM tidscan t1 JOIN tidscan t2 ON t1.ctid = t2.ctid WHERE t1.id = 1;
+INFO:  Path param info: 0.000000
              QUERY PLAN             
 ------------------------------------
  Nested Loop
@@ -124,6 +125,7 @@
 
 SELECT t1.ctid, t1.*, t2.ctid, t2.*
 FROM tidscan t1 JOIN tidscan t2 ON t1.ctid = t2.ctid WHERE t1.id = 1;
+INFO:  Path param info: 0.000000
  ctid  | id | ctid  | id 
 -------+----+-------+----
  (0,1) |  1 | (0,1) |  1
@@ -132,6 +134,7 @@
 EXPLAIN (COSTS OFF)
 SELECT t1.ctid, t1.*, t2.ctid, t2.*
 FROM tidscan t1 LEFT JOIN tidscan t2 ON t1.ctid = t2.ctid WHERE t1.id = 1;
+INFO:  Path param info: 0.000000
              QUERY PLAN             
 ------------------------------------
  Nested Loop Left Join
@@ -143,6 +146,7 @@
 
 SELECT t1.ctid, t1.*, t2.ctid, t2.*
 FROM tidscan t1 LEFT JOIN tidscan t2 ON t1.ctid = t2.ctid WHERE t1.id = 1;
+INFO:  Path param info: 0.000000
  ctid  | id | ctid  | id 
 -------+----+-------+----
  (0,1) |  1 | (0,1) |  1
@@ -238,6 +242,7 @@
 -- appropriate place for these tests)
 EXPLAIN (COSTS OFF)
 SELECT count(*) FROM tenk1 t1 JOIN tenk1 t2 ON t1.ctid = t2.ctid;
+INFO:  Path param info: 0.000000
                QUERY PLAN               
 ----------------------------------------
  Aggregate
@@ -249,6 +254,7 @@
 (6 rows)
 
 SELECT count(*) FROM tenk1 t1 JOIN tenk1 t2 ON t1.ctid = t2.ctid;
+INFO:  Path param info: 0.000000
  count 
 -------
  10000
@@ -257,6 +263,7 @@
 SET enable_hashjoin TO off;
 EXPLAIN (COSTS OFF)
 SELECT count(*) FROM tenk1 t1 JOIN tenk1 t2 ON t1.ctid = t2.ctid;
+INFO:  Path param info: 0.000000
                QUERY PLAN                
 -----------------------------------------
  Aggregate
@@ -271,6 +278,7 @@
 (9 rows)
 
 SELECT count(*) FROM tenk1 t1 JOIN tenk1 t2 ON t1.ctid = t2.ctid;
+INFO:  Path param info: 0.000000
  count 
 -------
  10000
diff -U3 /home/dbs/pg-queryplans/postgres/src/test/regress/expected/tidrangescan.out /home/dbs/pg-queryplans/postgres/src/test/regress/results/tidrangescan.out
--- /home/dbs/pg-queryplans/postgres/src/test/regress/expected/tidrangescan.out	2024-02-20 13:16:25.975611131 +0900
+++ /home/dbs/pg-queryplans/postgres/src/test/regress/results/tidrangescan.out	2024-02-20 16:07:33.144006299 +0900
@@ -226,6 +226,7 @@
 SELECT t.ctid,t2.c FROM tidrangescan t,
 LATERAL (SELECT count(*) c FROM tidrangescan t2 WHERE t2.ctid <= t.ctid) t2
 WHERE t.ctid < '(1,0)';
+INFO:  Path param info: 0.000000
                   QUERY PLAN                   
 -----------------------------------------------
  Nested Loop
@@ -239,6 +240,7 @@
 SELECT t.ctid,t2.c FROM tidrangescan t,
 LATERAL (SELECT count(*) c FROM tidrangescan t2 WHERE t2.ctid <= t.ctid) t2
 WHERE t.ctid < '(1,0)';
+INFO:  Path param info: 0.000000
   ctid  | c  
 --------+----
  (0,1)  |  1
diff -U3 /home/dbs/pg-queryplans/postgres/src/test/regress/expected/collate.icu.utf8.out /home/dbs/pg-queryplans/postgres/src/test/regress/results/collate.icu.utf8.out
--- /home/dbs/pg-queryplans/postgres/src/test/regress/expected/collate.icu.utf8.out	2024-02-20 13:16:25.955611488 +0900
+++ /home/dbs/pg-queryplans/postgres/src/test/regress/results/collate.icu.utf8.out	2024-02-20 16:07:33.228005072 +0900
@@ -16,6 +16,23 @@
     b text COLLATE "en-x-icu" NOT NULL
 );
 \d collate_test1
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
         Table "collate_tests.collate_test1"
  Column |  Type   | Collation | Nullable | Default 
 --------+---------+-----------+----------+---------
@@ -47,6 +64,23 @@
     LIKE collate_test1
 );
 \d collate_test_like
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
       Table "collate_tests.collate_test_like"
  Column |  Type   | Collation | Nullable | Default 
 --------+---------+-----------+----------+---------
@@ -446,6 +480,8 @@
 CREATE VIEW collview3 AS SELECT a, lower((x || x) COLLATE "C") FROM collate_test10;
 SELECT table_name, view_definition FROM information_schema.views
   WHERE table_name LIKE 'collview%' ORDER BY 1;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  table_name |              view_definition               
 ------------+--------------------------------------------
  collview1  |  SELECT a,                                +
@@ -821,6 +857,7 @@
        mylt(a.b, b.b), mylt_noninline(a.b, b.b), mylt_plpgsql(a.b, b.b)
 FROM collate_test1 a, collate_test1 b
 ORDER BY a.b, b.b;
+INFO:  Path param info: 0.000000
   a  |  b  | lt | mylt | mylt_noninline | mylt_plpgsql 
 -----+-----+----+------+----------------+--------------
  abc | abc | f  | f    | f              | f
@@ -846,6 +883,7 @@
        mylt_plpgsql(a.b, b.b COLLATE "C")
 FROM collate_test1 a, collate_test1 b
 ORDER BY a.b, b.b;
+INFO:  Path param info: 0.000000
   a  |  b  | lt | mylt | mylt_noninline | mylt_plpgsql 
 -----+-----+----+------+----------------+--------------
  abc | abc | f  | f    | f              | f
@@ -1076,6 +1114,8 @@
     FROM pg_collation JOIN pg_namespace ON (collnamespace = pg_namespace.oid)
     WHERE collname LIKE 'test%'
     ORDER BY 1;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  collname |    nspname    | obj_description 
 ----------+---------------+-----------------
  test0    | collate_tests | US English
@@ -1126,12 +1166,32 @@
 drop cascades to view collate_dep_test3
 drop cascades to index collate_dep_test4i
 \d collate_dep_test1
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
       Table "collate_tests.collate_dep_test1"
  Column |  Type   | Collation | Nullable | Default 
 --------+---------+-----------+----------+---------
  a      | integer |           |          | 
 
 \d collate_dep_test2
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  Composite type "collate_tests.collate_dep_test2"
  Column |  Type   | Collation | Nullable | Default 
 --------+---------+-----------+----------+---------
diff -U3 /home/dbs/pg-queryplans/postgres/src/test/regress/expected/incremental_sort.out /home/dbs/pg-queryplans/postgres/src/test/regress/results/incremental_sort.out
--- /home/dbs/pg-queryplans/postgres/src/test/regress/expected/incremental_sort.out	2024-02-20 13:16:25.959611416 +0900
+++ /home/dbs/pg-queryplans/postgres/src/test/regress/results/incremental_sort.out	2024-02-20 16:07:33.184005714 +0900
@@ -698,6 +698,7 @@
 set local enable_material = off;
 set local enable_sort = off;
 explain (costs off) select * from t left join (select * from (select * from t order by a) v order by a, b) s on s.a = t.a where t.a in (1, 2);
+INFO:  Path param info: 0.000000
                    QUERY PLAN                   
 ------------------------------------------------
  Nested Loop Left Join
@@ -713,6 +714,7 @@
 (10 rows)
 
 select * from t left join (select * from (select * from t order by a) v order by a, b) s on s.a = t.a where t.a in (1, 2);
+INFO:  Path param info: 0.000000
  a | b | a | b 
 ---+---+---+---
  1 | 1 | 1 | 1
@@ -1510,6 +1512,9 @@
 -- Parallel sort below join.
 explain (costs off) select distinct sub.unique1, stringu1
 from tenk1, lateral (select tenk1.unique1 from generate_series(1, 1000)) as sub;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                 QUERY PLAN                                
 --------------------------------------------------------------------------
  Unique
@@ -1525,6 +1530,9 @@
 explain (costs off) select sub.unique1, stringu1
 from tenk1, lateral (select tenk1.unique1 from generate_series(1, 1000)) as sub
 order by 1, 2;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                              QUERY PLAN                             
 --------------------------------------------------------------------
  Nested Loop
@@ -1539,6 +1547,9 @@
 -- Parallel sort but with expression that can be safely generated at the base rel.
 explain (costs off) select distinct sub.unique1, md5(stringu1)
 from tenk1, lateral (select tenk1.unique1 from generate_series(1, 1000)) as sub;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                        QUERY PLAN                                       
 ----------------------------------------------------------------------------------------
  Unique
@@ -1554,6 +1565,9 @@
 explain (costs off) select sub.unique1, md5(stringu1)
 from tenk1, lateral (select tenk1.unique1 from generate_series(1, 1000)) as sub
 order by 1, 2;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                     QUERY PLAN                                    
 ----------------------------------------------------------------------------------
  Nested Loop
@@ -1572,6 +1586,12 @@
 join tenk1 t2 on t1.unique1 = t2.unique2
 join tenk1 t3 on t2.unique1 = t3.unique1
 order by count(*);
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                           QUERY PLAN                                           
 -----------------------------------------------------------------------------------------------
  Sort
@@ -1597,6 +1617,8 @@
   unique1,
   (select t.unique1 from tenk1 where tenk1.unique1 = t.unique1)
 from tenk1 t, generate_series(1, 1000);
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                    QUERY PLAN                                    
 ---------------------------------------------------------------------------------
  Unique
@@ -1617,6 +1639,8 @@
   (select t.unique1 from tenk1 where tenk1.unique1 = t.unique1)
 from tenk1 t, generate_series(1, 1000)
 order by 1, 2;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                 QUERY PLAN                                 
 ---------------------------------------------------------------------------
  Sort
@@ -1634,6 +1658,8 @@
 -- Parallel sort but with expression not available until the upper rel.
 explain (costs off) select distinct sub.unique1, stringu1 || random()::text
 from tenk1, lateral (select tenk1.unique1 from generate_series(1, 1000)) as sub;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                          QUERY PLAN                                          
 ---------------------------------------------------------------------------------------------
  Unique
@@ -1649,6 +1675,8 @@
 explain (costs off) select sub.unique1, stringu1 || random()::text
 from tenk1, lateral (select tenk1.unique1 from generate_series(1, 1000)) as sub
 order by 1, 2;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                       QUERY PLAN                                       
 ---------------------------------------------------------------------------------------
  Sort
diff -U3 /home/dbs/pg-queryplans/postgres/src/test/regress/expected/rules.out /home/dbs/pg-queryplans/postgres/src/test/regress/results/rules.out
--- /home/dbs/pg-queryplans/postgres/src/test/regress/expected/rules.out	2024-02-20 13:16:25.971611203 +0900
+++ /home/dbs/pg-queryplans/postgres/src/test/regress/results/rules.out	2024-02-20 16:07:33.356003204 +0900
@@ -151,6 +151,7 @@
 
 -- delete with constant expression
 delete from rtest_v1 where a = 1;
+INFO:  Path param info: 0.000000
 select * from rtest_v1;
  a | b  
 ---+----
@@ -159,6 +160,7 @@
 
 insert into rtest_v1 values (1, 11);
 delete from rtest_v1 where b = 12;
+INFO:  Path param info: 0.000000
 select * from rtest_v1;
  a | b  
 ---+----
@@ -184,6 +186,7 @@
 ** So this time both rows with a = 2 must get deleted
 \r
 delete from rtest_v1 where b = 12;
+INFO:  Path param info: 0.000000
 select * from rtest_v1;
  a | b  
 ---+----
@@ -191,6 +194,7 @@
 (1 row)
 
 delete from rtest_v1;
+INFO:  Path param info: 0.000000
 -- insert select
 insert into rtest_v1 select * from rtest_t2;
 select * from rtest_v1;
@@ -202,6 +206,7 @@
 (3 rows)
 
 delete from rtest_v1;
+INFO:  Path param info: 0.000000
 -- same with swapped targetlist
 insert into rtest_v1 (b, a) select b, a from rtest_t2;
 select * from rtest_v1;
@@ -240,6 +245,7 @@
 -- let attribute a differ (must be done on rtest_t1 - see above)
 update rtest_t1 set a = a + 10 where b isnull;
 delete from rtest_v1 where b isnull;
+INFO:  Path param info: 0.000000
 select * from rtest_v1;
  a | b  
 ---+----
@@ -250,6 +256,7 @@
 
 -- now updates with constant expression
 update rtest_v1 set b = 42 where a = 2;
+INFO:  Path param info: 0.000000
 select * from rtest_v1;
  a | b  
 ---+----
@@ -259,6 +266,7 @@
 (3 rows)
 
 update rtest_v1 set b = 99 where b = 42;
+INFO:  Path param info: 0.000000
 select * from rtest_v1;
  a | b  
 ---+----
@@ -268,6 +276,7 @@
 (3 rows)
 
 update rtest_v1 set b = 88 where b < 50;
+INFO:  Path param info: 0.000000
 select * from rtest_v1;
  a | b  
 ---+----
@@ -277,9 +286,11 @@
 (3 rows)
 
 delete from rtest_v1;
+INFO:  Path param info: 0.000000
 insert into rtest_v1 select rtest_t2.a, rtest_t3.b
     from rtest_t2, rtest_t3
     where rtest_t2.a = rtest_t3.a;
+INFO:  Path param info: 0.000000
 select * from rtest_v1;
  a | b  
 ---+----
@@ -290,6 +301,10 @@
 
 -- updates in a mergejoin
 update rtest_v1 set b = rtest_t2.b from rtest_t2 where rtest_v1.a = rtest_t2.a;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
 select * from rtest_v1;
  a | b  
 ---+----
@@ -327,6 +342,9 @@
 (8 rows)
 
 update rtest_v1 set a = rtest_t3.a + 20 from rtest_t3 where rtest_v1.b = rtest_t3.b;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
 select * from rtest_v1;
  a  | b  
 ----+----
@@ -356,6 +374,8 @@
 insert into rtest_admin values ('jw', 'notjw');
 insert into rtest_admin values ('bm', 'neptun');
 update rtest_system set sysname = 'pluto' where sysname = 'neptun';
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
 select * from rtest_interface;
  sysname | ifname 
 ---------+--------
@@ -374,6 +394,7 @@
 (3 rows)
 
 update rtest_person set pname = 'jwieck' where pdesc = 'Jan Wieck';
+INFO:  Path param info: 0.000000
 -- Note: use ORDER BY here to ensure consistent output across all systems.
 -- The above UPDATE affects two rows with equal keys, so they could be
 -- updated in either order depending on the whim of the local qsort().
@@ -386,6 +407,8 @@
 (3 rows)
 
 delete from rtest_system where sysname = 'orion';
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
 select * from rtest_interface;
  sysname | ifname 
 ---------+--------
@@ -438,6 +461,8 @@
 
 update rtest_empmass set salary = salary + '1000.00';
 update rtest_emp set salary = rtest_empmass.salary from rtest_empmass where rtest_emp.ename = rtest_empmass.ename;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
 select ename, who = current_user as "matches user", action, newsal, oldsal from rtest_emplog order by ename, action, newsal;
         ename         | matches user |   action   |   newsal   |   oldsal   
 ----------------------+--------------+------------+------------+------------
@@ -455,6 +480,8 @@
 (11 rows)
 
 delete from rtest_emp using rtest_empmass where rtest_emp.ename = rtest_empmass.ename;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
 select ename, who = current_user as "matches user", action, newsal, oldsal from rtest_emplog order by ename, action, newsal;
         ename         | matches user |   action   |   newsal   |   oldsal   
 ----------------------+--------------+------------+------------+------------
@@ -812,6 +839,7 @@
 (3 rows)
 
 select * from rtest_vview4 order by a, b;
+INFO:  Path param info: 0.000000
  a |   b    | refcount 
 ---+--------+----------
  2 | item 2 |        2
@@ -865,6 +893,7 @@
 
 delete from rtest_view3;
 insert into rtest_view4 select * from rtest_vview4 where 3 > refcount;
+INFO:  Path param info: 0.000000
 select * from rtest_view4 order by a, b;
  a |   b    | c 
 ---+--------+---
@@ -910,6 +939,7 @@
 insert into rtest_comp values ('p5', 'inch', 7.0);
 insert into rtest_comp values ('p6', 'inch', 4.4);
 select * from rtest_vcomp order by part;
+INFO:  Path param info: 0.000000
  part |     size_in_cm     
 ------+--------------------
  p1   |                500
@@ -921,6 +951,7 @@
 (6 rows)
 
 select * from rtest_vcomp where size_in_cm > 10.0 order by size_in_cm using >;
+INFO:  Path param info: 0.000000
  part |     size_in_cm     
 ------+--------------------
  p1   |                500
@@ -1000,6 +1031,7 @@
 INSERT INTO shoelace_data VALUES ('sl8', 1, 'brown', 40 , 'inch');
 -- SELECTs in doc
 SELECT * FROM shoelace ORDER BY sl_name;
+INFO:  Path param info: 0.000000
   sl_name   | sl_avail |  sl_color  | sl_len | sl_unit  | sl_len_cm 
 ------------+----------+------------+--------+----------+-----------
  sl1        |        5 | black      |     80 | cm       |        80
@@ -1013,6 +1045,17 @@
 (8 rows)
 
 SELECT * FROM shoe_ready WHERE total_avail >= 2 ORDER BY 1;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
   shoename  | sh_avail |  sl_name   | sl_avail | total_avail 
 ------------+----------+------------+----------+-------------
  sh1        |        2 | sl1        |        5 |           2
@@ -1081,6 +1124,7 @@
 INSERT INTO shoelace_arrive VALUES ('sl6', 20);
 INSERT INTO shoelace_arrive VALUES ('sl8', 20);
 SELECT * FROM shoelace ORDER BY sl_name;
+INFO:  Path param info: 0.000000
   sl_name   | sl_avail |  sl_color  | sl_len | sl_unit  | sl_len_cm 
 ------------+----------+------------+--------+----------+-----------
  sl1        |        5 | black      |     80 | cm       |        80
@@ -1094,7 +1138,34 @@
 (8 rows)
 
 insert into shoelace_ok select * from shoelace_arrive;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
 SELECT * FROM shoelace ORDER BY sl_name;
+INFO:  Path param info: 0.000000
   sl_name   | sl_avail |  sl_color  | sl_len | sl_unit  | sl_len_cm 
 ------------+----------+------------+--------+----------+-----------
  sl1        |        5 | black      |     80 | cm       |        80
@@ -1128,6 +1199,10 @@
   on conflict do nothing;
 ERROR:  INSERT with ON CONFLICT clause cannot be used with table that has INSERT or UPDATE rules
 SELECT * FROM shoelace_obsolete ORDER BY sl_len_cm;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
   sl_name   | sl_avail |  sl_color  | sl_len | sl_unit  | sl_len_cm 
 ------------+----------+------------+--------+----------+-----------
  sl9        |        0 | pink       |     35 | inch     |      88.9
@@ -1135,6 +1210,10 @@
 (2 rows)
 
 SELECT * FROM shoelace_candelete;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
   sl_name   | sl_avail |  sl_color  | sl_len | sl_unit  | sl_len_cm 
 ------------+----------+------------+--------+----------+-----------
  sl9        |        0 | pink       |     35 | inch     |      88.9
@@ -1143,7 +1222,25 @@
 DELETE FROM shoelace WHERE EXISTS
     (SELECT * FROM shoelace_candelete
              WHERE sl_name = shoelace.sl_name);
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
 SELECT * FROM shoelace ORDER BY sl_name;
+INFO:  Path param info: 0.000000
   sl_name   | sl_avail |  sl_color  | sl_len | sl_unit  | sl_len_cm 
 ------------+----------+------------+--------+----------+-----------
  sl1        |        5 | black      |     80 | cm       |        80
@@ -1158,6 +1255,7 @@
 (9 rows)
 
 SELECT * FROM shoe ORDER BY shoename;
+INFO:  Path param info: 0.000000
   shoename  | sh_avail |  slcolor   | slminlen | slminlen_cm | slmaxlen | slmaxlen_cm |  slunit  
 ------------+----------+------------+----------+-------------+----------+-------------+----------
  sh1        |        2 | black      |       70 |          70 |       90 |          90 | cm      
@@ -1167,6 +1265,7 @@
 (4 rows)
 
 SELECT count(*) FROM shoe;
+INFO:  Path param info: 0.000000
  count 
 -------
      4
@@ -1237,6 +1336,7 @@
   update cchild set descrip = new.descrip where cchild.pid = old.pid;
 );
 select * from vview;
+INFO:  Path param info: 0.000000
  pid |   txt   | descrip  
 -----+---------+----------
    1 | parent1 | descrip1
@@ -1244,7 +1344,12 @@
 (2 rows)
 
 update vview set descrip='test1' where pid=1;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
 select * from vview;
+INFO:  Path param info: 0.000000
  pid |   txt   | descrip 
 -----+---------+---------
    1 | parent1 | test1
@@ -1252,7 +1357,12 @@
 (2 rows)
 
 update vview set descrip='test2' where pid=2;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
 select * from vview;
+INFO:  Path param info: 0.000000
  pid |   txt   | descrip 
 -----+---------+---------
    1 | parent1 | test1
@@ -1260,7 +1370,12 @@
 (2 rows)
 
 update vview set descrip='test3' where pid=3;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
 select * from vview;
+INFO:  Path param info: 0.000000
  pid |   txt   | descrip 
 -----+---------+---------
    1 | parent1 | test1
@@ -1286,6 +1401,8 @@
 SELECT viewname, definition FROM pg_views
 WHERE schemaname = 'pg_catalog'
 ORDER BY viewname;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
 pg_available_extension_versions| SELECT e.name,
     e.version,
     (x.extname IS NOT NULL) AS installed,
@@ -2632,6 +2749,13 @@
 SELECT tablename, rulename, definition FROM pg_rules
 WHERE schemaname = 'pg_catalog'
 ORDER BY tablename, rulename;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
 pg_settings|pg_settings_n|CREATE RULE pg_settings_n AS
     ON UPDATE TO pg_catalog.pg_settings DO INSTEAD NOTHING;
 pg_settings|pg_settings_u|CREATE RULE pg_settings_u AS
@@ -2789,8 +2913,11 @@
 (6 rows)
 
 update id_ordered set name = 'update 2' where id = 2;
+INFO:  Path param info: 0.000000
 update id_ordered set name = 'update 4' where id = 4;
+INFO:  Path param info: 0.000000
 update id_ordered set name = 'update 5' where id = 5;
+INFO:  Path param info: 0.000000
 select * from id_ordered;
  id |   name   
 ----+----------
@@ -2834,6 +2961,8 @@
 set constraint_exclusion = on;
 insert into t1 select * from generate_series(5,19,1) g;
 update t1 set a = 4 where a = 5;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
 select * from only t1;
  a 
 ---
@@ -2948,7 +3077,9 @@
 create rule r1 as on update to rules_src do also
   insert into rules_log values(old.*, 'old', default), (new.*, 'new', default);
 update rules_src set f2 = f2 + 1;
+INFO:  Path param info: 0.000000
 update rules_src set f2 = f2 * 10;
+INFO:  Path param info: 0.000000
 select * from rules_src;
  f1 | f2  
 ----+-----
@@ -2972,6 +3103,8 @@
 create rule r2 as on update to rules_src do also
   values(old.*, 'old'), (new.*, 'new');
 update rules_src set f2 = f2 / 10;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  column1 | column2 | column3 
 ---------+---------+---------
        1 |      30 | old
@@ -2983,6 +3116,7 @@
 create rule r3 as on insert to rules_src do also
   insert into rules_log values(null, null, '-', default), (new.*, 'new', default);
 insert into rules_src values(22,23), (33,default);
+INFO:  Path param info: 0.000000
 select * from rules_src;
  f1 | f2 
 ----+----
@@ -3030,6 +3164,25 @@
   returning trgt.f1, trgt.f2;
 -- check display of all rules added above
 \d+ rules_src
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                  Table "public.rules_src"
  Column |  Type   | Collation | Nullable | Default | Storage | Stats target | Description 
 --------+---------+-----------+----------+---------+---------+--------------+-------------
@@ -3083,6 +3236,25 @@
   SET (f2[1], f1, tag) = (SELECT new.f2, new.f1, 'updated'::varchar)
   WHERE trgt.f1 = new.f1 RETURNING new.*;
 \d+ rule_t1
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                   Table "public.rule_t1"
  Column |  Type   | Collation | Nullable | Default | Storage | Stats target | Description 
 --------+---------+-----------+----------+---------+---------+--------------+-------------
@@ -3111,7 +3283,12 @@
   SET c = tt.a * 10
   FROM (SELECT a FROM rule_t1 WHERE a = OLD.a) tt WHERE t.a = tt.a;
 INSERT INTO rule_v1 VALUES (1, 'a'), (2, 'b');
+INFO:  Path param info: 0.000000
 UPDATE rule_v1 SET b = upper(b);
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
 SELECT * FROM rule_t1;
  a  |  b  |  c  
 ----+-----+-----
@@ -3141,6 +3318,11 @@
 (1 row)
 
 \d+ rule_v1
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                            View "public.rule_v1"
  Column |  Type   | Collation | Nullable | Default | Storage | Description 
 --------+---------+-----------+----------+---------+---------+-------------
@@ -3169,6 +3351,11 @@
 --
 create view rule_v1 as values(1,2);
 \d+ rule_v1
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                            View "public.rule_v1"
  Column  |  Type   | Collation | Nullable | Default | Storage | Description 
 ---------+---------+-----------+----------+---------+---------+-------------
@@ -3179,6 +3366,11 @@
 
 alter table rule_v1 rename column column2 to q2;
 \d+ rule_v1
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                            View "public.rule_v1"
  Column  |  Type   | Collation | Nullable | Default | Storage | Description 
 ---------+---------+-----------+----------+---------+---------+-------------
@@ -3192,6 +3384,11 @@
 drop view rule_v1;
 create view rule_v1(x) as values(1,2);
 \d+ rule_v1
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                            View "public.rule_v1"
  Column  |  Type   | Collation | Nullable | Default | Storage | Description 
 ---------+---------+-----------+----------+---------+---------+-------------
@@ -3205,6 +3402,11 @@
 drop view rule_v1;
 create view rule_v1(x) as select * from (values(1,2)) v;
 \d+ rule_v1
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                            View "public.rule_v1"
  Column  |  Type   | Collation | Nullable | Default | Storage | Description 
 ---------+---------+-----------+----------+---------+---------+-------------
@@ -3218,6 +3420,11 @@
 drop view rule_v1;
 create view rule_v1(x) as select * from (values(1,2)) v(q,w);
 \d+ rule_v1
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                            View "public.rule_v1"
  Column |  Type   | Collation | Nullable | Default | Storage | Description 
 --------+---------+-----------+----------+---------+---------+-------------
@@ -3252,6 +3459,7 @@
         DO NOTHING
         RETURNING *;
 SELECT definition FROM pg_rules WHERE tablename = 'hats' ORDER BY rulename;
+INFO:  Path param info: 0.000000
                                          definition                                          
 ---------------------------------------------------------------------------------------------
  CREATE RULE hat_nosert AS                                                                  +
@@ -3277,6 +3485,7 @@
 
 SELECT tablename, rulename, definition FROM pg_rules
 	WHERE tablename = 'hats';
+INFO:  Path param info: 0.000000
  tablename |  rulename  |                                         definition                                          
 -----------+------------+---------------------------------------------------------------------------------------------
  hats      | hat_nosert | CREATE RULE hat_nosert AS                                                                  +
@@ -3298,6 +3507,7 @@
         DO NOTHING
         RETURNING *;
 SELECT definition FROM pg_rules WHERE tablename = 'hats' ORDER BY rulename;
+INFO:  Path param info: 0.000000
                                      definition                                      
 -------------------------------------------------------------------------------------
  CREATE RULE hat_nosert_all AS                                                      +
@@ -3327,6 +3537,7 @@
            WHERE excluded.hat_color <>  'forbidden' AND hat_data.* != excluded.*
         RETURNING *;
 SELECT definition FROM pg_rules WHERE tablename = 'hats' ORDER BY rulename;
+INFO:  Path param info: 0.000000
                                                                definition                                                                
 -----------------------------------------------------------------------------------------------------------------------------------------
  CREATE RULE hat_upsert AS                                                                                                              +
@@ -3375,6 +3586,7 @@
 
 SELECT tablename, rulename, definition FROM pg_rules
 	WHERE tablename = 'hats';
+INFO:  Path param info: 0.000000
  tablename |  rulename  |                                                               definition                                                                
 -----------+------------+-----------------------------------------------------------------------------------------------------------------------------------------
  hats      | hat_upsert | CREATE RULE hat_upsert AS                                                                                                              +
@@ -3587,6 +3799,7 @@
 		DELETE
 	WHEN NOT MATCHED THEN
 		INSERT VALUES (s.a, '');
+INFO:  Path param info: 0.000000
 -- test deparsing
 CREATE TABLE sf_target(id int, data text, filling int[]);
 CREATE FUNCTION merge_sf_test()
@@ -3731,6 +3944,7 @@
 ALTER TABLE ruletest_t1 OWNER TO regress_rule_user1;
 SET SESSION AUTHORIZATION regress_rule_user1;
 UPDATE ruletest_t1 t1 SET x = 0 FROM ruletest_t3 t3 WHERE t1.x = t3.x;
+INFO:  Path param info: 0.000000
 ERROR:  permission denied for table ruletest_t3
 RESET SESSION AUTHORIZATION;
 SELECT * FROM ruletest_t1;
diff -U3 /home/dbs/pg-queryplans/postgres/src/test/regress/expected/psql.out /home/dbs/pg-queryplans/postgres/src/test/regress/results/psql.out
--- /home/dbs/pg-queryplans/postgres/src/test/regress/expected/psql.out	2024-02-20 13:16:25.971611203 +0900
+++ /home/dbs/pg-queryplans/postgres/src/test/regress/results/psql.out	2024-02-20 16:07:33.384002795 +0900
@@ -2726,6 +2726,26 @@
 \pset format aligned
 \pset expanded off
 \d psql_serial_tab_id_seq
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                Sequence "public.psql_serial_tab_id_seq"
   Type   | Start | Minimum |  Maximum   | Increment | Cycles? | Cache 
 ---------+-------+---------+------------+-----------+---------+-------
@@ -2734,12 +2754,33 @@
 
 \pset tuples_only true
 \df exp
+INFO:  Path param info: 0.000000
  pg_catalog | exp  | double precision | double precision    | func
  pg_catalog | exp  | numeric          | numeric             | func
 
 \pset tuples_only false
 \pset expanded on
 \d psql_serial_tab_id_seq
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
 Sequence "public.psql_serial_tab_id_seq"
 -[ RECORD 1 ]---------
 Type      | integer
@@ -2754,6 +2795,7 @@
 
 \pset tuples_only true
 \df exp
+INFO:  Path param info: 0.000000
 Schema              | pg_catalog
 Name                | exp
 Result data type    | double precision
@@ -2774,17 +2816,58 @@
 \pset format unaligned
 \pset expanded off
 \d psql_serial_tab_id_seq
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
 Sequence "public.psql_serial_tab_id_seq"
 Type|Start|Minimum|Maximum|Increment|Cycles?|Cache
 integer|1|1|2147483647|1|no|1
 Owned by: public.psql_serial_tab.id
 \pset tuples_only true
 \df exp
+INFO:  Path param info: 0.000000
 pg_catalog|exp|double precision|double precision|func
 pg_catalog|exp|numeric|numeric|func
 \pset tuples_only false
 \pset expanded on
 \d psql_serial_tab_id_seq
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
 Sequence "public.psql_serial_tab_id_seq"
 
 Type|integer
@@ -2798,6 +2881,7 @@
 Owned by: public.psql_serial_tab.id
 \pset tuples_only true
 \df exp
+INFO:  Path param info: 0.000000
 Schema|pg_catalog
 Name|exp
 Result data type|double precision
@@ -2813,6 +2897,26 @@
 \pset format wrapped
 \pset expanded off
 \d psql_serial_tab_id_seq
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                Sequence "public.psql_serial_tab_id_seq"
   Type   | Start | Minimum |  Maximum   | Increment | Cycles? | Cache 
 ---------+-------+---------+------------+-----------+---------+-------
@@ -2821,12 +2925,33 @@
 
 \pset tuples_only true
 \df exp
+INFO:  Path param info: 0.000000
  pg_catalog | exp  | double precision | double precision    | func
  pg_catalog | exp  | numeric          | numeric             | func
 
 \pset tuples_only false
 \pset expanded on
 \d psql_serial_tab_id_seq
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
 Sequence "public.psql_serial_tab_id_seq"
 -[ RECORD 1 ]---------
 Type      | integer
@@ -2841,6 +2966,7 @@
 
 \pset tuples_only true
 \df exp
+INFO:  Path param info: 0.000000
 Schema              | pg_catalog
 Name                | exp
 Result data type    | double precision
@@ -2868,6 +2994,25 @@
 CREATE VIEW view_heap_psql AS SELECT f1 from tbl_heap_psql;
 CREATE MATERIALIZED VIEW mat_view_heap_psql USING heap_psql AS SELECT f1 from tbl_heap_psql;
 \d+ tbl_heap_psql
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                               Table "tableam_display.tbl_heap_psql"
  Column |      Type      | Collation | Nullable | Default | Storage  | Stats target | Description 
 --------+----------------+-----------+----------+---------+----------+--------------+-------------
@@ -2875,6 +3020,25 @@
  f2     | character(100) |           |          |         | extended |              | 
 
 \d+ tbl_heap
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                  Table "tableam_display.tbl_heap"
  Column |      Type      | Collation | Nullable | Default | Storage  | Stats target | Description 
 --------+----------------+-----------+----------+---------+----------+--------------+-------------
@@ -2883,6 +3047,25 @@
 
 \set HIDE_TABLEAM off
 \d+ tbl_heap_psql
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                               Table "tableam_display.tbl_heap_psql"
  Column |      Type      | Collation | Nullable | Default | Storage  | Stats target | Description 
 --------+----------------+-----------+----------+---------+----------+--------------+-------------
@@ -2891,6 +3074,25 @@
 Access method: heap_psql
 
 \d+ tbl_heap
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                  Table "tableam_display.tbl_heap"
  Column |      Type      | Collation | Nullable | Default | Storage  | Stats target | Description 
 --------+----------------+-----------+----------+---------+----------+--------------+-------------
@@ -2900,6 +3102,11 @@
 
 -- AM is displayed for tables, indexes and materialized views.
 \d+
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                                            List of relations
      Schema      |        Name        |       Type        |        Owner         | Persistence | Access method |  Size   | Description 
 -----------------+--------------------+-------------------+----------------------+-------------+---------------+---------+-------------
@@ -2910,6 +3117,11 @@
 (4 rows)
 
 \dt+
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                                   List of relations
      Schema      |     Name      | Type  |        Owner         | Persistence | Access method |  Size   | Description 
 -----------------+---------------+-------+----------------------+-------------+---------------+---------+-------------
@@ -2918,6 +3130,11 @@
 (2 rows)
 
 \dm+
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                                            List of relations
      Schema      |        Name        |       Type        |        Owner         | Persistence | Access method |  Size   | Description 
 -----------------+--------------------+-------------------+----------------------+-------------+---------------+---------+-------------
@@ -2926,6 +3143,8 @@
 
 -- But not for views and sequences.
 \dv+
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                           List of relations
      Schema      |      Name      | Type |        Owner         | Persistence |  Size   | Description 
 -----------------+----------------+------+----------------------+-------------+---------+-------------
@@ -2934,6 +3153,8 @@
 
 \set HIDE_TABLEAM on
 \d+
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                                    List of relations
      Schema      |        Name        |       Type        |        Owner         | Persistence |  Size   | Description 
 -----------------+--------------------+-------------------+----------------------+-------------+---------+-------------
@@ -2973,6 +3194,26 @@
 \pset border 1
 \pset expanded off
 \d psql_serial_tab_id_seq
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
 
 .Sequence "public.psql_serial_tab_id_seq"
 [options="header",cols="<l,>l,>l,>l,>l,<l,>l",frame="none"]
@@ -2986,6 +3227,7 @@
 ....
 \pset tuples_only true
 \df exp
+INFO:  Path param info: 0.000000
 
 [cols="<l,<l,<l,<l,<l",frame="none"]
 |====
@@ -2995,6 +3237,26 @@
 \pset tuples_only false
 \pset expanded on
 \d psql_serial_tab_id_seq
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
 
 .Sequence "public.psql_serial_tab_id_seq"
 [cols="h,l",frame="none"]
@@ -3014,6 +3276,7 @@
 ....
 \pset tuples_only true
 \df exp
+INFO:  Path param info: 0.000000
 
 [cols="h,l",frame="none"]
 |====
@@ -3123,15 +3386,56 @@
 \pset border 1
 \pset expanded off
 \d psql_serial_tab_id_seq
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
 Type,Start,Minimum,Maximum,Increment,Cycles?,Cache
 integer,1,1,2147483647,1,no,1
 \pset tuples_only true
 \df exp
+INFO:  Path param info: 0.000000
 pg_catalog,exp,double precision,double precision,func
 pg_catalog,exp,numeric,numeric,func
 \pset tuples_only false
 \pset expanded on
 \d psql_serial_tab_id_seq
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
 Type,integer
 Start,1
 Minimum,1
@@ -3141,6 +3445,7 @@
 Cache,1
 \pset tuples_only true
 \df exp
+INFO:  Path param info: 0.000000
 Schema,pg_catalog
 Name,exp
 Result data type,double precision
@@ -3211,6 +3516,26 @@
 \pset border 1
 \pset expanded off
 \d psql_serial_tab_id_seq
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
 <table border="1">
   <caption>Sequence &quot;public.psql_serial_tab_id_seq&quot;</caption>
   <tr>
@@ -3236,6 +3561,7 @@
 </p>
 \pset tuples_only true
 \df exp
+INFO:  Path param info: 0.000000
 <table border="1">
   <tr valign="top">
     <td align="left">pg_catalog</td>
@@ -3256,6 +3582,26 @@
 \pset tuples_only false
 \pset expanded on
 \d psql_serial_tab_id_seq
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
 <table border="1">
   <caption>Sequence &quot;public.psql_serial_tab_id_seq&quot;</caption>
 
@@ -3293,6 +3639,7 @@
 </p>
 \pset tuples_only true
 \df exp
+INFO:  Path param info: 0.000000
 <table border="1">
 
   <tr><td colspan="2">&nbsp;</td></tr>
@@ -3562,6 +3909,26 @@
 \pset border 1
 \pset expanded off
 \d psql_serial_tab_id_seq
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
 \begin{center}
 Sequence "public.psql\_serial\_tab\_id\_seq"
 \end{center}
@@ -3576,6 +3943,7 @@
 
 \pset tuples_only true
 \df exp
+INFO:  Path param info: 0.000000
 \begin{tabular}{l | l | l | l | l}
 pg\_catalog & exp & double precision & double precision & func \\
 pg\_catalog & exp & numeric & numeric & func \\
@@ -3585,6 +3953,26 @@
 \pset tuples_only false
 \pset expanded on
 \d psql_serial_tab_id_seq
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
 \begin{center}
 Sequence "public.psql\_serial\_tab\_id\_seq"
 \end{center}
@@ -3605,6 +3993,7 @@
 
 \pset tuples_only true
 \df exp
+INFO:  Path param info: 0.000000
 \begin{tabular}{c|l}
 \hline
 Schema & pg\_catalog \\
@@ -3759,6 +4148,26 @@
 \pset border 1
 \pset expanded off
 \d psql_serial_tab_id_seq
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
 \begin{longtable}{l | r | r | r | r | l | r}
 \small\textbf{\textit{Type}} & \small\textbf{\textit{Start}} & \small\textbf{\textit{Minimum}} & \small\textbf{\textit{Maximum}} & \small\textbf{\textit{Increment}} & \small\textbf{\textit{Cycles?}} & \small\textbf{\textit{Cache}} \\
 \midrule
@@ -3786,6 +4195,7 @@
 \end{longtable}
 \pset tuples_only true
 \df exp
+INFO:  Path param info: 0.000000
 \begin{longtable}{l | l | l | l | l}
 \raggedright{pg\_catalog}
 &
@@ -3809,6 +4219,26 @@
 \pset tuples_only false
 \pset expanded on
 \d psql_serial_tab_id_seq
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
 \begin{center}
 Sequence "public.psql\_serial\_tab\_id\_seq"
 \end{center}
@@ -3829,6 +4259,7 @@
 
 \pset tuples_only true
 \df exp
+INFO:  Path param info: 0.000000
 \begin{tabular}{c|l}
 \hline
 Schema & pg\_catalog \\
@@ -4097,6 +4528,26 @@
 \pset border 1
 \pset expanded off
 \d psql_serial_tab_id_seq
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
 .LP
 .DS C
 Sequence "public.psql_serial_tab_id_seq"
@@ -4114,6 +4565,7 @@
 .DE
 \pset tuples_only true
 \df exp
+INFO:  Path param info: 0.000000
 .LP
 .TS
 center;
@@ -4126,6 +4578,26 @@
 \pset tuples_only false
 \pset expanded on
 \d psql_serial_tab_id_seq
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
 .LP
 .DS C
 Sequence "public.psql_serial_tab_id_seq"
@@ -4151,6 +4623,7 @@
 .DE
 \pset tuples_only true
 \df exp
+INFO:  Path param info: 0.000000
 .LP
 .TS
 center;
@@ -4823,6 +5296,27 @@
 create index testpart_orange_index on testpart_orange(logdate);
 -- only partition related object should be displayed
 \dP test*apple*
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                          List of partitioned relations
   Schema  |         Name         |           Owner           |       Type        | Parent name |     Table      
 ----------+----------------------+---------------------------+-------------------+-------------+----------------
@@ -4831,6 +5325,10 @@
 (2 rows)
 
 \dPt test*apple*
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                      List of partitioned tables
   Schema  |      Name      |           Owner           | Parent name 
 ----------+----------------+---------------------------+-------------
@@ -4838,6 +5336,27 @@
 (1 row)
 
 \dPi test*apple*
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                 List of partitioned indexes
   Schema  |         Name         |           Owner           | Parent name |     Table      
 ----------+----------------------+---------------------------+-------------+----------------
@@ -4866,6 +5385,8 @@
    for values from (35) to (40);
 insert into parent_tab values (generate_series(30,39));
 \dPt
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
             List of partitioned tables
   Schema  |    Name    |           Owner           
 ----------+------------+---------------------------
@@ -4873,6 +5394,18 @@
 (1 row)
 
 \dPi
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                    List of partitioned indexes
   Schema  |     Name     |           Owner           |   Table    
 ----------+--------------+---------------------------+------------
@@ -4880,6 +5413,33 @@
 (1 row)
 
 \dP testpart.*
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                        List of partitioned relations
   Schema  |        Name        |           Owner           |       Type        | Parent name  |    Table    
 ----------+--------------------+---------------------------+-------------------+--------------+-------------
@@ -4890,6 +5450,18 @@
 (4 rows)
 
 \dP
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                             List of partitioned relations
   Schema  |     Name     |           Owner           |       Type        |   Table    
 ----------+--------------+---------------------------+-------------------+------------
@@ -4898,6 +5470,12 @@
 (2 rows)
 
 \dPtn
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                     List of partitioned tables
   Schema  |    Name     |           Owner           | Parent name 
 ----------+-------------+---------------------------+-------------
@@ -4906,6 +5484,33 @@
 (2 rows)
 
 \dPin
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                               List of partitioned indexes
   Schema  |        Name        |           Owner           | Parent name  |    Table    
 ----------+--------------------+---------------------------+--------------+-------------
@@ -4914,6 +5519,33 @@
 (2 rows)
 
 \dPn
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                        List of partitioned relations
   Schema  |        Name        |           Owner           |       Type        | Parent name  |    Table    
 ----------+--------------------+---------------------------+-------------------+--------------+-------------
@@ -4924,6 +5556,33 @@
 (4 rows)
 
 \dPn testpart.*
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                        List of partitioned relations
   Schema  |        Name        |           Owner           |       Type        | Parent name  |    Table    
 ----------+--------------------+---------------------------+-------------------+--------------+-------------
@@ -4940,6 +5599,36 @@
 drop role regress_partitioning_role;
 -- \d on toast table (use pg_statistic's toast table, which has a known name)
 \d pg_toast.pg_toast_2619
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
 TOAST table "pg_toast.pg_toast_2619"
    Column   |  Type   
 ------------+---------
@@ -5045,6 +5734,30 @@
 (0 rows)
 
 \dAc brin pg*.oid*
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                       List of operator classes
   AM  | Input type | Storage type |    Operator class    | Default? 
 ------+------------+--------------+----------------------+----------
@@ -5054,6 +5767,12 @@
 (3 rows)
 
 \dAf spgist
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
           List of operator families
    AM   | Operator family | Applicable types 
 --------+-----------------+------------------
@@ -5067,6 +5786,24 @@
 (7 rows)
 
 \dAf btree int4
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
               List of operator families
   AM   | Operator family |     Applicable types      
 -------+-----------------+---------------------------
@@ -5074,6 +5811,43 @@
 (1 row)
 
 \dAo+ btree float_ops
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                 List of operators of operator families
   AM   | Operator family |               Operator                | Strategy | Purpose | Sort opfamily 
 -------+-----------------+---------------------------------------+----------+---------+---------------
@@ -5100,6 +5874,15 @@
 (20 rows)
 
 \dAo * pg_catalog.jsonb_path_ops
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
              List of operators of operator families
  AM  | Operator family |      Operator      | Strategy | Purpose 
 -----+-----------------+--------------------+----------+---------
@@ -5109,6 +5892,23 @@
 (3 rows)
 
 \dAp+ btree float_ops
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                                          List of support functions of operator families
   AM   | Operator family | Registered left type | Registered right type | Number |                                   Function                                   
 -------+-----------------+----------------------+-----------------------+--------+------------------------------------------------------------------------------
@@ -5123,6 +5923,27 @@
 (8 rows)
 
 \dAp * pg_catalog.uuid_ops
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                             List of support functions of operator families
   AM   | Operator family | Registered left type | Registered right type | Number |      Function      
 -------+-----------------+----------------------+-----------------------+--------+--------------------
@@ -5143,6 +5964,7 @@
 (1 row)
 
 \dconfig+ work*
+INFO:  Path param info: 0.000000
              List of configuration parameters
  Parameter | Value |  Type   | Context | Access privileges 
 -----------+-------+---------+---------+-------------------
@@ -5152,6 +5974,7 @@
 reset work_mem;
 -- check \df, \do with argument specifications
 \df *sqrt
+INFO:  Path param info: 0.000000
                              List of functions
    Schema   |     Name     | Result data type | Argument data types | Type 
 ------------+--------------+------------------+---------------------+------
@@ -5162,6 +5985,9 @@
 (4 rows)
 
 \df *sqrt num*
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                              List of functions
    Schema   |     Name     | Result data type | Argument data types | Type 
 ------------+--------------+------------------+---------------------+------
@@ -5170,6 +5996,7 @@
 (2 rows)
 
 \df int*pl
+INFO:  Path param info: 0.000000
                             List of functions
    Schema   |    Name     | Result data type | Argument data types | Type 
 ------------+-------------+------------------+---------------------+------
@@ -5186,6 +6013,9 @@
 (10 rows)
 
 \df int*pl int4
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                           List of functions
    Schema   |  Name   | Result data type | Argument data types | Type 
 ------------+---------+------------------+---------------------+------
@@ -5195,6 +6025,19 @@
 (3 rows)
 
 \df int*pl * pg_catalog.int8
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                           List of functions
    Schema   |  Name   | Result data type | Argument data types | Type 
 ------------+---------+------------------+---------------------+------
@@ -5204,6 +6047,9 @@
 (3 rows)
 
 \df acl* aclitem[]
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                                                     List of functions
    Schema   |    Name     | Result data type |                                        Argument data types                                         | Type 
 ------------+-------------+------------------+----------------------------------------------------------------------------------------------------+------
@@ -5214,6 +6060,13 @@
 (4 rows)
 
 \df has_database_privilege oid text
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                   List of functions
    Schema   |          Name          | Result data type | Argument data types | Type 
 ------------+------------------------+------------------+---------------------+------
@@ -5222,6 +6075,21 @@
 (2 rows)
 
 \df has_database_privilege oid text -
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                   List of functions
    Schema   |          Name          | Result data type | Argument data types | Type 
 ------------+------------------------+------------------+---------------------+------
@@ -5229,6 +6097,9 @@
 (1 row)
 
 \dfa bit* small*
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                           List of functions
    Schema   |  Name   | Result data type | Argument data types | Type 
 ------------+---------+------------------+---------------------+------
@@ -5238,6 +6109,7 @@
 (3 rows)
 
 \df *._pg_expandarray
+INFO:  Path param info: 0.000000
                                              List of functions
        Schema       |      Name       | Result data type |            Argument data types            | Type 
 --------------------+-----------------+------------------+-------------------------------------------+------
@@ -5245,6 +6117,13 @@
 (1 row)
 
 \do - pg_catalog.int4
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                List of operators
    Schema   | Name | Left arg type | Right arg type | Result type | Description 
 ------------+------+---------------+----------------+-------------+-------------
@@ -5252,6 +6131,13 @@
 (1 row)
 
 \do && anyarray *
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                List of operators
    Schema   | Name | Left arg type | Right arg type | Result type | Description 
 ------------+------+---------------+----------------+-------------+-------------
@@ -5277,6 +6163,9 @@
   as $$ begin return; end; $$;
 comment on function psql_df_plpgsql () is 'some comment';
 \df+ psql_df_*
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                                                                        List of functions
  Schema |       Name       | Result data type | Argument data types | Type | Volatility | Parallel |       Owner       | Security | Access privileges | Language | Internal name | Description  
 --------+------------------+------------------+---------------------+------+------------+----------+-------------------+----------+-------------------+----------+---------------+--------------
@@ -6043,36 +6932,100 @@
 (0 rows)
 
 \dt "no.such.table.relation"
+INFO:  Path param info: 0.000000
       List of relations
  Schema | Name | Type | Owner 
 --------+------+------+-------
 (0 rows)
 
 \da "no.such.aggregate.function"
+INFO:  Path param info: 0.000000
                      List of aggregate functions
  Schema | Name | Result data type | Argument data types | Description 
 --------+------+------------------+---------------------+-------------
 (0 rows)
 
 \dAc "no.such.operator.class"
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                   List of operator classes
  AM | Input type | Storage type | Operator class | Default? 
 ----+------------+--------------+----------------+----------
 (0 rows)
 
 \dAf "no.such.operator.family"
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
         List of operator families
  AM | Operator family | Applicable types 
 ----+-----------------+------------------
 (0 rows)
 
 \dAo "no.such.operator.of.operator.family"
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
         List of operators of operator families
  AM | Operator family | Operator | Strategy | Purpose 
 ----+-----------------+----------+----------+---------
 (0 rows)
 
 \dAp "no.such.operator.support.function.of.operator.family"
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                      List of support functions of operator families
  AM | Operator family | Registered left type | Registered right type | Number | Function 
 ----+-----------------+----------------------+-----------------------+--------+----------
@@ -6085,66 +7038,122 @@
 (0 rows)
 
 \dc "no.such.conversion"
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                List of conversions
  Schema | Name | Source | Destination | Default? 
 --------+------+--------+-------------+----------
 (0 rows)
 
 \dC "no.such.cast"
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                   List of casts
  Source type | Target type | Function | Implicit? 
 -------------+-------------+----------+-----------
 (0 rows)
 
 \dd "no.such.object.description"
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
          Object descriptions
  Schema | Name | Object | Description 
 --------+------+--------+-------------
 (0 rows)
 
 \dD "no.such.domain"
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                         List of domains
  Schema | Name | Type | Collation | Nullable | Default | Check 
 --------+------+------+-----------+----------+---------+-------
 (0 rows)
 
 \ddp "no.such.default.access.privilege"
+INFO:  Path param info: 0.000000
          Default access privileges
  Owner | Schema | Type | Access privileges 
 -------+--------+------+-------------------
 (0 rows)
 
 \di "no.such.index.relation"
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
           List of relations
  Schema | Name | Type | Owner | Table 
 --------+------+------+-------+-------
 (0 rows)
 
 \dm "no.such.materialized.view"
+INFO:  Path param info: 0.000000
       List of relations
  Schema | Name | Type | Owner 
 --------+------+------+-------
 (0 rows)
 
 \ds "no.such.relation"
+INFO:  Path param info: 0.000000
       List of relations
  Schema | Name | Type | Owner 
 --------+------+------+-------
 (0 rows)
 
 \dt "no.such.relation"
+INFO:  Path param info: 0.000000
       List of relations
  Schema | Name | Type | Owner 
 --------+------+------+-------
 (0 rows)
 
 \dv "no.such.relation"
+INFO:  Path param info: 0.000000
       List of relations
  Schema | Name | Type | Owner 
 --------+------+------+-------
 (0 rows)
 
 \des "no.such.foreign.server"
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
        List of foreign servers
  Name | Owner | Foreign-data wrapper 
 ------+-------+----------------------
@@ -6157,30 +7166,35 @@
 (0 rows)
 
 \df "no.such.function"
+INFO:  Path param info: 0.000000
                        List of functions
  Schema | Name | Result data type | Argument data types | Type 
 --------+------+------------------+---------------------+------
 (0 rows)
 
 \dF "no.such.text.search.configuration"
+INFO:  Path param info: 0.000000
 List of text search configurations
  Schema | Name | Description 
 --------+------+-------------
 (0 rows)
 
 \dFd "no.such.text.search.dictionary"
+INFO:  Path param info: 0.000000
 List of text search dictionaries
  Schema | Name | Description 
 --------+------+-------------
 (0 rows)
 
 \dFp "no.such.text.search.parser"
+INFO:  Path param info: 0.000000
  List of text search parsers
  Schema | Name | Description 
 --------+------+-------------
 (0 rows)
 
 \dFt "no.such.text.search.template"
+INFO:  Path param info: 0.000000
 List of text search templates
  Schema | Name | Description 
 --------+------+-------------
@@ -6192,42 +7206,81 @@
 -----------+------------
 
 \dL "no.such.language"
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
           List of languages
  Name | Owner | Trusted | Description 
 ------+-------+---------+-------------
 (0 rows)
 
 \dn "no.such.schema"
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
 List of schemas
  Name | Owner 
 ------+-------
 (0 rows)
 
 \do "no.such.operator"
+INFO:  Path param info: 0.000000
                              List of operators
  Schema | Name | Left arg type | Right arg type | Result type | Description 
 --------+------+---------------+----------------+-------------+-------------
 (0 rows)
 
 \dO "no.such.collation"
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                   List of collations
  Schema | Name | Provider | Collate | Ctype | ICU Locale | ICU Rules | Deterministic? 
 --------+------+----------+---------+-------+------------+-----------+----------------
 (0 rows)
 
 \dp "no.such.access.privilege"
+INFO:  Path param info: 0.000000
                             Access privileges
  Schema | Name | Type | Access privileges | Column privileges | Policies 
 --------+------+------+-------------------+-------------------+----------
 (0 rows)
 
 \dP "no.such.partitioned.relation"
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
            List of partitioned relations
  Schema | Name | Owner | Type | Parent name | Table 
 --------+------+-------+------+-------------+-------
 (0 rows)
 
 \drds "no.such.setting"
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
       List of settings
  Role | Database | Settings 
 ------+----------+----------
@@ -6246,12 +7299,23 @@
 (0 rows)
 
 \dT "no.such.data.type"
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
      List of data types
  Schema | Name | Description 
 --------+------+-------------
 (0 rows)
 
 \dx "no.such.installed.extension"
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
      List of installed extensions
  Name | Version | Schema | Description 
 ------+---------+--------+-------------
@@ -6273,12 +7337,16 @@
 \dA "no.such.schema"."no.such.access.method"
 improper qualified name (too many dotted names): "no.such.schema"."no.such.access.method"
 \dt "no.such.schema"."no.such.table.relation"
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
       List of relations
  Schema | Name | Type | Owner 
 --------+------+------+-------
 (0 rows)
 
 \da "no.such.schema"."no.such.aggregate.function"
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                      List of aggregate functions
  Schema | Name | Result data type | Argument data types | Description 
 --------+------+------------------+---------------------+-------------
@@ -6295,60 +7363,140 @@
 \db "no.such.schema"."no.such.tablespace"
 improper qualified name (too many dotted names): "no.such.schema"."no.such.tablespace"
 \dc "no.such.schema"."no.such.conversion"
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                List of conversions
  Schema | Name | Source | Destination | Default? 
 --------+------+--------+-------------+----------
 (0 rows)
 
 \dC "no.such.schema"."no.such.cast"
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                   List of casts
  Source type | Target type | Function | Implicit? 
 -------------+-------------+----------+-----------
 (0 rows)
 
 \dd "no.such.schema"."no.such.object.description"
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
          Object descriptions
  Schema | Name | Object | Description 
 --------+------+--------+-------------
 (0 rows)
 
 \dD "no.such.schema"."no.such.domain"
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                         List of domains
  Schema | Name | Type | Collation | Nullable | Default | Check 
 --------+------+------+-----------+----------+---------+-------
 (0 rows)
 
 \ddp "no.such.schema"."no.such.default.access.privilege"
+INFO:  Path param info: 0.000000
          Default access privileges
  Owner | Schema | Type | Access privileges 
 -------+--------+------+-------------------
 (0 rows)
 
 \di "no.such.schema"."no.such.index.relation"
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
           List of relations
  Schema | Name | Type | Owner | Table 
 --------+------+------+-------+-------
 (0 rows)
 
 \dm "no.such.schema"."no.such.materialized.view"
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
       List of relations
  Schema | Name | Type | Owner 
 --------+------+------+-------
 (0 rows)
 
 \ds "no.such.schema"."no.such.relation"
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
       List of relations
  Schema | Name | Type | Owner 
 --------+------+------+-------
 (0 rows)
 
 \dt "no.such.schema"."no.such.relation"
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
       List of relations
  Schema | Name | Type | Owner 
 --------+------+------+-------
 (0 rows)
 
 \dv "no.such.schema"."no.such.relation"
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
       List of relations
  Schema | Name | Type | Owner 
 --------+------+------+-------
@@ -6359,30 +7507,40 @@
 \dew "no.such.schema"."no.such.foreign.data.wrapper"
 improper qualified name (too many dotted names): "no.such.schema"."no.such.foreign.data.wrapper"
 \df "no.such.schema"."no.such.function"
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                        List of functions
  Schema | Name | Result data type | Argument data types | Type 
 --------+------+------------------+---------------------+------
 (0 rows)
 
 \dF "no.such.schema"."no.such.text.search.configuration"
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
 List of text search configurations
  Schema | Name | Description 
 --------+------+-------------
 (0 rows)
 
 \dFd "no.such.schema"."no.such.text.search.dictionary"
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
 List of text search dictionaries
  Schema | Name | Description 
 --------+------+-------------
 (0 rows)
 
 \dFp "no.such.schema"."no.such.text.search.parser"
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  List of text search parsers
  Schema | Name | Description 
 --------+------+-------------
 (0 rows)
 
 \dFt "no.such.schema"."no.such.text.search.template"
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
 List of text search templates
  Schema | Name | Description 
 --------+------+-------------
@@ -6393,24 +7551,57 @@
 \dL "no.such.schema"."no.such.language"
 cross-database references are not implemented: "no.such.schema"."no.such.language"
 \do "no.such.schema"."no.such.operator"
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                              List of operators
  Schema | Name | Left arg type | Right arg type | Result type | Description 
 --------+------+---------------+----------------+-------------+-------------
 (0 rows)
 
 \dO "no.such.schema"."no.such.collation"
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                   List of collations
  Schema | Name | Provider | Collate | Ctype | ICU Locale | ICU Rules | Deterministic? 
 --------+------+----------+---------+-------+------------+-----------+----------------
 (0 rows)
 
 \dp "no.such.schema"."no.such.access.privilege"
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                             Access privileges
  Schema | Name | Type | Access privileges | Column privileges | Policies 
 --------+------+------+-------------------+-------------------+----------
 (0 rows)
 
 \dP "no.such.schema"."no.such.partitioned.relation"
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
            List of partitioned relations
  Schema | Name | Owner | Type | Parent name | Table 
 --------+------+-------+------+-------------+-------
@@ -6423,6 +7614,10 @@
 \dRs "no.such.schema"."no.such.subscription"
 improper qualified name (too many dotted names): "no.such.schema"."no.such.subscription"
 \dT "no.such.schema"."no.such.data.type"
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
      List of data types
  Schema | Name | Description 
 --------+------+-------------
@@ -6440,126 +7635,256 @@
 improper qualified name (too many dotted names): "no.such.schema"."no.such.event.trigger"
 -- again, but with current database and dotted schema qualifications.
 \dt regression."no.such.schema"."no.such.table.relation"
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
       List of relations
  Schema | Name | Type | Owner 
 --------+------+------+-------
 (0 rows)
 
 \da regression."no.such.schema"."no.such.aggregate.function"
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                      List of aggregate functions
  Schema | Name | Result data type | Argument data types | Description 
 --------+------+------------------+---------------------+-------------
 (0 rows)
 
 \dc regression."no.such.schema"."no.such.conversion"
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                List of conversions
  Schema | Name | Source | Destination | Default? 
 --------+------+--------+-------------+----------
 (0 rows)
 
 \dC regression."no.such.schema"."no.such.cast"
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                   List of casts
  Source type | Target type | Function | Implicit? 
 -------------+-------------+----------+-----------
 (0 rows)
 
 \dd regression."no.such.schema"."no.such.object.description"
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
          Object descriptions
  Schema | Name | Object | Description 
 --------+------+--------+-------------
 (0 rows)
 
 \dD regression."no.such.schema"."no.such.domain"
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                         List of domains
  Schema | Name | Type | Collation | Nullable | Default | Check 
 --------+------+------+-----------+----------+---------+-------
 (0 rows)
 
 \di regression."no.such.schema"."no.such.index.relation"
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
           List of relations
  Schema | Name | Type | Owner | Table 
 --------+------+------+-------+-------
 (0 rows)
 
 \dm regression."no.such.schema"."no.such.materialized.view"
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
       List of relations
  Schema | Name | Type | Owner 
 --------+------+------+-------
 (0 rows)
 
 \ds regression."no.such.schema"."no.such.relation"
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
       List of relations
  Schema | Name | Type | Owner 
 --------+------+------+-------
 (0 rows)
 
 \dt regression."no.such.schema"."no.such.relation"
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
       List of relations
  Schema | Name | Type | Owner 
 --------+------+------+-------
 (0 rows)
 
 \dv regression."no.such.schema"."no.such.relation"
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
       List of relations
  Schema | Name | Type | Owner 
 --------+------+------+-------
 (0 rows)
 
 \df regression."no.such.schema"."no.such.function"
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                        List of functions
  Schema | Name | Result data type | Argument data types | Type 
 --------+------+------------------+---------------------+------
 (0 rows)
 
 \dF regression."no.such.schema"."no.such.text.search.configuration"
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
 List of text search configurations
  Schema | Name | Description 
 --------+------+-------------
 (0 rows)
 
 \dFd regression."no.such.schema"."no.such.text.search.dictionary"
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
 List of text search dictionaries
  Schema | Name | Description 
 --------+------+-------------
 (0 rows)
 
 \dFp regression."no.such.schema"."no.such.text.search.parser"
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  List of text search parsers
  Schema | Name | Description 
 --------+------+-------------
 (0 rows)
 
 \dFt regression."no.such.schema"."no.such.text.search.template"
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
 List of text search templates
  Schema | Name | Description 
 --------+------+-------------
 (0 rows)
 
 \do regression."no.such.schema"."no.such.operator"
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                              List of operators
  Schema | Name | Left arg type | Right arg type | Result type | Description 
 --------+------+---------------+----------------+-------------+-------------
 (0 rows)
 
 \dO regression."no.such.schema"."no.such.collation"
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                   List of collations
  Schema | Name | Provider | Collate | Ctype | ICU Locale | ICU Rules | Deterministic? 
 --------+------+----------+---------+-------+------------+-----------+----------------
 (0 rows)
 
 \dp regression."no.such.schema"."no.such.access.privilege"
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                             Access privileges
  Schema | Name | Type | Access privileges | Column privileges | Policies 
 --------+------+------+-------------------+-------------------+----------
 (0 rows)
 
 \dP regression."no.such.schema"."no.such.partitioned.relation"
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
            List of partitioned relations
  Schema | Name | Owner | Type | Parent name | Table 
 --------+------+-------+------+-------------+-------
 (0 rows)
 
 \dT regression."no.such.schema"."no.such.data.type"
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
      List of data types
  Schema | Name | Description 
 --------+------+-------------
@@ -6634,6 +7959,26 @@
 GRANT regress_du_role0 TO regress_du_role1 WITH ADMIN FALSE, INHERIT FALSE, SET TRUE  GRANTED BY regress_du_role2;
 GRANT regress_du_role0 TO regress_du_role2 WITH ADMIN FALSE, INHERIT FALSE, SET FALSE GRANTED BY regress_du_role2;
 \drg regress_du_role*
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                              List of role grants
     Role name     |    Member of     |       Options       |     Grantor      
 ------------------+------------------+---------------------+------------------
diff -U3 /home/dbs/pg-queryplans/postgres/src/test/regress/expected/amutils.out /home/dbs/pg-queryplans/postgres/src/test/regress/results/amutils.out
--- /home/dbs/pg-queryplans/postgres/src/test/regress/expected/amutils.out	2024-02-20 13:16:25.951611559 +0900
+++ /home/dbs/pg-queryplans/postgres/src/test/regress/results/amutils.out	2024-02-20 16:07:33.256004663 +0900
@@ -17,6 +17,8 @@
          with ordinality as u(prop,ord)
  where a.amname = 'btree'
  order by ord;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
         prop        | AM | Index | Column 
 --------------------+----+-------+--------
  asc                |    |       | t
@@ -56,6 +58,8 @@
          with ordinality as u(prop,ord)
  where a.amname = 'gist'
  order by ord;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
         prop        | AM | Index | Column 
 --------------------+----+-------+--------
  asc                |    |       | f
@@ -135,6 +139,8 @@
          with ordinality as u(prop,ord)
  where amtype = 'i'
  order by amname, ord;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  amname |     prop      | p 
 --------+---------------+---
  brin   | can_order     | f
@@ -187,6 +193,7 @@
                (6, 'bogus')) v2(idx,prop),
        generate_series(1,4) col
  order by col, idx;
+INFO:  Path param info: 0.000000
  col |    prop     | pg_index_column_has_property 
 -----+-------------+------------------------------
    1 | orderable   | t
@@ -224,6 +231,7 @@
                (8, 'bogus')) v2(idx,prop),
        generate_series(1,3) col
  order by col, idx;
+INFO:  Path param info: 0.000000
  col |        prop        | pg_index_column_has_property 
 -----+--------------------+------------------------------
    1 | orderable          | t
diff -U3 /home/dbs/pg-queryplans/postgres/src/test/regress/expected/stats_ext.out /home/dbs/pg-queryplans/postgres/src/test/regress/results/stats_ext.out
--- /home/dbs/pg-queryplans/postgres/src/test/regress/expected/stats_ext.out	2024-02-20 13:16:25.975611131 +0900
+++ /home/dbs/pg-queryplans/postgres/src/test/regress/results/stats_ext.out	2024-02-20 16:07:33.835996195 +0900
@@ -99,6 +99,23 @@
 CREATE STATISTICS ab1_b_a_stats ON b, a FROM ab1;
 ALTER TABLE ab1 DROP COLUMN a;
 \d ab1
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                 Table "public.ab1"
  Column |  Type   | Collation | Nullable | Default 
 --------+---------+-----------+----------+---------
@@ -131,6 +148,23 @@
 -- setting statistics target 0 skips the statistics, without printing any message, so check catalog
 ALTER STATISTICS ab1_a_b_stats SET STATISTICS 0;
 \d ab1
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                 Table "public.ab1"
  Column |  Type   | Collation | Nullable | Default 
 --------+---------+-----------+----------+---------
@@ -143,6 +177,7 @@
 SELECT stxname, stxdndistinct, stxddependencies, stxdmcv, stxdinherit
   FROM pg_statistic_ext s LEFT JOIN pg_statistic_ext_data d ON (d.stxoid = s.oid)
  WHERE s.stxname = 'ab1_a_b_stats';
+INFO:  Path param info: 0.000000
     stxname    | stxdndistinct | stxddependencies | stxdmcv | stxdinherit 
 ---------------+---------------+------------------+---------+-------------
  ab1_a_b_stats |               |                  |         | 
@@ -150,6 +185,25 @@
 
 ALTER STATISTICS ab1_a_b_stats SET STATISTICS -1;
 \d+ ab1
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                     Table "public.ab1"
  Column |  Type   | Collation | Nullable | Default | Storage | Stats target | Description 
 --------+---------+-----------+----------+---------+---------+--------------+-------------
@@ -424,6 +478,7 @@
   FROM pg_statistic_ext s, pg_statistic_ext_data d
  WHERE s.stxrelid = 'ndistinct'::regclass
    AND d.stxoid = s.oid;
+INFO:  Path param info: 0.000000
  stxkind |                    stxdndistinct                    
 ---------+-----------------------------------------------------
  {d,f,m} | {"3, 4": 11, "3, 6": 11, "4, 6": 11, "3, 4, 6": 11}
@@ -506,6 +561,7 @@
   FROM pg_statistic_ext s, pg_statistic_ext_data d
  WHERE s.stxrelid = 'ndistinct'::regclass
    AND d.stxoid = s.oid;
+INFO:  Path param info: 0.000000
  stxkind |                      stxdndistinct                       
 ---------+----------------------------------------------------------
  {d,f,m} | {"3, 4": 221, "3, 6": 247, "4, 6": 323, "3, 4, 6": 1000}
@@ -571,6 +627,7 @@
   FROM pg_statistic_ext s, pg_statistic_ext_data d
  WHERE s.stxrelid = 'ndistinct'::regclass
    AND d.stxoid = s.oid;
+INFO:  Path param info: 0.000000
  stxkind | stxdndistinct 
 ---------+---------------
 (0 rows)
@@ -655,6 +712,7 @@
   FROM pg_statistic_ext s, pg_statistic_ext_data d
  WHERE s.stxrelid = 'ndistinct'::regclass
    AND d.stxoid = s.oid;
+INFO:  Path param info: 0.000000
  stxkind |                           stxdndistinct                           
 ---------+-------------------------------------------------------------------
  {d,e}   | {"-1, -2": 221, "-1, -3": 247, "-2, -3": 323, "-1, -2, -3": 1000}
@@ -704,6 +762,7 @@
   FROM pg_statistic_ext s, pg_statistic_ext_data d
  WHERE s.stxrelid = 'ndistinct'::regclass
    AND d.stxoid = s.oid;
+INFO:  Path param info: 0.000000
  stxkind |                        stxdndistinct                        
 ---------+-------------------------------------------------------------
  {d,e}   | {"3, 4": 221, "3, -1": 247, "4, -1": 323, "3, 4, -1": 1000}
@@ -1258,6 +1317,14 @@
 ANALYZE functional_dependencies;
 -- print the detected dependencies
 SELECT dependencies FROM pg_stats_ext WHERE statistics_name = 'func_deps_stat';
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                                 dependencies                                                
 ------------------------------------------------------------------------------------------------------------
  {"3 => 4": 1.000000, "3 => 6": 1.000000, "4 => 6": 1.000000, "3, 4 => 6": 1.000000, "3, 6 => 4": 1.000000}
@@ -1600,6 +1667,14 @@
 ANALYZE functional_dependencies;
 -- print the detected dependencies
 SELECT dependencies FROM pg_stats_ext WHERE statistics_name = 'func_deps_stat';
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                                       dependencies                                                      
 ------------------------------------------------------------------------------------------------------------------------
  {"-1 => -2": 1.000000, "-1 => -3": 1.000000, "-2 => -3": 1.000000, "-1, -2 => -3": 1.000000, "-1, -3 => -2": 1.000000}
@@ -2230,6 +2305,7 @@
   FROM pg_statistic_ext s, pg_statistic_ext_data d
  WHERE s.stxname = 'mcv_lists_stats'
    AND d.stxoid = s.oid;
+INFO:  Path param info: 0.000000
  ?column? 
 ----------
  t
@@ -2539,6 +2615,10 @@
        pg_mcv_list_items(d.stxdmcv) m
  WHERE s.stxname = 'mcv_lists_stats'
    AND d.stxoid = s.oid;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  index | values  |  nulls  | frequency | base_frequency 
 -------+---------+---------+-----------+----------------
      0 | {1,2,3} | {f,f,f} |         1 |              1
@@ -2582,6 +2662,10 @@
        pg_mcv_list_items(d.stxdmcv) m
  WHERE s.stxname = 'mcv_lists_stats'
    AND d.stxoid = s.oid;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  index |      values      |  nulls  | frequency | base_frequency 
 -------+------------------+---------+-----------+----------------
      0 | {NULL,x,x}       | {t,f,f} |       0.5 |           0.25
diff -U3 /home/dbs/pg-queryplans/postgres/src/test/regress/expected/select_parallel.out /home/dbs/pg-queryplans/postgres/src/test/regress/results/select_parallel.out
--- /home/dbs/pg-queryplans/postgres/src/test/regress/expected/select_parallel.out	2024-02-20 13:16:25.971611203 +0900
+++ /home/dbs/pg-queryplans/postgres/src/test/regress/results/select_parallel.out	2024-02-20 16:07:34.087992516 +0900
@@ -405,6 +405,7 @@
 select * from
   (select count(unique1) from tenk1 where hundred > 10) ss
   right join (values (1),(2),(3)) v(x) on true;
+INFO:  Path param info: 0.000000
                                 QUERY PLAN                                
 --------------------------------------------------------------------------
  Nested Loop Left Join
@@ -420,6 +421,7 @@
 select * from
   (select count(unique1) from tenk1 where hundred > 10) ss
   right join (values (1),(2),(3)) v(x) on true;
+INFO:  Path param info: 0.000000
  count | x 
 -------+---
   8900 | 1
@@ -431,6 +433,7 @@
 select * from
   (select count(*) from tenk1 where thousand > 99) ss
   right join (values (1),(2),(3)) v(x) on true;
+INFO:  Path param info: 0.000000
                                       QUERY PLAN                                      
 --------------------------------------------------------------------------------------
  Nested Loop Left Join
@@ -446,6 +449,7 @@
 select * from
   (select count(*) from tenk1 where thousand > 99) ss
   right join (values (1),(2),(3)) v(x) on true;
+INFO:  Path param info: 0.000000
  count | x 
 -------+---
   9000 | 1
@@ -464,6 +468,7 @@
   left join (select tenk2.unique1 from tenk2 order by 1 limit 1000) ss
   on tenk1.unique1 < ss.unique1 + 1
   where tenk1.unique1 < 2;
+INFO:  Path param info: 0.000000
                          QUERY PLAN                         
 ------------------------------------------------------------
  Aggregate
@@ -483,6 +488,7 @@
   left join (select tenk2.unique1 from tenk2 order by 1 limit 1000) ss
   on tenk1.unique1 < ss.unique1 + 1
   where tenk1.unique1 < 2;
+INFO:  Path param info: 0.000000
  count 
 -------
   1999
@@ -510,6 +516,8 @@
 set work_mem='64kB';  --set small work mem to force lossy pages
 explain (costs off)
 	select count(*) from tenk1, tenk2 where tenk1.hundred > 1 and tenk2.thousand=0;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                          QUERY PLAN                         
 ------------------------------------------------------------
  Aggregate
@@ -525,6 +533,8 @@
 (10 rows)
 
 select count(*) from tenk1, tenk2 where tenk1.hundred > 1 and tenk2.thousand=0;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  count 
 -------
  98000
@@ -545,6 +555,8 @@
 explain (analyze, timing off, summary off, costs off)
    select count(*) from tenk1, tenk2 where tenk1.hundred > 1
         and tenk2.thousand=0;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                 QUERY PLAN                                
 --------------------------------------------------------------------------
  Aggregate (actual rows=1 loops=1)
@@ -579,6 +591,7 @@
 end;
 $$;
 select * from explain_parallel_sort_stats();
+INFO:  Path param info: 0.000000
                        explain_parallel_sort_stats                        
 --------------------------------------------------------------------------
  Nested Loop Left Join (actual rows=30000 loops=1)
@@ -609,6 +622,7 @@
 set enable_nestloop to off;
 explain (costs off)
 	select  count(*) from tenk1, tenk2 where tenk1.unique1 = tenk2.unique1;
+INFO:  Path param info: 0.000000
                                   QUERY PLAN                                   
 -------------------------------------------------------------------------------
  Finalize Aggregate
@@ -622,6 +636,7 @@
 (8 rows)
 
 select  count(*) from tenk1, tenk2 where tenk1.unique1 = tenk2.unique1;
+INFO:  Path param info: 0.000000
  count 
 -------
  10000
@@ -808,6 +823,7 @@
   (select string4, count(unique2)
    from tenk1 group by string4 order by string4) ss
   right join (values (1),(2),(3)) v(x) on true;
+INFO:  Path param info: 0.000000
                         QUERY PLAN                        
 ----------------------------------------------------------
  Nested Loop Left Join
@@ -827,6 +843,7 @@
   (select string4, count(unique2)
    from tenk1 group by string4 order by string4) ss
   right join (values (1),(2),(3)) v(x) on true;
+INFO:  Path param info: 0.000000
  string4 | count | x 
 ---------+-------+---
  AAAAxx  |  2500 | 1
@@ -999,6 +1016,7 @@
 explain (costs off, verbose)
   select count(*) from tenk1 a where (unique1, two) in
     (select unique1, row_number() over() from tenk1 b);
+INFO:  Path param info: 0.000000
                                           QUERY PLAN                                          
 ----------------------------------------------------------------------------------------------
  Aggregate
@@ -1025,6 +1043,7 @@
 explain (costs off)
   select * from tenk1 a where two in
     (select two from tenk1 b where stringu1 like '%AAAA' limit 3);
+INFO:  Path param info: 0.000000
                           QUERY PLAN                           
 ---------------------------------------------------------------
  Hash Semi Join
@@ -1122,6 +1141,8 @@
 -- test interaction with SRFs
 SELECT * FROM information_schema.foreign_data_wrapper_options
 ORDER BY 1, 2, 3;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  foreign_data_wrapper_catalog | foreign_data_wrapper_name | option_name | option_value 
 ------------------------------+---------------------------+-------------+--------------
 (0 rows)
@@ -1154,6 +1175,7 @@
 SELECT unnest(ARRAY[]::integer[]) + 1 AS pathkey
   FROM tenk1 t1 JOIN tenk1 t2 ON TRUE
   ORDER BY pathkey;
+INFO:  Path param info: 0.000000
                                              QUERY PLAN                                              
 -----------------------------------------------------------------------------------------------------
  Sort
diff -U3 /home/dbs/pg-queryplans/postgres/src/test/regress/expected/write_parallel.out /home/dbs/pg-queryplans/postgres/src/test/regress/results/write_parallel.out
--- /home/dbs/pg-queryplans/postgres/src/test/regress/expected/write_parallel.out	2024-02-20 13:16:25.979611060 +0900
+++ /home/dbs/pg-queryplans/postgres/src/test/regress/results/write_parallel.out	2024-02-20 16:07:34.119992049 +0900
@@ -61,6 +61,9 @@
 create unique index on parallel_mat_view(length);
 refresh materialized view parallel_mat_view;
 refresh materialized view concurrently parallel_mat_view;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
 drop materialized view parallel_mat_view;
 prepare prep_stmt as select length(stringu1) from tenk1 group by length(stringu1);
 explain (costs off) create table parallel_write as execute prep_stmt;
diff -U3 /home/dbs/pg-queryplans/postgres/src/test/regress/expected/publication.out /home/dbs/pg-queryplans/postgres/src/test/regress/results/publication.out
--- /home/dbs/pg-queryplans/postgres/src/test/regress/expected/publication.out	2024-02-20 13:16:25.971611203 +0900
+++ /home/dbs/pg-queryplans/postgres/src/test/regress/results/publication.out	2024-02-20 16:07:34.295989479 +0900
@@ -87,6 +87,15 @@
 -- should be able to add schema to 'FOR TABLE' publication
 ALTER PUBLICATION testpub_fortable ADD TABLES IN SCHEMA pub_test;
 \dRp+ testpub_fortable
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                 Publication testpub_fortable
           Owner           | All tables | Inserts | Updates | Deletes | Truncates | Via root 
 --------------------------+------------+---------+---------+---------+-----------+----------
@@ -99,6 +108,15 @@
 -- should be able to drop schema from 'FOR TABLE' publication
 ALTER PUBLICATION testpub_fortable DROP TABLES IN SCHEMA pub_test;
 \dRp+ testpub_fortable
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                 Publication testpub_fortable
           Owner           | All tables | Inserts | Updates | Deletes | Truncates | Via root 
 --------------------------+------------+---------+---------+---------+-----------+----------
@@ -109,6 +127,15 @@
 -- should be able to set schema to 'FOR TABLE' publication
 ALTER PUBLICATION testpub_fortable SET TABLES IN SCHEMA pub_test;
 \dRp+ testpub_fortable
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                 Publication testpub_fortable
           Owner           | All tables | Inserts | Updates | Deletes | Truncates | Via root 
 --------------------------+------------+---------+---------+---------+-----------+----------
@@ -123,6 +150,15 @@
 CREATE PUBLICATION testpub_for_tbl_schema FOR TABLES IN SCHEMA pub_test, TABLE pub_test.testpub_nopk;
 RESET client_min_messages;
 \dRp+ testpub_for_tbl_schema
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                              Publication testpub_for_tbl_schema
           Owner           | All tables | Inserts | Updates | Deletes | Truncates | Via root 
 --------------------------+------------+---------+---------+---------+-----------+----------
@@ -144,6 +180,15 @@
 -- should be able to add a table of the same schema to the schema publication
 ALTER PUBLICATION testpub_forschema ADD TABLE pub_test.testpub_nopk;
 \dRp+ testpub_forschema
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                Publication testpub_forschema
           Owner           | All tables | Inserts | Updates | Deletes | Truncates | Via root 
 --------------------------+------------+---------+---------+---------+-----------+----------
@@ -156,6 +201,15 @@
 -- should be able to drop the table
 ALTER PUBLICATION testpub_forschema DROP TABLE pub_test.testpub_nopk;
 \dRp+ testpub_forschema
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                Publication testpub_forschema
           Owner           | All tables | Inserts | Updates | Deletes | Truncates | Via root 
 --------------------------+------------+---------+---------+---------+-----------+----------
@@ -170,6 +224,15 @@
 -- should be able to set table to schema publication
 ALTER PUBLICATION testpub_forschema SET TABLE pub_test.testpub_nopk;
 \dRp+ testpub_forschema
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                Publication testpub_forschema
           Owner           | All tables | Inserts | Updates | Deletes | Truncates | Via root 
 --------------------------+------------+---------+---------+---------+-----------+----------
@@ -184,6 +247,37 @@
 (1 row)
 
 \d+ testpub_tbl2
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                                 Table "public.testpub_tbl2"
  Column |  Type   | Collation | Nullable |                 Default                  | Storage  | Stats target | Description 
 --------+---------+-----------+----------+------------------------------------------+----------+--------------+-------------
@@ -210,6 +304,15 @@
 CREATE PUBLICATION testpub4 FOR TABLE ONLY testpub_tbl3;
 RESET client_min_messages;
 \dRp+ testpub3
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                     Publication testpub3
           Owner           | All tables | Inserts | Updates | Deletes | Truncates | Via root 
 --------------------------+------------+---------+---------+---------+-----------+----------
@@ -219,6 +322,15 @@
     "public.testpub_tbl3a"
 
 \dRp+ testpub4
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                     Publication testpub4
           Owner           | All tables | Inserts | Updates | Deletes | Truncates | Via root 
 --------------------------+------------+---------+---------+---------+-----------+----------
@@ -243,6 +355,15 @@
 -- only parent is listed as being in publication, not the partition
 ALTER PUBLICATION testpub_forparted ADD TABLE testpub_parted;
 \dRp+ testpub_forparted
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                Publication testpub_forparted
           Owner           | All tables | Inserts | Updates | Deletes | Truncates | Via root 
 --------------------------+------------+---------+---------+---------+-----------+----------
@@ -261,6 +382,15 @@
 UPDATE testpub_parted1 SET a = 1;
 ALTER PUBLICATION testpub_forparted SET (publish_via_partition_root = true);
 \dRp+ testpub_forparted
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                Publication testpub_forparted
           Owner           | All tables | Inserts | Updates | Deletes | Truncates | Via root 
 --------------------------+------------+---------+---------+---------+-----------+----------
@@ -293,6 +423,15 @@
 CREATE PUBLICATION testpub5 FOR TABLE testpub_rf_tbl1, testpub_rf_tbl2 WHERE (c <> 'test' AND d < 5) WITH (publish = 'insert');
 RESET client_min_messages;
 \dRp+ testpub5
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                     Publication testpub5
           Owner           | All tables | Inserts | Updates | Deletes | Truncates | Via root 
 --------------------------+------------+---------+---------+---------+-----------+----------
@@ -302,6 +441,23 @@
     "public.testpub_rf_tbl2" WHERE ((c <> 'test'::text) AND (d < 5))
 
 \d testpub_rf_tbl3
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
           Table "public.testpub_rf_tbl3"
  Column |  Type   | Collation | Nullable | Default 
 --------+---------+-----------+----------+---------
@@ -309,6 +465,15 @@
 
 ALTER PUBLICATION testpub5 ADD TABLE testpub_rf_tbl3 WHERE (e > 1000 AND e < 2000);
 \dRp+ testpub5
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                     Publication testpub5
           Owner           | All tables | Inserts | Updates | Deletes | Truncates | Via root 
 --------------------------+------------+---------+---------+---------+-----------+----------
@@ -319,6 +484,23 @@
     "public.testpub_rf_tbl3" WHERE ((e > 1000) AND (e < 2000))
 
 \d testpub_rf_tbl3
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
           Table "public.testpub_rf_tbl3"
  Column |  Type   | Collation | Nullable | Default 
 --------+---------+-----------+----------+---------
@@ -328,6 +510,15 @@
 
 ALTER PUBLICATION testpub5 DROP TABLE testpub_rf_tbl2;
 \dRp+ testpub5
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                     Publication testpub5
           Owner           | All tables | Inserts | Updates | Deletes | Truncates | Via root 
 --------------------------+------------+---------+---------+---------+-----------+----------
@@ -339,6 +530,15 @@
 -- remove testpub_rf_tbl1 and add testpub_rf_tbl3 again (another WHERE expression)
 ALTER PUBLICATION testpub5 SET TABLE testpub_rf_tbl3 WHERE (e > 300 AND e < 500);
 \dRp+ testpub5
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                     Publication testpub5
           Owner           | All tables | Inserts | Updates | Deletes | Truncates | Via root 
 --------------------------+------------+---------+---------+---------+-----------+----------
@@ -347,6 +547,23 @@
     "public.testpub_rf_tbl3" WHERE ((e > 300) AND (e < 500))
 
 \d testpub_rf_tbl3
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
           Table "public.testpub_rf_tbl3"
  Column |  Type   | Collation | Nullable | Default 
 --------+---------+-----------+----------+---------
@@ -360,6 +577,23 @@
 CREATE PUBLICATION testpub_rf_no FOR TABLE testpub_rf_tbl1;
 RESET client_min_messages;
 \d testpub_rf_tbl1
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
           Table "public.testpub_rf_tbl1"
  Column |  Type   | Collation | Nullable | Default 
 --------+---------+-----------+----------+---------
@@ -375,6 +609,15 @@
 CREATE PUBLICATION testpub_syntax1 FOR TABLE testpub_rf_tbl1, ONLY testpub_rf_tbl3 WHERE (e < 999) WITH (publish = 'insert');
 RESET client_min_messages;
 \dRp+ testpub_syntax1
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                 Publication testpub_syntax1
           Owner           | All tables | Inserts | Updates | Deletes | Truncates | Via root 
 --------------------------+------------+---------+---------+---------+-----------+----------
@@ -388,6 +631,15 @@
 CREATE PUBLICATION testpub_syntax2 FOR TABLE testpub_rf_tbl1, testpub_rf_schema1.testpub_rf_tbl5 WHERE (h < 999) WITH (publish = 'insert');
 RESET client_min_messages;
 \dRp+ testpub_syntax2
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                 Publication testpub_syntax2
           Owner           | All tables | Inserts | Updates | Deletes | Truncates | Via root 
 --------------------------+------------+---------+---------+---------+-----------+----------
@@ -506,6 +758,15 @@
 ALTER PUBLICATION testpub6 SET TABLES IN SCHEMA testpub_rf_schema2, TABLE testpub_rf_schema2.testpub_rf_tbl6 WHERE (i < 99);
 RESET client_min_messages;
 \dRp+ testpub6
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                     Publication testpub6
           Owner           | All tables | Inserts | Updates | Deletes | Truncates | Via root 
 --------------------------+------------+---------+---------+---------+-----------+----------
@@ -723,6 +984,15 @@
 RESET client_min_messages;
 ALTER PUBLICATION testpub_table_ins ADD TABLE testpub_tbl5 (a);		-- ok
 \dRp+ testpub_table_ins
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                Publication testpub_table_ins
           Owner           | All tables | Inserts | Updates | Deletes | Truncates | Via root 
 --------------------------+------------+---------+---------+---------+-----------+----------
@@ -744,6 +1014,37 @@
 CREATE TABLE testpub_tbl7 (a int primary key, b text, c text);
 ALTER PUBLICATION testpub_fortable ADD TABLE testpub_tbl7 (a, b);
 \d+ testpub_tbl7
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                 Table "public.testpub_tbl7"
  Column |  Type   | Collation | Nullable | Default | Storage  | Stats target | Description 
 --------+---------+-----------+----------+---------+----------+--------------+-------------
@@ -758,6 +1059,37 @@
 -- ok: the column list is the same, we should skip this table (or at least not fail)
 ALTER PUBLICATION testpub_fortable SET TABLE testpub_tbl7 (a, b);
 \d+ testpub_tbl7
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                 Table "public.testpub_tbl7"
  Column |  Type   | Collation | Nullable | Default | Storage  | Stats target | Description 
 --------+---------+-----------+----------+---------+----------+--------------+-------------
@@ -772,6 +1104,37 @@
 -- ok: the column list changes, make sure the catalog gets updated
 ALTER PUBLICATION testpub_fortable SET TABLE testpub_tbl7 (a, c);
 \d+ testpub_tbl7
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                 Table "public.testpub_tbl7"
  Column |  Type   | Collation | Nullable | Default | Storage  | Stats target | Description 
 --------+---------+-----------+----------+---------+----------+--------------+-------------
@@ -900,6 +1263,15 @@
 ALTER TABLE testpub_tbl_both_filters REPLICA IDENTITY USING INDEX testpub_tbl_both_filters_pkey;
 ALTER PUBLICATION testpub_both_filters ADD TABLE testpub_tbl_both_filters (a,c) WHERE (c != 1);
 \dRp+ testpub_both_filters
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                               Publication testpub_both_filters
           Owner           | All tables | Inserts | Updates | Deletes | Truncates | Via root 
 --------------------------+------------+---------+---------+---------+-----------+----------
@@ -908,6 +1280,37 @@
     "public.testpub_tbl_both_filters" (a, c) WHERE (c <> 1)
 
 \d+ testpub_tbl_both_filters
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                          Table "public.testpub_tbl_both_filters"
  Column |  Type   | Collation | Nullable | Default | Storage | Stats target | Description 
 --------+---------+-----------+----------+---------+---------+--------------+-------------
@@ -1108,6 +1511,15 @@
 CREATE PUBLICATION testpub_fortbl FOR TABLE testpub_tbl1;
 ERROR:  publication "testpub_fortbl" already exists
 \dRp+ testpub_fortbl
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                  Publication testpub_fortbl
           Owner           | All tables | Inserts | Updates | Deletes | Truncates | Via root 
 --------------------------+------------+---------+---------+---------+-----------+----------
@@ -1125,6 +1537,26 @@
 ALTER PUBLICATION testpub_default ADD TABLE pub_test.testpub_nopk;
 ALTER PUBLICATION testpib_ins_trunct ADD TABLE pub_test.testpub_nopk, testpub_tbl1;
 \d+ pub_test.testpub_nopk
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                               Table "pub_test.testpub_nopk"
  Column |  Type   | Collation | Nullable | Default | Storage | Stats target | Description 
 --------+---------+-----------+----------+---------+---------+--------------+-------------
@@ -1136,6 +1568,37 @@
     "testpub_fortbl"
 
 \d+ testpub_tbl1
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                                 Table "public.testpub_tbl1"
  Column |  Type   | Collation | Nullable |                 Default                  | Storage  | Stats target | Description 
 --------+---------+-----------+----------+------------------------------------------+----------+--------------+-------------
@@ -1149,6 +1612,15 @@
     "testpub_fortbl"
 
 \dRp+ testpub_default
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                 Publication testpub_default
           Owner           | All tables | Inserts | Updates | Deletes | Truncates | Via root 
 --------------------------+------------+---------+---------+---------+-----------+----------
@@ -1162,6 +1634,37 @@
 ALTER PUBLICATION testpub_default DROP TABLE pub_test.testpub_nopk;
 ERROR:  relation "testpub_nopk" is not part of the publication
 \d+ testpub_tbl1
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                                 Table "public.testpub_tbl1"
  Column |  Type   | Collation | Nullable |                 Default                  | Storage  | Stats target | Description 
 --------+---------+-----------+----------+------------------------------------------+----------+--------------+-------------
@@ -1230,6 +1733,15 @@
 DROP TABLE testpub_parted;
 DROP TABLE testpub_tbl1;
 \dRp+ testpub_default
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                 Publication testpub_default
           Owner           | All tables | Inserts | Updates | Deletes | Truncates | Via root 
 --------------------------+------------+---------+---------+---------+-----------+----------
@@ -1272,6 +1784,15 @@
 SET client_min_messages = 'ERROR';
 CREATE PUBLICATION testpub1_forschema FOR TABLES IN SCHEMA pub_test1;
 \dRp+ testpub1_forschema
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                Publication testpub1_forschema
           Owner           | All tables | Inserts | Updates | Deletes | Truncates | Via root 
 --------------------------+------------+---------+---------+---------+-----------+----------
@@ -1281,6 +1802,15 @@
 
 CREATE PUBLICATION testpub2_forschema FOR TABLES IN SCHEMA pub_test1, pub_test2, pub_test3;
 \dRp+ testpub2_forschema
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                Publication testpub2_forschema
           Owner           | All tables | Inserts | Updates | Deletes | Truncates | Via root 
 --------------------------+------------+---------+---------+---------+-----------+----------
@@ -1298,6 +1828,15 @@
 CREATE PUBLICATION testpub_fortable FOR TABLE "CURRENT_SCHEMA"."CURRENT_SCHEMA";
 RESET client_min_messages;
 \dRp+ testpub3_forschema
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                Publication testpub3_forschema
           Owner           | All tables | Inserts | Updates | Deletes | Truncates | Via root 
 --------------------------+------------+---------+---------+---------+-----------+----------
@@ -1306,6 +1845,15 @@
     "public"
 
 \dRp+ testpub4_forschema
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                Publication testpub4_forschema
           Owner           | All tables | Inserts | Updates | Deletes | Truncates | Via root 
 --------------------------+------------+---------+---------+---------+-----------+----------
@@ -1314,6 +1862,15 @@
     "CURRENT_SCHEMA"
 
 \dRp+ testpub5_forschema
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                Publication testpub5_forschema
           Owner           | All tables | Inserts | Updates | Deletes | Truncates | Via root 
 --------------------------+------------+---------+---------+---------+-----------+----------
@@ -1323,6 +1880,15 @@
     "public"
 
 \dRp+ testpub6_forschema
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                Publication testpub6_forschema
           Owner           | All tables | Inserts | Updates | Deletes | Truncates | Via root 
 --------------------------+------------+---------+---------+---------+-----------+----------
@@ -1332,6 +1898,15 @@
     "public"
 
 \dRp+ testpub_fortable
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                 Publication testpub_fortable
           Owner           | All tables | Inserts | Updates | Deletes | Truncates | Via root 
 --------------------------+------------+---------+---------+---------+-----------+----------
@@ -1369,6 +1944,15 @@
 -- dropping the schema should reflect the change in publication
 DROP SCHEMA pub_test3;
 \dRp+ testpub2_forschema
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                Publication testpub2_forschema
           Owner           | All tables | Inserts | Updates | Deletes | Truncates | Via root 
 --------------------------+------------+---------+---------+---------+-----------+----------
@@ -1380,6 +1964,15 @@
 -- renaming the schema should reflect the change in publication
 ALTER SCHEMA pub_test1 RENAME to pub_test1_renamed;
 \dRp+ testpub2_forschema
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                Publication testpub2_forschema
           Owner           | All tables | Inserts | Updates | Deletes | Truncates | Via root 
 --------------------------+------------+---------+---------+---------+-----------+----------
@@ -1390,6 +1983,15 @@
 
 ALTER SCHEMA pub_test1_renamed RENAME to pub_test1;
 \dRp+ testpub2_forschema
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                Publication testpub2_forschema
           Owner           | All tables | Inserts | Updates | Deletes | Truncates | Via root 
 --------------------------+------------+---------+---------+---------+-----------+----------
@@ -1401,6 +2003,15 @@
 -- alter publication add schema
 ALTER PUBLICATION testpub1_forschema ADD TABLES IN SCHEMA pub_test2;
 \dRp+ testpub1_forschema
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                Publication testpub1_forschema
           Owner           | All tables | Inserts | Updates | Deletes | Truncates | Via root 
 --------------------------+------------+---------+---------+---------+-----------+----------
@@ -1413,6 +2024,15 @@
 ALTER PUBLICATION testpub1_forschema ADD TABLES IN SCHEMA non_existent_schema;
 ERROR:  schema "non_existent_schema" does not exist
 \dRp+ testpub1_forschema
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                Publication testpub1_forschema
           Owner           | All tables | Inserts | Updates | Deletes | Truncates | Via root 
 --------------------------+------------+---------+---------+---------+-----------+----------
@@ -1425,6 +2045,15 @@
 ALTER PUBLICATION testpub1_forschema ADD TABLES IN SCHEMA pub_test1;
 ERROR:  schema "pub_test1" is already member of publication "testpub1_forschema"
 \dRp+ testpub1_forschema
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                Publication testpub1_forschema
           Owner           | All tables | Inserts | Updates | Deletes | Truncates | Via root 
 --------------------------+------------+---------+---------+---------+-----------+----------
@@ -1436,6 +2065,15 @@
 -- alter publication drop schema
 ALTER PUBLICATION testpub1_forschema DROP TABLES IN SCHEMA pub_test2;
 \dRp+ testpub1_forschema
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                Publication testpub1_forschema
           Owner           | All tables | Inserts | Updates | Deletes | Truncates | Via root 
 --------------------------+------------+---------+---------+---------+-----------+----------
@@ -1447,6 +2085,15 @@
 ALTER PUBLICATION testpub1_forschema DROP TABLES IN SCHEMA pub_test2;
 ERROR:  tables from schema "pub_test2" are not part of the publication
 \dRp+ testpub1_forschema
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                Publication testpub1_forschema
           Owner           | All tables | Inserts | Updates | Deletes | Truncates | Via root 
 --------------------------+------------+---------+---------+---------+-----------+----------
@@ -1458,6 +2105,15 @@
 ALTER PUBLICATION testpub1_forschema DROP TABLES IN SCHEMA non_existent_schema;
 ERROR:  schema "non_existent_schema" does not exist
 \dRp+ testpub1_forschema
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                Publication testpub1_forschema
           Owner           | All tables | Inserts | Updates | Deletes | Truncates | Via root 
 --------------------------+------------+---------+---------+---------+-----------+----------
@@ -1468,6 +2124,15 @@
 -- drop all schemas
 ALTER PUBLICATION testpub1_forschema DROP TABLES IN SCHEMA pub_test1;
 \dRp+ testpub1_forschema
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                Publication testpub1_forschema
           Owner           | All tables | Inserts | Updates | Deletes | Truncates | Via root 
 --------------------------+------------+---------+---------+---------+-----------+----------
@@ -1477,6 +2142,15 @@
 -- alter publication set multiple schema
 ALTER PUBLICATION testpub1_forschema SET TABLES IN SCHEMA pub_test1, pub_test2;
 \dRp+ testpub1_forschema
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                Publication testpub1_forschema
           Owner           | All tables | Inserts | Updates | Deletes | Truncates | Via root 
 --------------------------+------------+---------+---------+---------+-----------+----------
@@ -1489,6 +2163,15 @@
 ALTER PUBLICATION testpub1_forschema SET TABLES IN SCHEMA non_existent_schema;
 ERROR:  schema "non_existent_schema" does not exist
 \dRp+ testpub1_forschema
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                Publication testpub1_forschema
           Owner           | All tables | Inserts | Updates | Deletes | Truncates | Via root 
 --------------------------+------------+---------+---------+---------+-----------+----------
@@ -1501,6 +2184,15 @@
 -- removing the duplicate schemas
 ALTER PUBLICATION testpub1_forschema SET TABLES IN SCHEMA pub_test1, pub_test1;
 \dRp+ testpub1_forschema
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                Publication testpub1_forschema
           Owner           | All tables | Inserts | Updates | Deletes | Truncates | Via root 
 --------------------------+------------+---------+---------+---------+-----------+----------
@@ -1583,6 +2275,15 @@
 CREATE PUBLICATION testpub3_forschema;
 RESET client_min_messages;
 \dRp+ testpub3_forschema
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                Publication testpub3_forschema
           Owner           | All tables | Inserts | Updates | Deletes | Truncates | Via root 
 --------------------------+------------+---------+---------+---------+-----------+----------
@@ -1591,6 +2292,15 @@
 
 ALTER PUBLICATION testpub3_forschema SET TABLES IN SCHEMA pub_test1;
 \dRp+ testpub3_forschema
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                Publication testpub3_forschema
           Owner           | All tables | Inserts | Updates | Deletes | Truncates | Via root 
 --------------------------+------------+---------+---------+---------+-----------+----------
@@ -1604,6 +2314,15 @@
 CREATE PUBLICATION testpub_fortable_forschema FOR TABLE pub_test2.tbl1, TABLES IN SCHEMA pub_test1;
 RESET client_min_messages;
 \dRp+ testpub_forschema_fortable
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                            Publication testpub_forschema_fortable
           Owner           | All tables | Inserts | Updates | Deletes | Truncates | Via root 
 --------------------------+------------+---------+---------+---------+-----------+----------
@@ -1614,6 +2333,15 @@
     "pub_test1"
 
 \dRp+ testpub_fortable_forschema
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                            Publication testpub_fortable_forschema
           Owner           | All tables | Inserts | Updates | Deletes | Truncates | Via root 
 --------------------------+------------+---------+---------+---------+-----------+----------
@@ -1664,6 +2392,15 @@
 -- Schema publication that does not include the schema that has the parent table
 CREATE PUBLICATION pub FOR TABLES IN SCHEMA sch2 WITH (PUBLISH_VIA_PARTITION_ROOT=1);
 SELECT * FROM pg_publication_tables;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  pubname | schemaname | tablename  | attnames | rowfilter 
 ---------+------------+------------+----------+-----------
  pub     | sch2       | tbl1_part1 | {a}      | 
@@ -1673,6 +2410,15 @@
 -- Table publication that does not include the parent table
 CREATE PUBLICATION pub FOR TABLE sch2.tbl1_part1 WITH (PUBLISH_VIA_PARTITION_ROOT=1);
 SELECT * FROM pg_publication_tables;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  pubname | schemaname | tablename  | attnames | rowfilter 
 ---------+------------+------------+----------+-----------
  pub     | sch2       | tbl1_part1 | {a}      | 
@@ -1681,6 +2427,15 @@
 -- Table publication that includes both the parent table and the child table
 ALTER PUBLICATION pub ADD TABLE sch1.tbl1;
 SELECT * FROM pg_publication_tables;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  pubname | schemaname | tablename | attnames | rowfilter 
 ---------+------------+-----------+----------+-----------
  pub     | sch1       | tbl1      | {a}      | 
@@ -1690,6 +2445,15 @@
 -- Schema publication that does not include the schema that has the parent table
 CREATE PUBLICATION pub FOR TABLES IN SCHEMA sch2 WITH (PUBLISH_VIA_PARTITION_ROOT=0);
 SELECT * FROM pg_publication_tables;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  pubname | schemaname | tablename  | attnames | rowfilter 
 ---------+------------+------------+----------+-----------
  pub     | sch2       | tbl1_part1 | {a}      | 
@@ -1699,6 +2463,15 @@
 -- Table publication that does not include the parent table
 CREATE PUBLICATION pub FOR TABLE sch2.tbl1_part1 WITH (PUBLISH_VIA_PARTITION_ROOT=0);
 SELECT * FROM pg_publication_tables;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  pubname | schemaname | tablename  | attnames | rowfilter 
 ---------+------------+------------+----------+-----------
  pub     | sch2       | tbl1_part1 | {a}      | 
@@ -1707,6 +2480,15 @@
 -- Table publication that includes both the parent table and the child table
 ALTER PUBLICATION pub ADD TABLE sch1.tbl1;
 SELECT * FROM pg_publication_tables;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  pubname | schemaname | tablename  | attnames | rowfilter 
 ---------+------------+------------+----------+-----------
  pub     | sch2       | tbl1_part1 | {a}      | 
@@ -1722,6 +2504,15 @@
 ALTER TABLE sch1.tbl1 ATTACH PARTITION sch1.tbl1_part3 FOR VALUES FROM (20) to (30);
 CREATE PUBLICATION pub FOR TABLES IN SCHEMA sch1 WITH (PUBLISH_VIA_PARTITION_ROOT=1);
 SELECT * FROM pg_publication_tables;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  pubname | schemaname | tablename | attnames | rowfilter 
 ---------+------------+-----------+----------+-----------
  pub     | sch1       | tbl1      | {a}      | 
diff -U3 /home/dbs/pg-queryplans/postgres/src/test/regress/expected/subscription.out /home/dbs/pg-queryplans/postgres/src/test/regress/results/subscription.out
--- /home/dbs/pg-queryplans/postgres/src/test/regress/expected/subscription.out	2024-02-20 13:16:25.975611131 +0900
+++ /home/dbs/pg-queryplans/postgres/src/test/regress/results/subscription.out	2024-02-20 16:07:34.187991056 +0900
@@ -42,6 +42,7 @@
 -- Check if the subscription stats are created and stats_reset is updated
 -- by pg_stat_reset_subscription_stats().
 SELECT subname, stats_reset IS NULL stats_reset_is_null FROM pg_stat_subscription_stats WHERE subname = 'regress_testsub';
+INFO:  Path param info: 0.000000
      subname     | stats_reset_is_null 
 -----------------+---------------------
  regress_testsub | t
@@ -54,6 +55,7 @@
 (1 row)
 
 SELECT subname, stats_reset IS NULL stats_reset_is_null FROM pg_stat_subscription_stats WHERE subname = 'regress_testsub';
+INFO:  Path param info: 0.000000
      subname     | stats_reset_is_null 
 -----------------+---------------------
  regress_testsub | f
@@ -61,6 +63,7 @@
 
 -- Reset the stats again and check if the new reset_stats is updated.
 SELECT stats_reset as prev_stats_reset FROM pg_stat_subscription_stats WHERE subname = 'regress_testsub' \gset
+INFO:  Path param info: 0.000000
 SELECT pg_stat_reset_subscription_stats(oid) FROM pg_subscription WHERE subname = 'regress_testsub';
  pg_stat_reset_subscription_stats 
 ----------------------------------
@@ -68,6 +71,7 @@
 (1 row)
 
 SELECT :'prev_stats_reset' < stats_reset FROM pg_stat_subscription_stats WHERE subname = 'regress_testsub';
+INFO:  Path param info: 0.000000
  ?column? 
 ----------
  t
diff -U3 /home/dbs/pg-queryplans/postgres/src/test/regress/expected/select_views.out /home/dbs/pg-queryplans/postgres/src/test/regress/results/select_views.out
--- /home/dbs/pg-queryplans/postgres/src/test/regress/expected/select_views.out	2024-02-20 13:16:25.975611131 +0900
+++ /home/dbs/pg-queryplans/postgres/src/test/regress/results/select_views.out	2024-02-20 16:07:34.367988428 +0900
@@ -3,6 +3,7 @@
 -- test the views defined in CREATE_VIEWS
 --
 SELECT * FROM street;
+INFO:  Path param info: 0.000000
                 name                |                                                                                                                                                                                                                   thepath                                                                                                                                                                                                                    |   cname   
 ------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------
  Access Rd 25                       | [(-121.9283,37.894),(-121.9283,37.9)]                                                                                                                                                                                                                                                                                                                                                                                                        | Oakland
@@ -341,6 +342,7 @@
 (333 rows)
 
 SELECT name, #thepath FROM iexit ORDER BY name COLLATE "C", 2;
+INFO:  Path param info: 0.000000
                 name                | ?column? 
 ------------------------------------+----------
  I- 580                             |        2
@@ -1400,6 +1402,7 @@
 --           possible as we can.
 --
 SELECT * FROM my_credit_card_normal WHERE f_leak(cnum);
+INFO:  Path param info: 0.000000
 NOTICE:  f_leak => 1111-2222-3333-4444
 NOTICE:  f_leak => 5555-6666-7777-8888
 NOTICE:  f_leak => 9801-2345-6789-0123
@@ -1409,6 +1412,7 @@
 (1 row)
 
 EXPLAIN (COSTS OFF) SELECT * FROM my_credit_card_normal WHERE f_leak(cnum);
+INFO:  Path param info: 0.000000
                  QUERY PLAN                  
 ---------------------------------------------
  Hash Join
@@ -1421,6 +1425,7 @@
 (7 rows)
 
 SELECT * FROM my_credit_card_secure WHERE f_leak(cnum);
+INFO:  Path param info: 0.000000
 NOTICE:  f_leak => 1111-2222-3333-4444
  cid |     name      |       tel        |  passwd   |        cnum         | climit 
 -----+---------------+------------------+-----------+---------------------+--------
@@ -1428,6 +1433,7 @@
 (1 row)
 
 EXPLAIN (COSTS OFF) SELECT * FROM my_credit_card_secure WHERE f_leak(cnum);
+INFO:  Path param info: 0.000000
                     QUERY PLAN                     
 ---------------------------------------------------
  Subquery Scan on my_credit_card_secure
@@ -1447,6 +1453,8 @@
 --
 SELECT * FROM my_credit_card_usage_normal
        WHERE f_leak(cnum) AND ymd >= '2011-10-01' AND ymd < '2011-11-01';
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
 NOTICE:  f_leak => 1111-2222-3333-4444
  cid |     name      |       tel        |  passwd   |        cnum         | climit |    ymd     | usage 
 -----+---------------+------------------+-----------+---------------------+--------+------------+-------
@@ -1457,6 +1465,8 @@
 
 EXPLAIN (COSTS OFF) SELECT * FROM my_credit_card_usage_normal
        WHERE f_leak(cnum) AND ymd >= '2011-10-01' AND ymd < '2011-11-01';
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                   QUERY PLAN                                  
 ------------------------------------------------------------------------------
  Nested Loop
@@ -1476,6 +1486,8 @@
 
 SELECT * FROM my_credit_card_usage_secure
        WHERE f_leak(cnum) AND ymd >= '2011-10-01' AND ymd < '2011-11-01';
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
 NOTICE:  f_leak => 1111-2222-3333-4444
 NOTICE:  f_leak => 1111-2222-3333-4444
 NOTICE:  f_leak => 1111-2222-3333-4444
@@ -1488,6 +1500,8 @@
 
 EXPLAIN (COSTS OFF) SELECT * FROM my_credit_card_usage_secure
        WHERE f_leak(cnum) AND ymd >= '2011-10-01' AND ymd < '2011-11-01';
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                      QUERY PLAN                                     
 ------------------------------------------------------------------------------------
  Subquery Scan on my_credit_card_usage_secure
diff -U3 /home/dbs/pg-queryplans/postgres/src/test/regress/expected/foreign_key.out /home/dbs/pg-queryplans/postgres/src/test/regress/results/foreign_key.out
--- /home/dbs/pg-queryplans/postgres/src/test/regress/expected/foreign_key.out	2024-02-20 13:16:25.959611416 +0900
+++ /home/dbs/pg-queryplans/postgres/src/test/regress/results/foreign_key.out	2024-02-20 16:07:34.631984574 +0900
@@ -151,7 +151,9 @@
 UPDATE FKTABLE SET ftest1 = 1 WHERE ftest1 = 1;
 -- Try altering the column type where foreign keys are involved
 ALTER TABLE PKTABLE ALTER COLUMN ptest1 TYPE bigint;
+INFO:  Path param info: 0.000000
 ALTER TABLE FKTABLE ALTER COLUMN ftest1 TYPE bigint;
+INFO:  Path param info: 0.000000
 SELECT * FROM PKTABLE;
  ptest1 | ptest2 | ptest3  
 --------+--------+---------
@@ -349,6 +351,7 @@
 INSERT INTO PKTABLE VALUES (1, 2);
 INSERT INTO FKTABLE VALUES (1, NULL);
 ALTER TABLE FKTABLE ADD FOREIGN KEY(ftest1, ftest2) REFERENCES PKTABLE MATCH FULL;
+INFO:  Path param info: 0.000000
 ERROR:  insert or update on table "fktable" violates foreign key constraint "fktable_ftest1_ftest2_fkey"
 DETAIL:  MATCH FULL does not allow mixing of null and nonnull key values.
 DROP TABLE FKTABLE;
@@ -1174,20 +1177,26 @@
 -- int4 promotes to real
 ALTER TABLE fktable ADD CONSTRAINT fk_1_3
 FOREIGN KEY (x1) REFERENCES pktable(id3);
+INFO:  Path param info: 0.000000
 -- text is compatible with varchar
 ALTER TABLE fktable ADD CONSTRAINT fk_4_2
 FOREIGN KEY (x4) REFERENCES pktable(id2);
+INFO:  Path param info: 0.000000
 -- int2 is part of integer opfamily as of 8.0
 ALTER TABLE fktable ADD CONSTRAINT fk_5_1
 FOREIGN KEY (x5) REFERENCES pktable(id1);
+INFO:  Path param info: 0.000000
 -- check multikey cases, especially out-of-order column lists
 -- these should work
 ALTER TABLE fktable ADD CONSTRAINT fk_123_123
 FOREIGN KEY (x1,x2,x3) REFERENCES pktable(id1,id2,id3);
+INFO:  Path param info: 0.000000
 ALTER TABLE fktable ADD CONSTRAINT fk_213_213
 FOREIGN KEY (x2,x1,x3) REFERENCES pktable(id2,id1,id3);
+INFO:  Path param info: 0.000000
 ALTER TABLE fktable ADD CONSTRAINT fk_253_213
 FOREIGN KEY (x2,x5,x3) REFERENCES pktable(id2,id1,id3);
+INFO:  Path param info: 0.000000
 -- these should fail
 ALTER TABLE fktable ADD CONSTRAINT fk_123_231
 FOREIGN KEY (x1,x2,x3) REFERENCES pktable(id2,id3,id1);
@@ -1452,6 +1461,7 @@
 create temp table t2 (a integer primary key, b integer references t1);
 create rule r1 as on delete to t1 do delete from t2 where t2.b = old.a;
 explain (costs off) delete from t1 where a = 1;
+INFO:  Path param info: 0.000000
                  QUERY PLAN                 
 --------------------------------------------
  Delete on t2
@@ -1467,6 +1477,7 @@
 (10 rows)
 
 delete from t1 where a = 1;
+INFO:  Path param info: 0.000000
 -- Test a primary key with attributes located in later attnum positions
 -- compared to the fk attributes.
 create table pktable2 (a int, b int, c int, d int, e int, primary key (d, e));
@@ -1581,9 +1592,11 @@
 ALTER TABLE fk_partitioned_fk_1 DROP COLUMN fdrop1, DROP COLUMN fdrop2, DROP COLUMN fdrop3;
 ALTER TABLE fk_partitioned_fk ATTACH PARTITION fk_partitioned_fk_1 FOR VALUES FROM (0,0) TO (1000,1000);
 ALTER TABLE fk_partitioned_fk ADD FOREIGN KEY (a, b) REFERENCES fk_notpartitioned_pk;
+INFO:  Path param info: 0.000000
 CREATE TABLE fk_partitioned_fk_2 (b int, fdrop1 int, fdrop2 int, a int);
 ALTER TABLE fk_partitioned_fk_2 DROP COLUMN fdrop1, DROP COLUMN fdrop2;
 ALTER TABLE fk_partitioned_fk ATTACH PARTITION fk_partitioned_fk_2 FOR VALUES FROM (1000,1000) TO (2000,2000);
+INFO:  Path param info: 0.000000
 CREATE TABLE fk_partitioned_fk_3 (fdrop1 int, fdrop2 int, fdrop3 int, fdrop4 int, b int, a int)
   PARTITION BY HASH (a);
 ALTER TABLE fk_partitioned_fk_3 DROP COLUMN fdrop1, DROP COLUMN fdrop2,
@@ -1592,6 +1605,8 @@
 CREATE TABLE fk_partitioned_fk_3_1 PARTITION OF fk_partitioned_fk_3 FOR VALUES WITH (MODULUS 5, REMAINDER 1);
 ALTER TABLE fk_partitioned_fk ATTACH PARTITION fk_partitioned_fk_3
   FOR VALUES FROM (2000,2000) TO (3000,3000);
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
 -- Creating a foreign key with ONLY on a partitioned table referencing
 -- a non-partitioned table fails.
 ALTER TABLE ONLY fk_partitioned_fk ADD FOREIGN KEY (a, b)
@@ -1655,6 +1670,39 @@
 DETAIL:  Key (a, b)=(2500, 2502) is still referenced from table "fk_partitioned_fk".
 -- check psql behavior
 \d fk_notpartitioned_pk
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
         Table "public.fk_notpartitioned_pk"
  Column |  Type   | Collation | Nullable | Default 
 --------+---------+-----------+----------+---------
@@ -1676,6 +1724,7 @@
 INSERT INTO fk_notpartitioned_pk VALUES (1);
 INSERT INTO fk_partitioned_fk VALUES (1);
 ALTER TABLE fk_notpartitioned_pk ALTER COLUMN a TYPE bigint;
+INFO:  Path param info: 0.000000
 DELETE FROM fk_notpartitioned_pk WHERE a = 1;
 ERROR:  update or delete on table "fk_notpartitioned_pk" violates foreign key constraint "fk_partitioned_fk_a_fkey" on table "fk_partitioned_fk"
 DETAIL:  Key (a)=(1) is still referenced from table "fk_partitioned_fk".
@@ -1688,9 +1737,11 @@
 ALTER TABLE fk_partitioned_fk ADD FOREIGN KEY (a, b)
   REFERENCES fk_notpartitioned_pk MATCH SIMPLE
   ON DELETE SET NULL ON UPDATE SET NULL;
+INFO:  Path param info: 0.000000
 CREATE TABLE fk_partitioned_fk_2 PARTITION OF fk_partitioned_fk FOR VALUES IN (1500,1502);
 CREATE TABLE fk_partitioned_fk_3 (a int, b int);
 ALTER TABLE fk_partitioned_fk ATTACH PARTITION fk_partitioned_fk_3 FOR VALUES IN (2500,2501,2502,2503);
+INFO:  Path param info: 0.000000
 -- this insert fails
 INSERT INTO fk_partitioned_fk (a, b) VALUES (2502, 2503);
 ERROR:  insert or update on table "fk_partitioned_fk_3" violates foreign key constraint "fk_partitioned_fk_a_b_fkey"
@@ -1712,10 +1763,12 @@
 CREATE TABLE fk_partitioned_fk_full_1 PARTITION OF fk_partitioned_fk_full DEFAULT;
 INSERT INTO fk_partitioned_fk_full VALUES (1, NULL);
 ALTER TABLE fk_partitioned_fk_full ADD FOREIGN KEY (x, y) REFERENCES fk_notpartitioned_pk MATCH FULL;  -- fails
+INFO:  Path param info: 0.000000
 ERROR:  insert or update on table "fk_partitioned_fk_full_1" violates foreign key constraint "fk_partitioned_fk_full_x_y_fkey"
 DETAIL:  MATCH FULL does not allow mixing of null and nonnull key values.
 TRUNCATE fk_partitioned_fk_full;
 ALTER TABLE fk_partitioned_fk_full ADD FOREIGN KEY (x, y) REFERENCES fk_notpartitioned_pk MATCH FULL;
+INFO:  Path param info: 0.000000
 INSERT INTO fk_partitioned_fk_full VALUES (1, NULL);  -- fails
 ERROR:  insert or update on table "fk_partitioned_fk_full_1" violates foreign key constraint "fk_partitioned_fk_full_x_y_fkey"
 DETAIL:  MATCH FULL does not allow mixing of null and nonnull key values.
@@ -1757,6 +1810,9 @@
 ALTER TABLE fk_partitioned_fk ADD FOREIGN KEY (a, b)
   REFERENCES fk_notpartitioned_pk
   ON DELETE SET DEFAULT ON UPDATE SET DEFAULT;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
 INSERT INTO fk_notpartitioned_pk VALUES (2502, 2503);
 INSERT INTO fk_partitioned_fk_3 (a, b) VALUES (2502, 2503);
 -- this fails, because the defaults for the referencing table are not present
@@ -1778,6 +1834,9 @@
 ALTER TABLE fk_partitioned_fk ADD FOREIGN KEY (a, b)
   REFERENCES fk_notpartitioned_pk
   ON DELETE SET NULL (a);
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
 BEGIN;
 DELETE FROM fk_notpartitioned_pk WHERE b = 142857;
 SELECT * FROM fk_partitioned_fk WHERE a IS NOT NULL OR b IS NOT NULL ORDER BY a NULLS LAST;
@@ -1793,6 +1852,9 @@
 ALTER TABLE fk_partitioned_fk ADD FOREIGN KEY (a, b)
   REFERENCES fk_notpartitioned_pk
   ON DELETE SET DEFAULT (a);
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
 BEGIN;
 DELETE FROM fk_partitioned_fk;
 DELETE FROM fk_notpartitioned_pk;
@@ -1811,6 +1873,9 @@
 ALTER TABLE fk_partitioned_fk ADD FOREIGN KEY (a, b)
   REFERENCES fk_notpartitioned_pk
   ON DELETE CASCADE ON UPDATE CASCADE;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
 UPDATE fk_notpartitioned_pk SET a = 2502 WHERE a = 2501;
 SELECT * FROM fk_partitioned_fk WHERE b = 142857;
   a   |   b    
@@ -1842,6 +1907,27 @@
 DROP TABLE fk_partitioned_fk;
 -- constraint should still be there
 \d fk_partitioned_fk_2;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
         Table "public.fk_partitioned_fk_2"
  Column |  Type   | Collation | Nullable | Default 
 --------+---------+-----------+----------+---------
@@ -1859,6 +1945,29 @@
 ALTER TABLE fk_partitioned_fk ATTACH PARTITION fk_partitioned_fk_2 FOR VALUES IN (1500,1502);
 -- should have only one constraint
 \d fk_partitioned_fk_2
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
         Table "public.fk_partitioned_fk_2"
  Column |  Type   | Collation | Nullable | Default 
 --------+---------+-----------+----------+---------
@@ -1873,11 +1982,35 @@
 CREATE TABLE fk_partitioned_fk_4_1 PARTITION OF fk_partitioned_fk_4 FOR VALUES FROM (1,1) TO (100,100);
 CREATE TABLE fk_partitioned_fk_4_2 (a int, b int, FOREIGN KEY (a, b) REFERENCES fk_notpartitioned_pk(a, b) ON UPDATE SET NULL);
 ALTER TABLE fk_partitioned_fk_4 ATTACH PARTITION fk_partitioned_fk_4_2 FOR VALUES FROM (100,100) TO (1000,1000);
+INFO:  Path param info: 0.000000
 ALTER TABLE fk_partitioned_fk ATTACH PARTITION fk_partitioned_fk_4 FOR VALUES IN (3500,3502);
 ALTER TABLE fk_partitioned_fk DETACH PARTITION fk_partitioned_fk_4;
 ALTER TABLE fk_partitioned_fk ATTACH PARTITION fk_partitioned_fk_4 FOR VALUES IN (3500,3502);
 -- should only have one constraint
 \d fk_partitioned_fk_4
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
   Partitioned table "public.fk_partitioned_fk_4"
  Column |  Type   | Collation | Nullable | Default 
 --------+---------+-----------+----------+---------
@@ -1890,6 +2023,29 @@
 Number of partitions: 2 (Use \d+ to list them.)
 
 \d fk_partitioned_fk_4_1
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
        Table "public.fk_partitioned_fk_4_1"
  Column |  Type   | Collation | Nullable | Default 
 --------+---------+-----------+----------+---------
@@ -1901,6 +2057,29 @@
 
 -- this one has an FK with mismatched properties
 \d fk_partitioned_fk_4_2
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
        Table "public.fk_partitioned_fk_4_2"
  Column |  Type   | Collation | Nullable | Default 
 --------+---------+-----------+----------+---------
@@ -1918,11 +2097,37 @@
 CREATE TABLE fk_partitioned_fk_5_1 (a int, b int, FOREIGN KEY (a, b) REFERENCES fk_notpartitioned_pk);
 ALTER TABLE fk_partitioned_fk ATTACH PARTITION fk_partitioned_fk_5 FOR VALUES IN (4500);
 ALTER TABLE fk_partitioned_fk_5 ATTACH PARTITION fk_partitioned_fk_5_1 FOR VALUES FROM (0) TO (10);
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
 ALTER TABLE fk_partitioned_fk DETACH PARTITION fk_partitioned_fk_5;
 ALTER TABLE fk_partitioned_fk ATTACH PARTITION fk_partitioned_fk_5 FOR VALUES IN (4500);
 -- this one has two constraints, similar but not quite the one in the parent,
 -- so it gets a new one
 \d fk_partitioned_fk_5
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
   Partitioned table "public.fk_partitioned_fk_5"
  Column |  Type   | Collation | Nullable | Default 
 --------+---------+-----------+----------+---------
@@ -1941,6 +2146,29 @@
 ALTER TABLE fk_partitioned_fk_5 DETACH PARTITION fk_partitioned_fk_5_1;
 ALTER TABLE fk_partitioned_fk_5 ATTACH PARTITION fk_partitioned_fk_5_1 FOR VALUES FROM (0) TO (10);
 \d fk_partitioned_fk_5_1
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
        Table "public.fk_partitioned_fk_5_1"
  Column |  Type   | Collation | Nullable | Default 
 --------+---------+-----------+----------+---------
@@ -1961,11 +2189,14 @@
 INSERT INTO fk_partitioned_fk_2 VALUES (1600, 601), (1600, 1601);
 ALTER TABLE fk_partitioned_fk ATTACH PARTITION fk_partitioned_fk_2
   FOR VALUES IN (1600);
+INFO:  Path param info: 0.000000
 ERROR:  insert or update on table "fk_partitioned_fk_2_1" violates foreign key constraint "fk_partitioned_fk_a_b_fkey"
 DETAIL:  Key (a, b)=(1600, 601) is not present in table "fk_notpartitioned_pk".
 INSERT INTO fk_notpartitioned_pk VALUES (1600, 601), (1600, 1601);
 ALTER TABLE fk_partitioned_fk ATTACH PARTITION fk_partitioned_fk_2
   FOR VALUES IN (1600);
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
 -- leave these tables around intentionally
 -- test the case when the referenced table is owned by a different user
 create role regress_other_partitioned_fk_owner;
@@ -2008,6 +2239,7 @@
     id_abc bigint
 );
 ALTER TABLE parted_self_fk ATTACH PARTITION part1_self_fk FOR VALUES FROM (0) TO (10);
+INFO:  Path param info: -1.000000
 CREATE TABLE part2_self_fk PARTITION OF parted_self_fk FOR VALUES FROM (10) TO (20);
 CREATE TABLE part3_self_fk (	-- a partitioned partition
 	id bigint NOT NULL PRIMARY KEY,
@@ -2015,11 +2247,13 @@
 ) PARTITION BY RANGE (id);
 CREATE TABLE part32_self_fk PARTITION OF part3_self_fk FOR VALUES FROM (20) TO (30);
 ALTER TABLE parted_self_fk ATTACH PARTITION part3_self_fk FOR VALUES FROM (20) TO (40);
+INFO:  Path param info: -1.000000
 CREATE TABLE part33_self_fk (
 	id bigint NOT NULL PRIMARY KEY,
 	id_abc bigint
 );
 ALTER TABLE part3_self_fk ATTACH PARTITION part33_self_fk FOR VALUES FROM (30) TO (40);
+INFO:  Path param info: -1.000000
 SELECT cr.relname, co.conname, co.contype, co.convalidated,
        p.conname AS conparent, p.convalidated, cf.relname AS foreignrel
 FROM pg_constraint co
@@ -2028,6 +2262,45 @@
 LEFT JOIN pg_constraint p ON p.oid = co.conparentid
 WHERE cr.oid IN (SELECT relid FROM pg_partition_tree('parted_self_fk'))
 ORDER BY co.contype, cr.relname, co.conname, p.conname;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
     relname     |          conname           | contype | convalidated |         conparent          | convalidated |   foreignrel   
 ----------------+----------------------------+---------+--------------+----------------------------+--------------+----------------
  part1_self_fk  | parted_self_fk_id_abc_fkey | f       | t            | parted_self_fk_id_abc_fkey | t            | parted_self_fk
@@ -2057,6 +2330,45 @@
 LEFT JOIN pg_constraint p ON p.oid = co.conparentid
 WHERE cr.oid IN (SELECT relid FROM pg_partition_tree('parted_self_fk'))
 ORDER BY co.contype, cr.relname, co.conname, p.conname;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
     relname     |          conname           | contype | convalidated |         conparent          | convalidated |   foreignrel   
 ----------------+----------------------------+---------+--------------+----------------------------+--------------+----------------
  part1_self_fk  | parted_self_fk_id_abc_fkey | f       | t            | parted_self_fk_id_abc_fkey | t            | parted_self_fk
@@ -2088,6 +2400,30 @@
   create table fk_part_23_2 partition of fk_part_23 for values in (2);
 alter table fkpart0.fk_part add foreign key (a) references fkpart0.pkey;
 \d fkpart0.fk_part_1	\\ -- should have only one FK
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
              Table "fkpart0.fk_part_1"
  Column |  Type   | Collation | Nullable | Default 
 --------+---------+-----------+----------+---------
@@ -2099,6 +2435,30 @@
 alter table fkpart0.fk_part_1 drop constraint fk_part_1_a_fkey;
 ERROR:  cannot drop inherited constraint "fk_part_1_a_fkey" of relation "fk_part_1"
 \d fkpart0.fk_part_23	\\ -- should have only one FK
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
       Partitioned table "fkpart0.fk_part_23"
  Column |  Type   | Collation | Nullable | Default 
 --------+---------+-----------+----------+---------
@@ -2110,6 +2470,30 @@
 Number of partitions: 1 (Use \d+ to list them.)
 
 \d fkpart0.fk_part_23_2	\\ -- should have only one FK
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
            Table "fkpart0.fk_part_23_2"
  Column |  Type   | Collation | Nullable | Default 
 --------+---------+-----------+----------+---------
@@ -2124,6 +2508,30 @@
 ERROR:  cannot drop inherited constraint "fk_part_23_a_fkey" of relation "fk_part_23_2"
 create table fkpart0.fk_part_4 partition of fkpart0.fk_part for values in (4);
 \d fkpart0.fk_part_4
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
              Table "fkpart0.fk_part_4"
  Column |  Type   | Collation | Nullable | Default 
 --------+---------+-----------+----------+---------
@@ -2139,6 +2547,30 @@
 create table fkpart0.fk_part_56_5 partition of fkpart0.fk_part_56
     for values in (5);
 \d fkpart0.fk_part_56
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
       Partitioned table "fkpart0.fk_part_56"
  Column |  Type   | Collation | Nullable | Default 
 --------+---------+-----------+----------+---------
@@ -2161,6 +2593,7 @@
   create table fk_part_1 partition of fk_part for values in (1) partition by list (a)
   create table fk_part_1_1 partition of fk_part_1 for values in (1);
 alter table fkpart1.fk_part add foreign key (a) references fkpart1.pkey;
+INFO:  Path param info: 0.000000
 insert into fkpart1.fk_part values (1);		-- should fail
 ERROR:  insert or update on table "fk_part_1_1" violates foreign key constraint "fk_part_a_fkey"
 DETAIL:  Key (a)=(1) is not present in table "pkey".
@@ -2237,9 +2670,11 @@
 CREATE TABLE fk (a int) PARTITION BY RANGE (a);
 CREATE TABLE fk1 PARTITION OF fk FOR VALUES FROM (0) TO (750);
 ALTER TABLE fk ADD FOREIGN KEY (a) REFERENCES pk;
+INFO:  Path param info: -1.000000
 CREATE TABLE fk2 (b int, a int) ;
 ALTER TABLE fk2 DROP COLUMN b;
 ALTER TABLE fk ATTACH PARTITION fk2 FOR VALUES FROM (750) TO (3500);
+INFO:  Path param info: -1.000000
 CREATE TABLE pk3 PARTITION OF pk FOR VALUES FROM (2000) TO (3000);
 CREATE TABLE pk4 (LIKE pk);
 ALTER TABLE pk ATTACH PARTITION pk4 FOR VALUES FROM (3000) TO (4000);
@@ -2338,18 +2773,23 @@
 INSERT into dropfk VALUES (1), (1000), (1500), (2000);
 -- these should all fail
 ALTER TABLE droppk DETACH PARTITION droppk_d;
+INFO:  Path param info: 0.000000
 ERROR:  removing partition "droppk_d" violates foreign key constraint "dropfk_a_fkey5"
 DETAIL:  Key (a)=(2000) is still referenced from table "dropfk".
 ALTER TABLE droppk2 DETACH PARTITION droppk2_d;
+INFO:  Path param info: 0.000000
 ERROR:  removing partition "droppk2_d" violates foreign key constraint "dropfk_a_fkey4"
 DETAIL:  Key (a)=(1500) is still referenced from table "dropfk".
 ALTER TABLE droppk DETACH PARTITION droppk1;
+INFO:  Path param info: 0.000000
 ERROR:  removing partition "droppk1" violates foreign key constraint "dropfk_a_fkey1"
 DETAIL:  Key (a)=(1) is still referenced from table "dropfk".
 ALTER TABLE droppk DETACH PARTITION droppk2;
+INFO:  Path param info: 0.000000
 ERROR:  removing partition "droppk2" violates foreign key constraint "dropfk_a_fkey2"
 DETAIL:  Key (a)=(1000) is still referenced from table "dropfk".
 ALTER TABLE droppk2 DETACH PARTITION droppk21;
+INFO:  Path param info: 0.000000
 ERROR:  removing partition "droppk21" violates foreign key constraint "dropfk_a_fkey3"
 DETAIL:  Key (a)=(1000) is still referenced from table "dropfk".
 -- dropping partitions is disallowed
@@ -2389,6 +2829,7 @@
 HINT:  Use DROP ... CASCADE to drop the dependent objects too.
 -- but DETACH is allowed, and DROP afterwards works
 ALTER TABLE droppk2 DETACH PARTITION droppk21;
+INFO:  Path param info: 0.000000
 DROP TABLE droppk2;
 ERROR:  cannot drop table droppk2 because other objects depend on it
 DETAIL:  constraint dropfk_a_fkey on table dropfk depends on table droppk2
@@ -2403,6 +2844,7 @@
 CREATE TABLE fk1 PARTITION OF fk FOR VALUES IN (1) PARTITION BY LIST (a);
 CREATE TABLE fk11 PARTITION OF fk1 FOR VALUES IN (1);
 ALTER TABLE fk ADD FOREIGN KEY (a) REFERENCES pk;
+INFO:  Path param info: -1.000000
 CREATE TABLE pk2 PARTITION OF pk FOR VALUES IN (2);
 CREATE TABLE pk3 (a int NOT NULL) PARTITION BY LIST (a);
 CREATE TABLE pk31 PARTITION OF pk3 FOR VALUES IN (31);
@@ -2414,11 +2856,13 @@
 CREATE TABLE fk3 (b int, a int);
 ALTER TABLE fk3 DROP COLUMN b;
 ALTER TABLE fk ATTACH PARTITION fk3 FOR VALUES IN (3);
+INFO:  Path param info: -1.000000
 SELECT pg_describe_object('pg_constraint'::regclass, oid, 0), confrelid::regclass,
        CASE WHEN conparentid <> 0 THEN pg_describe_object('pg_constraint'::regclass, conparentid, 0) ELSE 'TOP' END
 FROM pg_catalog.pg_constraint
 WHERE conrelid IN (SELECT relid FROM pg_partition_tree('fk'))
 ORDER BY conrelid::regclass::text, conname;
+INFO:  Path param info: 0.000000
          pg_describe_object         | confrelid |               case                
 ------------------------------------+-----------+-----------------------------------
  constraint fk_a_fkey on table fk   | pk        | TOP
@@ -2437,6 +2881,7 @@
 CREATE TABLE fk4 (LIKE fk);
 INSERT INTO fk4 VALUES (50);
 ALTER TABLE fk ATTACH PARTITION fk4 FOR VALUES IN (50);
+INFO:  Path param info: -1.000000
 ERROR:  insert or update on table "fk4" violates foreign key constraint "fk_a_fkey"
 DETAIL:  Key (a)=(50) is not present in table "pk".
 -- Verify constraint deferrability
@@ -2474,6 +2919,8 @@
 CREATE TABLE ref1 PARTITION OF ref FOR VALUES IN (1);
 CREATE TABLE ref2 PARTITION OF ref FOR VALUES in (2);
 ALTER TABLE ref ADD FOREIGN KEY(f1,f2) REFERENCES pt;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
 ALTER TABLE ref ALTER CONSTRAINT ref_f1_f2_fkey
   DEFERRABLE INITIALLY DEFERRED;
 INSERT INTO pt VALUES(1,2,3);
@@ -2492,6 +2939,8 @@
 CREATE TABLE ref2 PARTITION OF ref1_2 FOR VALUES IN (2) PARTITION BY list (f2);
 CREATE TABLE ref22 PARTITION OF ref2 FOR VALUES IN (2);
 ALTER TABLE ref ADD FOREIGN KEY(f1,f2) REFERENCES pt;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
 INSERT INTO pt VALUES(1,2,3);
 INSERT INTO ref VALUES(1,2,3);
 ALTER TABLE ref22 ALTER CONSTRAINT ref_f1_f2_fkey
@@ -2513,6 +2962,7 @@
 CREATE TABLE pt2 PARTITION OF pt FOR VALUES IN (2);
 CREATE TABLE ref(f1 int, f2 int, f3 int);
 ALTER TABLE ref ADD FOREIGN KEY(f1,f2) REFERENCES pt;
+INFO:  Path param info: -1.000000
 ALTER TABLE ref ALTER CONSTRAINT ref_f1_f2_fkey
   DEFERRABLE INITIALLY DEFERRED;
 INSERT INTO pt VALUES(1,2,3);
@@ -2530,6 +2980,7 @@
 CREATE TABLE pt2 PARTITION OF pt1_2 FOR VALUES IN (2);
 CREATE TABLE ref(f1 int, f2 int, f3 int);
 ALTER TABLE ref ADD FOREIGN KEY(f1,f2) REFERENCES pt;
+INFO:  Path param info: -1.000000
 ALTER TABLE ref ALTER CONSTRAINT ref_f1_f2_fkey1
   DEFERRABLE INITIALLY DEFERRED;	-- fails
 ERROR:  cannot alter constraint "ref_f1_f2_fkey1" on relation "ref"
@@ -2560,6 +3011,8 @@
 CREATE TABLE fk11 PARTITION OF fk1 FOR VALUES FROM (1) TO (10);
 CREATE TABLE fk12 PARTITION OF fk1 FOR VALUES FROM (10) TO (100);
 ALTER TABLE fk ADD FOREIGN KEY (a) REFERENCES pk ON UPDATE CASCADE ON DELETE CASCADE;
+INFO:  Path param info: -1.000000
+INFO:  Path param info: -1.000000
 CREATE TABLE fk_d PARTITION OF fk DEFAULT;
 INSERT INTO pk VALUES (1);
 INSERT INTO fk VALUES (1);
@@ -2584,6 +3037,8 @@
 CREATE TABLE fk11 PARTITION OF fk1 FOR VALUES FROM (1) TO (10);
 CREATE TABLE fk12 PARTITION OF fk1 FOR VALUES FROM (10) TO (100);
 ALTER TABLE fk ADD FOREIGN KEY (a) REFERENCES pk ON UPDATE SET NULL ON DELETE SET NULL;
+INFO:  Path param info: -1.000000
+INFO:  Path param info: -1.000000
 CREATE TABLE fk_d PARTITION OF fk DEFAULT;
 INSERT INTO fk VALUES (20), (50);
 UPDATE pk SET a = 21 WHERE a = 20;
@@ -2603,6 +3058,8 @@
 CREATE TABLE fk11 PARTITION OF fk1 FOR VALUES FROM (1) TO (10);
 CREATE TABLE fk12 PARTITION OF fk1 FOR VALUES FROM (10) TO (100);
 ALTER TABLE fk ADD FOREIGN KEY (a) REFERENCES pk ON UPDATE SET DEFAULT ON DELETE SET DEFAULT;
+INFO:  Path param info: -1.000000
+INFO:  Path param info: -1.000000
 CREATE TABLE fk_d PARTITION OF fk DEFAULT;
 INSERT INTO fk VALUES (1, 20), (2, 30);
 DELETE FROM pk WHERE a = 20 RETURNING *;
@@ -2632,6 +3089,8 @@
 CREATE TABLE fk11 PARTITION OF fk1 FOR VALUES FROM (1) TO (10);
 CREATE TABLE fk12 PARTITION OF fk1 FOR VALUES FROM (10) TO (100);
 ALTER TABLE fk ADD FOREIGN KEY (a) REFERENCES pk ON UPDATE RESTRICT ON DELETE RESTRICT;
+INFO:  Path param info: -1.000000
+INFO:  Path param info: -1.000000
 CREATE TABLE fk_d PARTITION OF fk DEFAULT;
 INSERT INTO fk VALUES (20), (30);
 DELETE FROM pk WHERE a = 20;
@@ -2841,6 +3300,7 @@
 ALTER TABLE fkpart11.fk DROP CONSTRAINT fkey;
 DELETE FROM fkpart11.fk WHERE a = 4;
 ALTER TABLE fkpart11.fk ADD CONSTRAINT fkey FOREIGN KEY (a) REFERENCES fkpart11.pk1 (a) ON UPDATE CASCADE ON DELETE CASCADE;
+INFO:  Path param info: -1.000000
 UPDATE fkpart11.pk SET a = a - 1;
 ERROR:  cannot move tuple across partitions when a non-root ancestor of the source partition is directly referenced in a foreign key
 DETAIL:  A foreign key points to ancestor "pk1" but not the root ancestor "pk".
@@ -2880,6 +3340,7 @@
 -- is allowed to succeed
 ALTER TABLE fkpart11.fk DROP CONSTRAINT fkey;
 ALTER TABLE fkpart11.fk ADD CONSTRAINT fkey FOREIGN KEY (a) REFERENCES fkpart11.pk11 (a) ON UPDATE CASCADE ON DELETE CASCADE;
+INFO:  Path param info: 0.000000
 -- will delete (1) from p11 which is cascaded to fk
 UPDATE fkpart11.pk SET a = a + 1 WHERE a = 1;
 SELECT tableoid::pg_catalog.regclass, * FROM fkpart11.fk;
diff -U3 /home/dbs/pg-queryplans/postgres/src/test/regress/expected/cluster.out /home/dbs/pg-queryplans/postgres/src/test/regress/results/cluster.out
--- /home/dbs/pg-queryplans/postgres/src/test/regress/expected/cluster.out	2024-02-20 13:16:25.955611488 +0900
+++ /home/dbs/pg-queryplans/postgres/src/test/regress/results/cluster.out	2024-02-20 16:07:34.411987785 +0900
@@ -277,6 +277,11 @@
 	AND indrelid=pg_class_2.oid
 	AND pg_class_2.relname = 'clstr_tst'
 	AND indisclustered;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
    relname   
 -------------
  clstr_tst_c
@@ -289,6 +294,11 @@
 	AND indrelid=pg_class_2.oid
 	AND pg_class_2.relname = 'clstr_tst'
 	AND indisclustered;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
     relname    
 ---------------
  clstr_tst_b_c
@@ -301,6 +311,11 @@
 	AND indrelid=pg_class_2.oid
 	AND pg_class_2.relname = 'clstr_tst'
 	AND indisclustered;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  relname 
 ---------
 (0 rows)
@@ -461,9 +476,13 @@
 CREATE INDEX clstrpart_idx ON clstrpart (a);
 -- Check that clustering sets new relfilenodes:
 CREATE TEMP TABLE old_cluster_info AS SELECT relname, level, relfilenode, relkind FROM pg_partition_tree('clstrpart'::regclass) AS tree JOIN pg_class c ON c.oid=tree.relid ;
+INFO:  Path param info: 0.000000
 CLUSTER clstrpart USING clstrpart_idx;
 CREATE TEMP TABLE new_cluster_info AS SELECT relname, level, relfilenode, relkind FROM pg_partition_tree('clstrpart'::regclass) AS tree JOIN pg_class c ON c.oid=tree.relid ;
+INFO:  Path param info: 0.000000
 SELECT relname, old.level, old.relkind, old.relfilenode = new.relfilenode FROM old_cluster_info AS old JOIN new_cluster_info AS new USING (relname) ORDER BY relname COLLATE "C";
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
    relname   | level | relkind | ?column? 
 -------------+-------+---------+----------
  clstrpart   |     0 | p       | t
@@ -477,6 +496,38 @@
 
 -- Partitioned indexes aren't and can't be marked un/clustered:
 \d clstrpart
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
        Partitioned table "public.clstrpart"
  Column |  Type   | Collation | Nullable | Default 
 --------+---------+-----------+----------+---------
@@ -504,11 +555,14 @@
 CREATE TEMP TABLE ptnowner_oldnodes AS
   SELECT oid, relname, relfilenode FROM pg_partition_tree('ptnowner') AS tree
   JOIN pg_class AS c ON c.oid=tree.relid;
+INFO:  Path param info: 0.000000
 SET SESSION AUTHORIZATION regress_ptnowner;
 CLUSTER ptnowner USING ptnowner_i_idx;
 RESET SESSION AUTHORIZATION;
 SELECT a.relname, a.relfilenode=b.relfilenode FROM pg_class a
   JOIN ptnowner_oldnodes b USING (oid) ORDER BY a.relname COLLATE "C";
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
   relname  | ?column? 
 -----------+----------
  ptnowner  | t
diff -U3 /home/dbs/pg-queryplans/postgres/src/test/regress/expected/dependency.out /home/dbs/pg-queryplans/postgres/src/test/regress/results/dependency.out
--- /home/dbs/pg-queryplans/postgres/src/test/regress/expected/dependency.out	2024-02-20 13:16:25.955611488 +0900
+++ /home/dbs/pg-queryplans/postgres/src/test/regress/results/dependency.out	2024-02-20 16:07:34.327989012 +0900
@@ -67,6 +67,7 @@
 GRANT ALL ON deptest1 TO regress_dep_user2;
 RESET SESSION AUTHORIZATION;
 \z deptest1
+INFO:  Path param info: 0.000000
                                                Access privileges
  Schema |   Name   | Type  |                 Access privileges                  | Column privileges | Policies 
 --------+----------+-------+----------------------------------------------------+-------------------+----------
@@ -78,6 +79,7 @@
 DROP OWNED BY regress_dep_user1;
 -- all grants revoked
 \z deptest1
+INFO:  Path param info: 0.000000
                                            Access privileges
  Schema |   Name   | Type  |              Access privileges              | Column privileges | Policies 
 --------+----------+-------+---------------------------------------------+-------------------+----------
@@ -86,6 +88,7 @@
 
 -- table was dropped
 \d deptest
+INFO:  Path param info: 0.000000
 -- Test REASSIGN OWNED
 GRANT ALL ON deptest1 TO regress_dep_user1;
 GRANT CREATE ON DATABASE regression TO regress_dep_user1;
@@ -108,6 +111,7 @@
 CREATE TYPE deptest_t AS (a int);
 SELECT typowner = relowner
 FROM pg_type JOIN pg_class c ON typrelid = c.oid WHERE typname = 'deptest_t';
+INFO:  Path param info: 0.000000
  ?column? 
 ----------
  t
@@ -116,6 +120,7 @@
 RESET SESSION AUTHORIZATION;
 REASSIGN OWNED BY regress_dep_user1 TO regress_dep_user2;
 \dt deptest
+INFO:  Path param info: 0.000000
               List of relations
  Schema |  Name   | Type  |       Owner       
 --------+---------+-------+-------------------
@@ -124,6 +129,7 @@
 
 SELECT typowner = relowner
 FROM pg_type JOIN pg_class c ON typrelid = c.oid WHERE typname = 'deptest_t';
+INFO:  Path param info: 0.000000
  ?column? 
 ----------
  t
diff -U3 /home/dbs/pg-queryplans/postgres/src/test/regress/expected/guc.out /home/dbs/pg-queryplans/postgres/src/test/regress/results/guc.out
--- /home/dbs/pg-queryplans/postgres/src/test/regress/expected/guc.out	2024-02-20 13:16:25.959611416 +0900
+++ /home/dbs/pg-queryplans/postgres/src/test/regress/results/guc.out	2024-02-20 16:07:34.327989012 +0900
@@ -845,6 +845,7 @@
     'RUNTIME_COMPUTED' = ANY(flags) AS runtime_computed
   FROM pg_show_all_settings() AS psas,
     pg_settings_get_flags(psas.name) AS flags;
+INFO:  Path param info: 0.000000
 -- Developer GUCs should be flagged with GUC_NOT_IN_SAMPLE:
 SELECT name FROM tab_settings_flags
   WHERE category = 'Developer Options' AND NOT not_in_sample
diff -U3 /home/dbs/pg-queryplans/postgres/src/test/regress/expected/tsearch.out /home/dbs/pg-queryplans/postgres/src/test/regress/results/tsearch.out
--- /home/dbs/pg-queryplans/postgres/src/test/regress/expected/tsearch.out	2024-02-20 13:16:25.975611131 +0900
+++ /home/dbs/pg-queryplans/postgres/src/test/regress/results/tsearch.out	2024-02-20 16:07:34.419987669 +0900
@@ -53,6 +53,7 @@
     ON (tt.cfgid=m.mapcfg AND tt.tokid=m.maptokentype)
 WHERE
     tt.cfgid IS NULL OR tt.tokid IS NULL;
+INFO:  Path param info: 0.000000
  cfgid | tokid | mapcfg | maptokentype | mapseqno | mapdict 
 -------+-------+--------+--------------+----------+---------
 (0 rows)
@@ -537,6 +538,33 @@
 ERROR:  parameter "siglen" specified more than once
 CREATE INDEX wowidx2 ON test_tsvector USING gist (a tsvector_ops(siglen=1));
 \d test_tsvector
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
             Table "public.test_tsvector"
  Column |   Type   | Collation | Nullable | Default 
 --------+----------+-----------+----------+---------
@@ -704,6 +732,33 @@
 DROP INDEX wowidx2;
 CREATE INDEX wowidx ON test_tsvector USING gist (a tsvector_ops(siglen=484));
 \d test_tsvector
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
             Table "public.test_tsvector"
  Column |   Type   | Collation | Nullable | Default 
 --------+----------+-----------+----------+---------
@@ -1292,6 +1347,7 @@
 
 -- ts_debug
 SELECT * from ts_debug('english', '<myns:foo-bar_baz.blurfl>abc&nm1;def&#xa9;ghi&#245;jkl</myns:foo-bar_baz.blurfl>');
+INFO:  Path param info: 0.000000
    alias   |   description   |           token            |  dictionaries  |  dictionary  | lexemes 
 -----------+-----------------+----------------------------+----------------+--------------+---------
  tag       | XML tag         | <myns:foo-bar_baz.blurfl>  | {}             |              | 
@@ -1307,6 +1363,7 @@
 
 -- check parsing of URLs
 SELECT * from ts_debug('english', 'http://www.harewoodsolutions.co.uk/press.aspx</span>');
+INFO:  Path param info: 0.000000
   alias   |  description  |                 token                  | dictionaries | dictionary |                 lexemes                  
 ----------+---------------+----------------------------------------+--------------+------------+------------------------------------------
  protocol | Protocol head | http://                                | {}           |            | 
@@ -1317,6 +1374,7 @@
 (5 rows)
 
 SELECT * from ts_debug('english', 'http://aew.wer0c.ewr/id?ad=qwe&dw<span>');
+INFO:  Path param info: 0.000000
   alias   |  description  |           token            | dictionaries | dictionary |           lexemes            
 ----------+---------------+----------------------------+--------------+------------+------------------------------
  protocol | Protocol head | http://                    | {}           |            | 
@@ -1327,6 +1385,7 @@
 (5 rows)
 
 SELECT * from ts_debug('english', 'http://5aew.werc.ewr:8100/?');
+INFO:  Path param info: 0.000000
   alias   |  description  |        token         | dictionaries | dictionary |        lexemes         
 ----------+---------------+----------------------+--------------+------------+------------------------
  protocol | Protocol head | http://              | {}           |            | 
@@ -1336,6 +1395,7 @@
 (4 rows)
 
 SELECT * from ts_debug('english', '5aew.werc.ewr:8100/?xx');
+INFO:  Path param info: 0.000000
   alias   | description |         token          | dictionaries | dictionary |         lexemes          
 ----------+-------------+------------------------+--------------+------------+--------------------------
  url      | URL         | 5aew.werc.ewr:8100/?xx | {simple}     | simple     | {5aew.werc.ewr:8100/?xx}
@@ -1347,6 +1407,7 @@
   dictionaries, dictionaries is null as dnull, array_dims(dictionaries) as ddims,
   lexemes, lexemes is null as lnull, array_dims(lexemes) as ldims
 from ts_debug('english', 'a title');
+INFO:  Path param info: 0.000000
  token |   alias   |  dictionaries  | dnull | ddims | lexemes | lnull | ldims 
 -------+-----------+----------------+-------+-------+---------+-------+-------
  a     | asciiword | {english_stem} | f     | [1:1] | {}      | f     | 
@@ -2517,6 +2578,7 @@
 -- to_tsquery(text) is not immutable, so it won't be inlined
 explain (costs off)
 select * from test_tsquery, to_tsquery('new') q where txtsample @@ q;
+INFO:  Path param info: 0.000000
                    QUERY PLAN                   
 ------------------------------------------------
  Nested Loop
diff -U3 /home/dbs/pg-queryplans/postgres/src/test/regress/expected/foreign_data.out /home/dbs/pg-queryplans/postgres/src/test/regress/results/foreign_data.out
--- /home/dbs/pg-queryplans/postgres/src/test/regress/expected/foreign_data.out	2024-02-20 13:16:25.959611416 +0900
+++ /home/dbs/pg-queryplans/postgres/src/test/regress/results/foreign_data.out	2024-02-20 16:07:34.503986442 +0900
@@ -60,6 +60,8 @@
 DROP FOREIGN DATA WRAPPER foo;
 CREATE FOREIGN DATA WRAPPER foo OPTIONS (testing '1');
 \dew+
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                                  List of foreign-data wrappers
     Name    |           Owner           | Handler |        Validator         | Access privileges |  FDW options  | Description 
 ------------+---------------------------+---------+--------------------------+-------------------+---------------+-------------
@@ -73,6 +75,8 @@
 ERROR:  option "testing" provided more than once
 CREATE FOREIGN DATA WRAPPER foo OPTIONS (testing '1', another '2');
 \dew+
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                                        List of foreign-data wrappers
     Name    |           Owner           | Handler |        Validator         | Access privileges |        FDW options         | Description 
 ------------+---------------------------+---------+--------------------------+-------------------+----------------------------+-------------
@@ -89,6 +93,8 @@
 RESET ROLE;
 CREATE FOREIGN DATA WRAPPER foo VALIDATOR postgresql_fdw_validator;
 \dew+
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                                 List of foreign-data wrappers
     Name    |           Owner           | Handler |        Validator         | Access privileges | FDW options | Description 
 ------------+---------------------------+---------+--------------------------+-------------------+-------------+-------------
@@ -119,6 +125,8 @@
 ERROR:  function bar(text[], oid) does not exist
 ALTER FOREIGN DATA WRAPPER foo NO VALIDATOR;
 \dew+
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                                 List of foreign-data wrappers
     Name    |           Owner           | Handler |        Validator         | Access privileges | FDW options | Description 
 ------------+---------------------------+---------+--------------------------+-------------------+-------------+-------------
@@ -134,6 +142,8 @@
 ERROR:  option "c" not found
 ALTER FOREIGN DATA WRAPPER foo OPTIONS (ADD x '1', DROP x);
 \dew+
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                                  List of foreign-data wrappers
     Name    |           Owner           | Handler |        Validator         | Access privileges |  FDW options   | Description 
 ------------+---------------------------+---------+--------------------------+-------------------+----------------+-------------
@@ -144,6 +154,8 @@
 
 ALTER FOREIGN DATA WRAPPER foo OPTIONS (DROP a, SET b '3', ADD c '4');
 \dew+
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                                  List of foreign-data wrappers
     Name    |           Owner           | Handler |        Validator         | Access privileges |  FDW options   | Description 
 ------------+---------------------------+---------+--------------------------+-------------------+----------------+-------------
@@ -156,6 +168,8 @@
 ALTER FOREIGN DATA WRAPPER foo OPTIONS (b '4');             -- ERROR
 ERROR:  option "b" provided more than once
 \dew+
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                                      List of foreign-data wrappers
     Name    |           Owner           | Handler |        Validator         | Access privileges |      FDW options      | Description 
 ------------+---------------------------+---------+--------------------------+-------------------+-----------------------+-------------
@@ -171,6 +185,8 @@
 SET ROLE regress_test_role_super;
 ALTER FOREIGN DATA WRAPPER foo OPTIONS (ADD d '5');
 \dew+
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                                         List of foreign-data wrappers
     Name    |           Owner           | Handler |        Validator         | Access privileges |         FDW options          | Description 
 ------------+---------------------------+---------+--------------------------+-------------------+------------------------------+-------------
@@ -190,6 +206,8 @@
 HINT:  Must be superuser to alter a foreign-data wrapper.
 RESET ROLE;
 \dew+
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                                         List of foreign-data wrappers
     Name    |           Owner           | Handler |        Validator         | Access privileges |         FDW options          | Description 
 ------------+---------------------------+---------+--------------------------+-------------------+------------------------------+-------------
@@ -200,6 +218,8 @@
 
 ALTER FOREIGN DATA WRAPPER foo RENAME TO foo1;
 \dew+
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                                         List of foreign-data wrappers
     Name    |           Owner           | Handler |        Validator         | Access privileges |         FDW options          | Description 
 ------------+---------------------------+---------+--------------------------+-------------------+------------------------------+-------------
@@ -225,6 +245,8 @@
 DROP FOREIGN DATA WRAPPER IF EXISTS nonexistent;
 NOTICE:  foreign-data wrapper "nonexistent" does not exist, skipping
 \dew+
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                                              List of foreign-data wrappers
     Name    |           Owner           |     Handler      |        Validator         | Access privileges |         FDW options          | Description 
 ------------+---------------------------+------------------+--------------------------+-------------------+------------------------------+-------------
@@ -241,6 +263,8 @@
 RESET ROLE;
 DROP ROLE regress_test_role_super;
 \dew+
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                                 List of foreign-data wrappers
     Name    |           Owner           | Handler |        Validator         | Access privileges | FDW options | Description 
 ------------+---------------------------+---------+--------------------------+-------------------+-------------+-------------
@@ -257,6 +281,8 @@
 CREATE USER MAPPING IF NOT EXISTS FOR current_user SERVER s1; -- NOTICE
 NOTICE:  user mapping for "regress_foreign_data_user" already exists for server "s1", skipping
 \dew+
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                                 List of foreign-data wrappers
     Name    |           Owner           | Handler |        Validator         | Access privileges | FDW options | Description 
 ------------+---------------------------+---------+--------------------------+-------------------+-------------+-------------
@@ -266,6 +292,13 @@
 (3 rows)
 
 \des+
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                                    List of foreign servers
  Name |           Owner           | Foreign-data wrapper | Access privileges | Type | Version | FDW options |  Description   
 ------+---------------------------+----------------------+-------------------+------+---------+-------------+----------------
@@ -273,6 +306,12 @@
 (1 row)
 
 \deu+
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
               List of user mappings
  Server |         User name         | FDW options 
 --------+---------------------------+-------------
@@ -293,6 +332,8 @@
 DETAIL:  drop cascades to server s1
 drop cascades to user mapping for regress_foreign_data_user on server s1
 \dew+
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                                 List of foreign-data wrappers
     Name    |           Owner           | Handler |        Validator         | Access privileges | FDW options | Description 
 ------------+---------------------------+---------+--------------------------+-------------------+-------------+-------------
@@ -301,12 +342,25 @@
 (2 rows)
 
 \des+
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                        List of foreign servers
  Name | Owner | Foreign-data wrapper | Access privileges | Type | Version | FDW options | Description 
 ------+-------+----------------------+-------------------+------+---------+-------------+-------------
 (0 rows)
 
 \deu+
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
       List of user mappings
  Server | User name | FDW options 
 --------+-----------+-------------
@@ -331,6 +385,13 @@
 ERROR:  invalid option "foo"
 CREATE SERVER s8 FOREIGN DATA WRAPPER postgresql OPTIONS (host 'localhost', dbname 's8db');
 \des+
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                                              List of foreign servers
  Name |           Owner           | Foreign-data wrapper | Access privileges |  Type  | Version |            FDW options            | Description 
 ------+---------------------------+----------------------+-------------------+--------+---------+-----------------------------------+-------------
@@ -353,6 +414,13 @@
 CREATE SERVER t1 FOREIGN DATA WRAPPER foo;
 RESET ROLE;
 \des+
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                                              List of foreign servers
  Name |           Owner           | Foreign-data wrapper | Access privileges |  Type  | Version |            FDW options            | Description 
 ------+---------------------------+----------------------+-------------------+--------+---------+-----------------------------------+-------------
@@ -377,6 +445,13 @@
 SET ROLE regress_test_role;
 CREATE SERVER t2 FOREIGN DATA WRAPPER foo;
 \des+
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                                              List of foreign servers
  Name |           Owner           | Foreign-data wrapper | Access privileges |  Type  | Version |            FDW options            | Description 
 ------+---------------------------+----------------------+-------------------+--------+---------+-----------------------------------+-------------
@@ -407,6 +482,13 @@
 GRANT USAGE ON FOREIGN SERVER s1 TO regress_test_role;
 GRANT USAGE ON FOREIGN SERVER s6 TO regress_test_role2 WITH GRANT OPTION;
 \des+
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                                                                List of foreign servers
  Name |           Owner           | Foreign-data wrapper |                   Access privileges                   |  Type  | Version |            FDW options            | Description 
 ------+---------------------------+----------------------+-------------------------------------------------------+--------+---------+-----------------------------------+-------------
@@ -457,6 +539,13 @@
 DETAIL:  privileges for foreign-data wrapper foo
 owner of server s1
 \des+
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                                                                  List of foreign servers
  Name |           Owner           | Foreign-data wrapper |                   Access privileges                   |  Type  | Version |             FDW options              | Description 
 ------+---------------------------+----------------------+-------------------------------------------------------+--------+---------+--------------------------------------+-------------
@@ -475,6 +564,13 @@
 
 ALTER SERVER s8 RENAME to s8new;
 \des+
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                                                                  List of foreign servers
  Name  |           Owner           | Foreign-data wrapper |                   Access privileges                   |  Type  | Version |             FDW options              | Description 
 -------+---------------------------+----------------------+-------------------------------------------------------+--------+---------+--------------------------------------+-------------
@@ -498,6 +594,8 @@
 DROP SERVER IF EXISTS nonexistent;
 NOTICE:  server "nonexistent" does not exist, skipping
 \des
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                  List of foreign servers
  Name |           Owner           | Foreign-data wrapper 
 ------+---------------------------+----------------------
@@ -519,6 +617,8 @@
 DROP SERVER s1;
 RESET ROLE;
 \des
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                  List of foreign servers
  Name |           Owner           | Foreign-data wrapper 
 ------+---------------------------+----------------------
@@ -538,6 +638,8 @@
 DROP SERVER s2;
 RESET ROLE;
 \des
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                  List of foreign servers
  Name |           Owner           | Foreign-data wrapper 
 ------+---------------------------+----------------------
@@ -553,6 +655,12 @@
 
 CREATE USER MAPPING FOR current_user SERVER s3;
 \deu
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
        List of user mappings
  Server |         User name         
 --------+---------------------------
@@ -566,6 +674,8 @@
 DROP SERVER s3 CASCADE;
 NOTICE:  drop cascades to user mapping for regress_foreign_data_user on server s3
 \des
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                  List of foreign servers
  Name |           Owner           | Foreign-data wrapper 
 ------+---------------------------+----------------------
@@ -579,6 +689,12 @@
 (7 rows)
 
 \deu
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
 List of user mappings
  Server | User name 
 --------+-----------
@@ -613,6 +729,12 @@
 CREATE USER MAPPING FOR public SERVER t1;
 RESET ROLE;
 \deu
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
        List of user mappings
  Server |         User name         
 --------+---------------------------
@@ -643,6 +765,12 @@
 ALTER USER MAPPING FOR public SERVER t1 OPTIONS (ADD modified '1');
 RESET ROLE;
 \deu+
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                          List of user mappings
  Server |         User name         |           FDW options            
 --------+---------------------------+----------------------------------
@@ -675,6 +803,12 @@
 RESET ROLE;
 DROP SERVER s7;
 \deu
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
        List of user mappings
  Server |         User name         
 --------+---------------------------
@@ -733,6 +867,26 @@
 COMMENT ON FOREIGN TABLE ft1 IS 'ft1';
 COMMENT ON COLUMN ft1.c1 IS 'ft1.c1';
 \d+ ft1
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                                  Foreign table "public.ft1"
  Column |  Type   | Collation | Nullable | Default |          FDW options           | Storage  | Stats target | Description 
 --------+---------+-----------+----------+---------+--------------------------------+----------+--------------+-------------
@@ -746,6 +900,32 @@
 FDW options: (delimiter ',', quote '"', "be quoted" 'value')
 
 \det+
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                  List of foreign tables
  Schema | Table | Server |                   FDW options                   | Description 
 --------+-------+--------+-------------------------------------------------+-------------
@@ -848,6 +1028,26 @@
 ALTER FOREIGN TABLE ft1 ALTER COLUMN c8 SET STATISTICS -1;
 ALTER FOREIGN TABLE ft1 ALTER COLUMN c8 SET STORAGE PLAIN;
 \d+ ft1
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                                  Foreign table "public.ft1"
  Column |  Type   | Collation | Nullable | Default |          FDW options           | Storage  | Stats target | Description 
 --------+---------+-----------+----------+---------+--------------------------------+----------+--------------+-------------
@@ -898,6 +1098,25 @@
 ALTER FOREIGN TABLE foreign_schema.ft1 RENAME c1 TO foreign_column_1;
 ALTER FOREIGN TABLE foreign_schema.ft1 RENAME TO foreign_table_1;
 \d foreign_schema.foreign_table_1
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                         Foreign table "foreign_schema.foreign_table_1"
       Column      |  Type   | Collation | Nullable | Default |          FDW options           
 ------------------+---------+-----------+----------+---------+--------------------------------
@@ -962,6 +1181,8 @@
 NOTICE:  relation "doesnt_exist_ft1" does not exist, skipping
 -- Information schema
 SELECT * FROM information_schema.foreign_data_wrappers ORDER BY 1, 2;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  foreign_data_wrapper_catalog | foreign_data_wrapper_name | authorization_identifier  | library_name | foreign_data_wrapper_language 
 ------------------------------+---------------------------+---------------------------+--------------+-------------------------------
  regression                   | dummy                     | regress_foreign_data_user |              | c
@@ -970,12 +1191,19 @@
 (3 rows)
 
 SELECT * FROM information_schema.foreign_data_wrapper_options ORDER BY 1, 2, 3;
+INFO:  Path param info: 0.000000
  foreign_data_wrapper_catalog | foreign_data_wrapper_name | option_name  | option_value 
 ------------------------------+---------------------------+--------------+--------------
  regression                   | foo                       | test wrapper | true
 (1 row)
 
 SELECT * FROM information_schema.foreign_servers ORDER BY 1, 2;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  foreign_server_catalog | foreign_server_name | foreign_data_wrapper_catalog | foreign_data_wrapper_name | foreign_server_type | foreign_server_version | authorization_identifier  
 ------------------------+---------------------+------------------------------+---------------------------+---------------------+------------------------+---------------------------
  regression             | s0                  | regression                   | dummy                     |                     |                        | regress_foreign_data_user
@@ -988,6 +1216,9 @@
 (7 rows)
 
 SELECT * FROM information_schema.foreign_server_options ORDER BY 1, 2, 3;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  foreign_server_catalog | foreign_server_name |   option_name   | option_value 
 ------------------------+---------------------+-----------------+--------------
  regression             | s4                  | dbname          | b
@@ -999,6 +1230,25 @@
 (6 rows)
 
 SELECT * FROM information_schema.user_mappings ORDER BY lower(authorization_identifier), 2, 3;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  authorization_identifier  | foreign_server_catalog | foreign_server_name 
 ---------------------------+------------------------+---------------------
  PUBLIC                    | regression             | s4
@@ -1012,6 +1262,40 @@
 (8 rows)
 
 SELECT * FROM information_schema.user_mapping_options ORDER BY lower(authorization_identifier), 2, 3, 4;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  authorization_identifier  | foreign_server_catalog | foreign_server_name | option_name  | option_value 
 ---------------------------+------------------------+---------------------+--------------+--------------
  PUBLIC                    | regression             | s4                  | this mapping | is public
@@ -1024,6 +1308,44 @@
 (7 rows)
 
 SELECT * FROM information_schema.usage_privileges WHERE object_type LIKE 'FOREIGN%' AND object_name IN ('s6', 'foo') ORDER BY 1, 2, 3, 4, 5;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
           grantor          |          grantee          | object_catalog | object_schema | object_name |     object_type      | privilege_type | is_grantable 
 ---------------------------+---------------------------+----------------+---------------+-------------+----------------------+----------------+--------------
  regress_foreign_data_user | regress_foreign_data_user | regression     |               | foo         | FOREIGN DATA WRAPPER | USAGE          | YES
@@ -1033,6 +1355,44 @@
 (4 rows)
 
 SELECT * FROM information_schema.role_usage_grants WHERE object_type LIKE 'FOREIGN%' AND object_name IN ('s6', 'foo') ORDER BY 1, 2, 3, 4, 5;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
           grantor          |          grantee          | object_catalog | object_schema | object_name |     object_type      | privilege_type | is_grantable 
 ---------------------------+---------------------------+----------------+---------------+-------------+----------------------+----------------+--------------
  regress_foreign_data_user | regress_foreign_data_user | regression     |               | foo         | FOREIGN DATA WRAPPER | USAGE          | YES
@@ -1042,12 +1402,68 @@
 (4 rows)
 
 SELECT * FROM information_schema.foreign_tables ORDER BY 1, 2, 3;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  foreign_table_catalog | foreign_table_schema | foreign_table_name | foreign_server_catalog | foreign_server_name 
 -----------------------+----------------------+--------------------+------------------------+---------------------
  regression            | foreign_schema       | foreign_table_1    | regression             | s0
 (1 row)
 
 SELECT * FROM information_schema.foreign_table_options ORDER BY 1, 2, 3, 4;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  foreign_table_catalog | foreign_table_schema | foreign_table_name | option_name | option_value 
 -----------------------+----------------------+--------------------+-------------+--------------
  regression            | foreign_schema       | foreign_table_1    | be quoted   | value
@@ -1057,6 +1473,40 @@
 
 SET ROLE regress_test_role;
 SELECT * FROM information_schema.user_mapping_options ORDER BY 1, 2, 3, 4;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  authorization_identifier | foreign_server_catalog | foreign_server_name | option_name | option_value 
 --------------------------+------------------------+---------------------+-------------+--------------
  PUBLIC                   | regression             | t1                  | modified    | 1
@@ -1067,6 +1517,44 @@
 (5 rows)
 
 SELECT * FROM information_schema.usage_privileges WHERE object_type LIKE 'FOREIGN%' AND object_name IN ('s6', 'foo') ORDER BY 1, 2, 3, 4, 5;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
           grantor          |        grantee        | object_catalog | object_schema | object_name |     object_type      | privilege_type | is_grantable 
 ---------------------------+-----------------------+----------------+---------------+-------------+----------------------+----------------+--------------
  regress_foreign_data_user | regress_test_indirect | regression     |               | foo         | FOREIGN DATA WRAPPER | USAGE          | NO
@@ -1075,6 +1563,44 @@
 (3 rows)
 
 SELECT * FROM information_schema.role_usage_grants WHERE object_type LIKE 'FOREIGN%' AND object_name IN ('s6', 'foo') ORDER BY 1, 2, 3, 4, 5;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
           grantor          |        grantee        | object_catalog | object_schema | object_name |     object_type      | privilege_type | is_grantable 
 ---------------------------+-----------------------+----------------+---------------+-------------+----------------------+----------------+--------------
  regress_foreign_data_user | regress_test_indirect | regression     |               | foo         | FOREIGN DATA WRAPPER | USAGE          | NO
@@ -1085,6 +1611,40 @@
 DROP USER MAPPING FOR current_user SERVER t1;
 SET ROLE regress_test_role2;
 SELECT * FROM information_schema.user_mapping_options ORDER BY 1, 2, 3, 4;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  authorization_identifier | foreign_server_catalog | foreign_server_name | option_name | option_value 
 --------------------------+------------------------+---------------------+-------------+--------------
  regress_test_role        | regression             | s6                  | username    | 
@@ -1292,6 +1852,12 @@
 CREATE USER MAPPING FOR regress_unprivileged_role SERVER s10 OPTIONS (user 'secret');
 -- owner of server can see some option fields
 \deu+
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                  List of user mappings
  Server |         User name         |    FDW options    
 --------+---------------------------+-------------------
@@ -1309,6 +1875,12 @@
 RESET ROLE;
 -- superuser can see all option fields
 \deu+
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                   List of user mappings
  Server |         User name         |     FDW options     
 --------+---------------------------+---------------------
@@ -1326,6 +1898,12 @@
 -- unprivileged user cannot see any option field
 SET ROLE regress_unprivileged_role;
 \deu+
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
               List of user mappings
  Server |         User name         | FDW options 
 --------+---------------------------+-------------
@@ -1398,6 +1976,25 @@
 CREATE FOREIGN TABLE ft2 () INHERITS (fd_pt1)
   SERVER s0 OPTIONS (delimiter ',', quote '"', "be quoted" 'value');
 \d+ fd_pt1
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                    Table "public.fd_pt1"
  Column |  Type   | Collation | Nullable | Default | Storage  | Stats target | Description 
 --------+---------+-----------+----------+---------+----------+--------------+-------------
@@ -1407,6 +2004,26 @@
 Child tables: ft2, FOREIGN
 
 \d+ ft2
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                        Foreign table "public.ft2"
  Column |  Type   | Collation | Nullable | Default | FDW options | Storage  | Stats target | Description 
 --------+---------+-----------+----------+---------+-------------+----------+--------------+-------------
@@ -1419,6 +2036,25 @@
 
 DROP FOREIGN TABLE ft2;
 \d+ fd_pt1
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                    Table "public.fd_pt1"
  Column |  Type   | Collation | Nullable | Default | Storage  | Stats target | Description 
 --------+---------+-----------+----------+---------+----------+--------------+-------------
@@ -1432,6 +2068,26 @@
 	c3 date
 ) SERVER s0 OPTIONS (delimiter ',', quote '"', "be quoted" 'value');
 \d+ ft2
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                        Foreign table "public.ft2"
  Column |  Type   | Collation | Nullable | Default | FDW options | Storage  | Stats target | Description 
 --------+---------+-----------+----------+---------+-------------+----------+--------------+-------------
@@ -1443,6 +2099,25 @@
 
 ALTER FOREIGN TABLE ft2 INHERIT fd_pt1;
 \d+ fd_pt1
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                    Table "public.fd_pt1"
  Column |  Type   | Collation | Nullable | Default | Storage  | Stats target | Description 
 --------+---------+-----------+----------+---------+----------+--------------+-------------
@@ -1452,6 +2127,26 @@
 Child tables: ft2, FOREIGN
 
 \d+ ft2
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                        Foreign table "public.ft2"
  Column |  Type   | Collation | Nullable | Default | FDW options | Storage  | Stats target | Description 
 --------+---------+-----------+----------+---------+-------------+----------+--------------+-------------
@@ -1473,6 +2168,26 @@
 NOTICE:  merging column "c2" with inherited definition
 NOTICE:  merging column "c3" with inherited definition
 \d+ ft2
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                        Foreign table "public.ft2"
  Column |  Type   | Collation | Nullable | Default | FDW options | Storage  | Stats target | Description 
 --------+---------+-----------+----------+---------+-------------+----------+--------------+-------------
@@ -1486,6 +2201,25 @@
               ft3, FOREIGN
 
 \d+ ct3
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                     Table "public.ct3"
  Column |  Type   | Collation | Nullable | Default | Storage  | Stats target | Description 
 --------+---------+-----------+----------+---------+----------+--------------+-------------
@@ -1495,6 +2229,26 @@
 Inherits: ft2
 
 \d+ ft3
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                        Foreign table "public.ft3"
  Column |  Type   | Collation | Nullable | Default | FDW options | Storage  | Stats target | Description 
 --------+---------+-----------+----------+---------+-------------+----------+--------------+-------------
@@ -1511,6 +2265,25 @@
 ALTER TABLE fd_pt1 ADD COLUMN c7 integer NOT NULL;
 ALTER TABLE fd_pt1 ADD COLUMN c8 integer;
 \d+ fd_pt1
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                    Table "public.fd_pt1"
  Column |  Type   | Collation | Nullable | Default | Storage  | Stats target | Description 
 --------+---------+-----------+----------+---------+----------+--------------+-------------
@@ -1525,6 +2298,26 @@
 Child tables: ft2, FOREIGN
 
 \d+ ft2
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                        Foreign table "public.ft2"
  Column |  Type   | Collation | Nullable | Default | FDW options | Storage  | Stats target | Description 
 --------+---------+-----------+----------+---------+-------------+----------+--------------+-------------
@@ -1543,6 +2336,25 @@
               ft3, FOREIGN
 
 \d+ ct3
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                     Table "public.ct3"
  Column |  Type   | Collation | Nullable | Default | Storage  | Stats target | Description 
 --------+---------+-----------+----------+---------+----------+--------------+-------------
@@ -1557,6 +2369,26 @@
 Inherits: ft2
 
 \d+ ft3
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                        Foreign table "public.ft3"
  Column |  Type   | Collation | Nullable | Default | FDW options | Storage  | Stats target | Description 
 --------+---------+-----------+----------+---------+-------------+----------+--------------+-------------
@@ -1585,6 +2417,25 @@
 ALTER TABLE fd_pt1 ALTER COLUMN c8 SET STATISTICS -1;
 ALTER TABLE fd_pt1 ALTER COLUMN c8 SET STORAGE EXTERNAL;
 \d+ fd_pt1
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                    Table "public.fd_pt1"
  Column |  Type   | Collation | Nullable | Default | Storage  | Stats target | Description 
 --------+---------+-----------+----------+---------+----------+--------------+-------------
@@ -1599,6 +2450,26 @@
 Child tables: ft2, FOREIGN
 
 \d+ ft2
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                        Foreign table "public.ft2"
  Column |  Type   | Collation | Nullable | Default | FDW options | Storage  | Stats target | Description 
 --------+---------+-----------+----------+---------+-------------+----------+--------------+-------------
@@ -1623,6 +2494,25 @@
 ALTER TABLE fd_pt1 DROP COLUMN c7;
 ALTER TABLE fd_pt1 DROP COLUMN c8;
 \d+ fd_pt1
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                    Table "public.fd_pt1"
  Column |  Type   | Collation | Nullable | Default | Storage  | Stats target | Description 
 --------+---------+-----------+----------+---------+----------+--------------+-------------
@@ -1632,6 +2522,26 @@
 Child tables: ft2, FOREIGN
 
 \d+ ft2
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                        Foreign table "public.ft2"
  Column |  Type   | Collation | Nullable | Default | FDW options | Storage  | Stats target | Description 
 --------+---------+-----------+----------+---------+-------------+----------+--------------+-------------
@@ -1652,6 +2562,8 @@
   FROM pg_class AS pc JOIN pg_constraint AS pgc ON (conrelid = pc.oid)
   WHERE pc.relname = 'fd_pt1'
   ORDER BY 1,2;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  relname |  conname   | contype | conislocal | coninhcount | connoinherit 
 ---------+------------+---------+------------+-------------+--------------
  fd_pt1  | fd_pt1chk1 | c       | t          |           0 | t
@@ -1660,6 +2572,25 @@
 
 -- child does not inherit NO INHERIT constraints
 \d+ fd_pt1
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                    Table "public.fd_pt1"
  Column |  Type   | Collation | Nullable | Default | Storage  | Stats target | Description 
 --------+---------+-----------+----------+---------+----------+--------------+-------------
@@ -1672,6 +2603,26 @@
 Child tables: ft2, FOREIGN
 
 \d+ ft2
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                        Foreign table "public.ft2"
  Column |  Type   | Collation | Nullable | Default | FDW options | Storage  | Stats target | Description 
 --------+---------+-----------+----------+---------+-------------+----------+--------------+-------------
@@ -1707,6 +2658,25 @@
 ALTER FOREIGN TABLE ft2 INHERIT fd_pt1;
 -- child does not inherit NO INHERIT constraints
 \d+ fd_pt1
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                    Table "public.fd_pt1"
  Column |  Type   | Collation | Nullable | Default | Storage  | Stats target | Description 
 --------+---------+-----------+----------+---------+----------+--------------+-------------
@@ -1719,6 +2689,26 @@
 Child tables: ft2, FOREIGN
 
 \d+ ft2
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                        Foreign table "public.ft2"
  Column |  Type   | Collation | Nullable | Default | FDW options | Storage  | Stats target | Description 
 --------+---------+-----------+----------+---------+-------------+----------+--------------+-------------
@@ -1738,6 +2728,25 @@
 INSERT INTO fd_pt1 VALUES (1, 'fd_pt1'::text, '1994-01-01'::date);
 ALTER TABLE fd_pt1 ADD CONSTRAINT fd_pt1chk3 CHECK (c2 <> '') NOT VALID;
 \d+ fd_pt1
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                    Table "public.fd_pt1"
  Column |  Type   | Collation | Nullable | Default | Storage  | Stats target | Description 
 --------+---------+-----------+----------+---------+----------+--------------+-------------
@@ -1749,6 +2758,26 @@
 Child tables: ft2, FOREIGN
 
 \d+ ft2
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                        Foreign table "public.ft2"
  Column |  Type   | Collation | Nullable | Default | FDW options | Storage  | Stats target | Description 
 --------+---------+-----------+----------+---------+-------------+----------+--------------+-------------
@@ -1765,6 +2794,25 @@
 -- VALIDATE CONSTRAINT need do nothing on foreign tables
 ALTER TABLE fd_pt1 VALIDATE CONSTRAINT fd_pt1chk3;
 \d+ fd_pt1
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                    Table "public.fd_pt1"
  Column |  Type   | Collation | Nullable | Default | Storage  | Stats target | Description 
 --------+---------+-----------+----------+---------+----------+--------------+-------------
@@ -1776,6 +2824,26 @@
 Child tables: ft2, FOREIGN
 
 \d+ ft2
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                        Foreign table "public.ft2"
  Column |  Type   | Collation | Nullable | Default | FDW options | Storage  | Stats target | Description 
 --------+---------+-----------+----------+---------+-------------+----------+--------------+-------------
@@ -1796,6 +2864,25 @@
 -- changes name of a constraint recursively
 ALTER TABLE fd_pt1 RENAME CONSTRAINT fd_pt1chk3 TO f2_check;
 \d+ fd_pt1
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                    Table "public.fd_pt1"
  Column |  Type   | Collation | Nullable | Default | Storage  | Stats target | Description 
 --------+---------+-----------+----------+---------+----------+--------------+-------------
@@ -1807,6 +2894,26 @@
 Child tables: ft2, FOREIGN
 
 \d+ ft2
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                        Foreign table "public.ft2"
  Column |  Type   | Collation | Nullable | Default | FDW options | Storage  | Stats target | Description 
 --------+---------+-----------+----------+---------+-------------+----------+--------------+-------------
@@ -1855,6 +2962,28 @@
 CREATE FOREIGN TABLE fd_pt2_1 PARTITION OF fd_pt2 FOR VALUES IN (1)
   SERVER s0 OPTIONS (delimiter ',', quote '"', "be quoted" 'value');
 \d+ fd_pt2
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                              Partitioned table "public.fd_pt2"
  Column |  Type   | Collation | Nullable | Default | Storage  | Stats target | Description 
 --------+---------+-----------+----------+---------+----------+--------------+-------------
@@ -1865,6 +2994,27 @@
 Partitions: fd_pt2_1 FOR VALUES IN (1), FOREIGN
 
 \d+ fd_pt2_1
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                      Foreign table "public.fd_pt2_1"
  Column |  Type   | Collation | Nullable | Default | FDW options | Storage  | Stats target | Description 
 --------+---------+-----------+----------+---------+-------------+----------+--------------+-------------
@@ -1885,6 +3035,26 @@
 	c4 char
 ) SERVER s0 OPTIONS (delimiter ',', quote '"', "be quoted" 'value');
 \d+ fd_pt2_1
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                        Foreign table "public.fd_pt2_1"
  Column |     Type     | Collation | Nullable | Default | FDW options | Storage  | Stats target | Description 
 --------+--------------+-----------+----------+---------+-------------+----------+--------------+-------------
@@ -1900,6 +3070,28 @@
 DETAIL:  The new partition may contain only the columns present in parent.
 DROP FOREIGN TABLE fd_pt2_1;
 \d+ fd_pt2
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                              Partitioned table "public.fd_pt2"
  Column |  Type   | Collation | Nullable | Default | Storage  | Stats target | Description 
 --------+---------+-----------+----------+---------+----------+--------------+-------------
@@ -1915,6 +3107,26 @@
 	c3 date
 ) SERVER s0 OPTIONS (delimiter ',', quote '"', "be quoted" 'value');
 \d+ fd_pt2_1
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                      Foreign table "public.fd_pt2_1"
  Column |  Type   | Collation | Nullable | Default | FDW options | Storage  | Stats target | Description 
 --------+---------+-----------+----------+---------+-------------+----------+--------------+-------------
@@ -1927,6 +3139,28 @@
 -- no attach partition validation occurs for foreign tables
 ALTER TABLE fd_pt2 ATTACH PARTITION fd_pt2_1 FOR VALUES IN (1);
 \d+ fd_pt2
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                              Partitioned table "public.fd_pt2"
  Column |  Type   | Collation | Nullable | Default | Storage  | Stats target | Description 
 --------+---------+-----------+----------+---------+----------+--------------+-------------
@@ -1937,6 +3171,27 @@
 Partitions: fd_pt2_1 FOR VALUES IN (1), FOREIGN
 
 \d+ fd_pt2_1
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                      Foreign table "public.fd_pt2_1"
  Column |  Type   | Collation | Nullable | Default | FDW options | Storage  | Stats target | Description 
 --------+---------+-----------+----------+---------+-------------+----------+--------------+-------------
@@ -1955,6 +3210,28 @@
 ALTER TABLE fd_pt2_1 ALTER c3 SET NOT NULL;
 ALTER TABLE fd_pt2_1 ADD CONSTRAINT p21chk CHECK (c2 <> '');
 \d+ fd_pt2
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                              Partitioned table "public.fd_pt2"
  Column |  Type   | Collation | Nullable | Default | Storage  | Stats target | Description 
 --------+---------+-----------+----------+---------+----------+--------------+-------------
@@ -1965,6 +3242,27 @@
 Partitions: fd_pt2_1 FOR VALUES IN (1), FOREIGN
 
 \d+ fd_pt2_1
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                      Foreign table "public.fd_pt2_1"
  Column |  Type   | Collation | Nullable | Default | FDW options | Storage  | Stats target | Description 
 --------+---------+-----------+----------+---------+-------------+----------+--------------+-------------
@@ -1985,6 +3283,28 @@
 ALTER TABLE fd_pt2 DETACH PARTITION fd_pt2_1;
 ALTER TABLE fd_pt2 ALTER c2 SET NOT NULL;
 \d+ fd_pt2
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                              Partitioned table "public.fd_pt2"
  Column |  Type   | Collation | Nullable | Default | Storage  | Stats target | Description 
 --------+---------+-----------+----------+---------+----------+--------------+-------------
@@ -1995,6 +3315,26 @@
 Number of partitions: 0
 
 \d+ fd_pt2_1
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                      Foreign table "public.fd_pt2_1"
  Column |  Type   | Collation | Nullable | Default | FDW options | Storage  | Stats target | Description 
 --------+---------+-----------+----------+---------+-------------+----------+--------------+-------------
@@ -2013,6 +3353,28 @@
 ALTER TABLE fd_pt2 DETACH PARTITION fd_pt2_1;
 ALTER TABLE fd_pt2 ADD CONSTRAINT fd_pt2chk1 CHECK (c1 > 0);
 \d+ fd_pt2
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                              Partitioned table "public.fd_pt2"
  Column |  Type   | Collation | Nullable | Default | Storage  | Stats target | Description 
 --------+---------+-----------+----------+---------+----------+--------------+-------------
@@ -2025,6 +3387,26 @@
 Number of partitions: 0
 
 \d+ fd_pt2_1
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                      Foreign table "public.fd_pt2_1"
  Column |  Type   | Collation | Nullable | Default | FDW options | Storage  | Stats target | Description 
 --------+---------+-----------+----------+---------+-------------+----------+--------------+-------------
diff -U3 /home/dbs/pg-queryplans/postgres/src/test/regress/expected/window.out /home/dbs/pg-queryplans/postgres/src/test/regress/results/window.out
--- /home/dbs/pg-queryplans/postgres/src/test/regress/expected/window.out	2024-02-20 13:16:25.979611060 +0900
+++ /home/dbs/pg-queryplans/postgres/src/test/regress/results/window.out	2024-02-20 16:07:34.415987727 +0900
@@ -3812,6 +3812,7 @@
    FROM empsalary e1 LEFT JOIN empsalary e2 ON TRUE
    WHERE e1.empno = e2.empno) s
 WHERE s.c = 1;
+INFO:  Path param info: 0.000000
                        QUERY PLAN                        
 ---------------------------------------------------------
  Subquery Scan on s
@@ -4342,6 +4343,8 @@
 WINDOW fwd AS (
 	ORDER BY vs.i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING
 );
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  eq1 | eq2 | eq3 
 -----+-----+-----
  t   | t   | t
diff -U3 /home/dbs/pg-queryplans/postgres/src/test/regress/expected/functional_deps.out /home/dbs/pg-queryplans/postgres/src/test/regress/results/functional_deps.out
--- /home/dbs/pg-queryplans/postgres/src/test/regress/expected/functional_deps.out	2024-02-20 13:16:25.959611416 +0900
+++ /home/dbs/pg-queryplans/postgres/src/test/regress/results/functional_deps.out	2024-02-20 16:07:34.331988953 +0900
@@ -49,6 +49,8 @@
 FROM articles AS a, articles_in_category AS aic
 WHERE a.id = aic.article_id AND aic.category_id in (14,62,70,53,138)
 GROUP BY a.id;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  id | keywords | title | body | created 
 ----+----------+-------+------+---------
 (0 rows)
@@ -67,6 +69,8 @@
 FROM articles AS a JOIN articles_in_category AS aic ON a.id = aic.article_id
 WHERE aic.category_id in (14,62,70,53,138)
 GROUP BY a.id;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  id | keywords | title | body | created 
 ----+----------+-------+------+---------
 (0 rows)
@@ -84,6 +88,7 @@
 FROM articles AS a JOIN articles_in_category AS aic ON a.id = aic.article_id
 WHERE aic.category_id in (14,62,70,53,138)
 GROUP BY aic.category_id, aic.article_id;
+INFO:  Path param info: 0.000000
  changed 
 ---------
 (0 rows)
@@ -103,6 +108,7 @@
 SELECT product_id, p.name, (sum(s.units) * p.price) AS sales
     FROM products p LEFT JOIN sales s USING (product_id)
     GROUP BY product_id, p.name, p.price;
+INFO:  Path param info: 0.000000
  product_id | name | sales 
 ------------+------+-------
 (0 rows)
@@ -119,6 +125,8 @@
 SELECT product_id, p.name, (sum(s.units) * p.price) AS sales
     FROM products p LEFT JOIN sales s USING (product_id)
     GROUP BY product_id;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  product_id | name | sales 
 ------------+------+-------
 (0 rows)
@@ -148,6 +156,8 @@
 INNER JOIN users u ON u.uid = n.uid
 WHERE n.type = 'blog' AND n.status = 1
 GROUP BY u.uid, u.name;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  uid | name 
 -----+------
 (0 rows)
@@ -157,6 +167,8 @@
 INNER JOIN users u ON u.uid = n.uid
 WHERE n.type = 'blog' AND n.status = 1
 GROUP BY u.uid;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  uid | name 
 -----+------
 (0 rows)
diff -U3 /home/dbs/pg-queryplans/postgres/src/test/regress/expected/equivclass.out /home/dbs/pg-queryplans/postgres/src/test/regress/results/equivclass.out
--- /home/dbs/pg-queryplans/postgres/src/test/regress/expected/equivclass.out	2024-02-20 13:16:25.959611416 +0900
+++ /home/dbs/pg-queryplans/postgres/src/test/regress/results/equivclass.out	2024-02-20 16:07:34.323989070 +0900
@@ -139,6 +139,7 @@
 
 explain (costs off)
   select * from ec1, ec2 where ff = x1 and ff = '42'::int8;
+INFO:  Path param info: 0.000000
                             QUERY PLAN                             
 -------------------------------------------------------------------
  Nested Loop
@@ -150,6 +151,7 @@
 
 explain (costs off)
   select * from ec1, ec2 where ff = x1 and ff = '42'::int8alias1;
+INFO:  Path param info: 0.000000
                  QUERY PLAN                  
 ---------------------------------------------
  Nested Loop
@@ -161,6 +163,7 @@
 
 explain (costs off)
   select * from ec1, ec2 where ff = x1 and '42'::int8 = x1;
+INFO:  Path param info: 0.000000
                QUERY PLAN                
 -----------------------------------------
  Nested Loop
@@ -173,6 +176,7 @@
 
 explain (costs off)
   select * from ec1, ec2 where ff = x1 and x1 = '42'::int8alias1;
+INFO:  Path param info: 0.000000
                  QUERY PLAN                  
 ---------------------------------------------
  Nested Loop
@@ -184,6 +188,7 @@
 
 explain (costs off)
   select * from ec1, ec2 where ff = x1 and x1 = '42'::int8alias2;
+INFO:  Path param info: 0.000000
                QUERY PLAN                
 -----------------------------------------
  Nested Loop
@@ -206,6 +211,7 @@
      union all
      select ff + 4 as x from ec1) as ss1
   where ss1.x = ec1.f1 and ec1.ff = 42::int8;
+INFO:  Path param info: 0.000000
                      QUERY PLAN                      
 -----------------------------------------------------
  Nested Loop
@@ -229,6 +235,7 @@
      union all
      select ff + 4 as x from ec1) as ss1
   where ss1.x = ec1.f1 and ec1.ff = 42::int8 and ec1.ff = ec1.f1;
+INFO:  Path param info: 0.000000
                             QUERY PLAN                             
 -------------------------------------------------------------------
  Nested Loop
@@ -260,6 +267,13 @@
      union all
      select ff + 4 as x from ec1) as ss2
   where ss1.x = ec1.f1 and ss1.x = ss2.x and ec1.ff = 42::int8;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                              QUERY PLAN                              
 ---------------------------------------------------------------------
  Nested Loop
@@ -300,6 +314,10 @@
      union all
      select ff + 4 as x from ec1) as ss2
   where ss1.x = ec1.f1 and ss1.x = ss2.x and ec1.ff = 42::int8;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                            QUERY PLAN                            
 -----------------------------------------------------------------
  Merge Join
@@ -336,6 +354,7 @@
      union all
      select ff + 4 as x from ec1) as ss1
   where ss1.x = ec1.f1 and ec1.ff = 42::int8;
+INFO:  Path param info: 0.000000
                      QUERY PLAN                      
 -----------------------------------------------------
  Nested Loop
@@ -362,6 +381,7 @@
      union all
      select ff + 4 as x from ec1) as ss1
   where ss1.x = ec1.f1 and ec1.ff = 42::int8;
+INFO:  Path param info: 0.000000
                      QUERY PLAN                      
 -----------------------------------------------------
  Merge Join
@@ -391,6 +411,7 @@
 explain (costs off)
   select * from ec0 a, ec1 b
   where a.ff = b.ff and a.ff = 43::bigint::int8alias1;
+INFO:  Path param info: 0.000000
                  QUERY PLAN                  
 ---------------------------------------------
  Nested Loop
@@ -407,6 +428,7 @@
 explain (costs off)
   select * from ec0 a, ec1 b
   where a.ff = b.ff and a.ff = 43::bigint::int8alias1;
+INFO:  Path param info: 0.000000
                  QUERY PLAN                  
 ---------------------------------------------
  Nested Loop
diff -U3 /home/dbs/pg-queryplans/postgres/src/test/regress/expected/json.out /home/dbs/pg-queryplans/postgres/src/test/regress/results/json.out
--- /home/dbs/pg-queryplans/postgres/src/test/regress/expected/json.out	2024-02-20 13:16:25.963611345 +0900
+++ /home/dbs/pg-queryplans/postgres/src/test/regress/results/json.out	2024-02-20 16:07:34.695983638 +0900
@@ -367,6 +367,7 @@
                ROW(y.*,ARRAY[4,5,6])] AS z
          FROM generate_series(1,2) x,
               generate_series(4,5) y) q;
+INFO:  Path param info: 0.000000
                                                                                                                                  array_to_json                                                                                                                                 
 -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  [{"b":"a1","c":4,"z":[{"f1":1,"f2":[1,2,3]},{"f1":4,"f2":[4,5,6]}]},{"b":"a1","c":5,"z":[{"f1":1,"f2":[1,2,3]},{"f1":5,"f2":[4,5,6]}]},{"b":"a2","c":4,"z":[{"f1":2,"f2":[1,2,3]},{"f1":4,"f2":[4,5,6]}]},{"b":"a2","c":5,"z":[{"f1":2,"f2":[1,2,3]},{"f1":5,"f2":[4,5,6]}]}]
@@ -398,6 +399,7 @@
                ROW(y.*,ARRAY[4,5,6])] AS z
       FROM generate_series(1,2) x,
            generate_series(4,5) y) q;
+INFO:  Path param info: 0.000000
                             row_to_json                             
 --------------------------------------------------------------------
  {"b":"a1","c":4,"z":[{"f1":1,"f2":[1,2,3]},{"f1":4,"f2":[4,5,6]}]}
@@ -413,6 +415,7 @@
                ROW(y.*,ARRAY[4,5,6])] AS z
       FROM generate_series(1,2) x,
            generate_series(4,5) y) q;
+INFO:  Path param info: 0.000000
                      row_to_json                     
 -----------------------------------------------------
  {"b":"a1",                                         +
@@ -457,6 +460,24 @@
 where tablename = 'rows' and
       schemaname = pg_my_temp_schema()::regnamespace::text
 order by 1;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  attname |    histogram_bounds    
 ---------+------------------------
  x       | [1,2,3]
@@ -535,6 +556,7 @@
                ROW(y.*,ARRAY[4,5,6])] AS z
          FROM generate_series(1,2) x,
               generate_series(4,5) y) q;
+INFO:  Path param info: 0.000000
                                json_agg                                
 -----------------------------------------------------------------------
  [{"b":"a1","c":4,"z":[{"f1":1,"f2":[1,2,3]},{"f1":4,"f2":[4,5,6]}]}, +
diff -U3 /home/dbs/pg-queryplans/postgres/src/test/regress/expected/jsonb.out /home/dbs/pg-queryplans/postgres/src/test/regress/results/jsonb.out
--- /home/dbs/pg-queryplans/postgres/src/test/regress/expected/jsonb.out	2024-02-20 13:16:25.963611345 +0900
+++ /home/dbs/pg-queryplans/postgres/src/test/regress/results/jsonb.out	2024-02-20 16:07:34.747982880 +0900
@@ -352,6 +352,24 @@
 where tablename = 'rows' and
       schemaname = pg_my_temp_schema()::regnamespace::text
 order by 1;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  attname |     histogram_bounds     
 ---------+--------------------------
  x       | [1, 2, 3]
@@ -430,6 +448,7 @@
                ROW(y.*,ARRAY[4,5,6])] AS z
          FROM generate_series(1,2) x,
               generate_series(4,5) y) q;
+INFO:  Path param info: 0.000000
                                                                                                                                                                     jsonb_agg                                                                                                                                                                     
 --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  [{"b": "a1", "c": 4, "z": [{"f1": 1, "f2": [1, 2, 3]}, {"f1": 4, "f2": [4, 5, 6]}]}, {"b": "a1", "c": 5, "z": [{"f1": 1, "f2": [1, 2, 3]}, {"f1": 5, "f2": [4, 5, 6]}]}, {"b": "a2", "c": 4, "z": [{"f1": 2, "f2": [1, 2, 3]}, {"f1": 4, "f2": [4, 5, 6]}]}, {"b": "a2", "c": 5, "z": [{"f1": 2, "f2": [1, 2, 3]}, {"f1": 5, "f2": [4, 5, 6]}]}]
diff -U3 /home/dbs/pg-queryplans/postgres/src/test/regress/expected/jsonpath.out /home/dbs/pg-queryplans/postgres/src/test/regress/results/jsonpath.out
--- /home/dbs/pg-queryplans/postgres/src/test/regress/expected/jsonpath.out	2024-02-20 13:16:25.963611345 +0900
+++ /home/dbs/pg-queryplans/postgres/src/test/regress/results/jsonpath.out	2024-02-20 16:07:34.671983989 +0900
@@ -1207,6 +1207,7 @@
                   '00',
                   '1a']) str,
      LATERAL pg_input_error_info(str, 'jsonpath') as errinfo;
+INFO:  Path param info: 0.000000
                  jsonpath                  | ok | sql_error_code |                                message                                |                          detail                          | hint 
 -------------------------------------------+----+----------------+-----------------------------------------------------------------------+----------------------------------------------------------+------
  $ ? (@ like_regex "pattern" flag "smixq") | t  |                |                                                                       |                                                          | 
diff -U3 /home/dbs/pg-queryplans/postgres/src/test/regress/expected/jsonb_jsonpath.out /home/dbs/pg-queryplans/postgres/src/test/regress/results/jsonb_jsonpath.out
--- /home/dbs/pg-queryplans/postgres/src/test/regress/expected/jsonb_jsonpath.out	2024-02-20 13:16:25.963611345 +0900
+++ /home/dbs/pg-queryplans/postgres/src/test/regress/results/jsonb_jsonpath.out	2024-02-20 16:07:34.687983756 +0900
@@ -856,6 +856,7 @@
 from
 	(values (jsonb 'true'), ('false'), ('"null"')) x(x),
 	(values (jsonb 'true'), ('false'), ('"null"')) y(y);
+INFO:  Path param info: 0.000000
    x    |   y    | x && y 
 --------+--------+--------
  true   | true   | true
@@ -881,6 +882,7 @@
 from
 	(values (jsonb 'true'), ('false'), ('"null"')) x(x),
 	(values (jsonb 'true'), ('false'), ('"null"')) y(y);
+INFO:  Path param info: 0.000000
    x    |   y    | x || y 
 --------+--------+--------
  true   | true   | true
@@ -2436,6 +2438,7 @@
 	jsonb_path_query_first(s1.j, '$.s > $s', vars => s2.j) gt
 FROM str s1, str s2
 ORDER BY s1.num, s2.num;
+INFO:  Path param info: 0.000000
        j       |       j       |  lt   |  le   |  eq   |  ge   |  gt   
 ---------------+---------------+-------+-------+-------+-------+-------
  {"s": ""}     | {"s": ""}     | false | true  | true  | true  | false
diff -U3 /home/dbs/pg-queryplans/postgres/src/test/regress/expected/sqljson.out /home/dbs/pg-queryplans/postgres/src/test/regress/results/sqljson.out
--- /home/dbs/pg-queryplans/postgres/src/test/regress/expected/sqljson.out	2024-02-20 13:16:25.975611131 +0900
+++ /home/dbs/pg-queryplans/postgres/src/test/regress/results/sqljson.out	2024-02-20 16:07:34.683983814 +0900
@@ -636,6 +636,7 @@
 CREATE VIEW json_object_view AS
 SELECT JSON_OBJECT('foo' : '1' FORMAT JSON, 'bar' : 'baz' RETURNING json);
 \sv json_object_view
+INFO:  Path param info: 0.000000
 CREATE OR REPLACE VIEW public.json_object_view AS
  SELECT JSON_OBJECT('foo' : '1'::text FORMAT JSON, 'bar' : 'baz'::text RETURNING json) AS "json_object"
 DROP VIEW json_object_view;
@@ -651,6 +652,7 @@
 CREATE VIEW json_array_view AS
 SELECT JSON_ARRAY('1' FORMAT JSON, 2 RETURNING json);
 \sv json_array_view
+INFO:  Path param info: 0.000000
 CREATE OR REPLACE VIEW public.json_array_view AS
  SELECT JSON_ARRAY('1'::text FORMAT JSON, 2 RETURNING json) AS "json_array"
 DROP VIEW json_array_view;
@@ -686,6 +688,7 @@
 SELECT JSON_OBJECTAGG(i: ('111' || i)::bytea FORMAT JSON WITH UNIQUE RETURNING text) FILTER (WHERE i > 3)
 FROM generate_series(1,5) i;
 \sv json_objectagg_view
+INFO:  Path param info: 0.000000
 CREATE OR REPLACE VIEW public.json_objectagg_view AS
  SELECT JSON_OBJECTAGG(i : ('111'::text || i)::bytea FORMAT JSON WITH UNIQUE KEYS RETURNING text) FILTER (WHERE i > 3) AS "json_objectagg"
    FROM generate_series(1, 5) i(i)
@@ -722,6 +725,7 @@
 SELECT JSON_ARRAYAGG(('111' || i)::bytea FORMAT JSON NULL ON NULL RETURNING text) FILTER (WHERE i > 3)
 FROM generate_series(1,5) i;
 \sv json_arrayagg_view
+INFO:  Path param info: 0.000000
 CREATE OR REPLACE VIEW public.json_arrayagg_view AS
  SELECT JSON_ARRAYAGG(('111'::text || i)::bytea FORMAT JSON NULL ON NULL RETURNING text) FILTER (WHERE i > 3) AS "json_arrayagg"
    FROM generate_series(1, 5) i(i)
@@ -743,6 +747,7 @@
 CREATE VIEW json_array_subquery_view AS
 SELECT JSON_ARRAY(SELECT i FROM (VALUES (1), (2), (NULL), (4)) foo(i) RETURNING jsonb);
 \sv json_array_subquery_view
+INFO:  Path param info: 0.000000
 CREATE OR REPLACE VIEW public.json_array_subquery_view AS
  SELECT ( SELECT JSON_ARRAYAGG(q.a RETURNING jsonb) AS "json_arrayagg"
            FROM ( SELECT foo.i
@@ -939,6 +944,7 @@
 CREATE VIEW is_json_view AS
 SELECT '1' IS JSON AS "any", ('1' || i) IS JSON SCALAR AS "scalar", '[]' IS NOT JSON ARRAY AS "array", '{}' IS JSON OBJECT WITH UNIQUE AS "object" FROM generate_series(1, 3) i;
 \sv is_json_view
+INFO:  Path param info: 0.000000
 CREATE OR REPLACE VIEW public.is_json_view AS
  SELECT '1'::text IS JSON AS "any",
     ('1'::text || i) IS JSON SCALAR AS scalar,
diff -U3 /home/dbs/pg-queryplans/postgres/src/test/regress/expected/limit.out /home/dbs/pg-queryplans/postgres/src/test/regress/results/limit.out
--- /home/dbs/pg-queryplans/postgres/src/test/regress/expected/limit.out	2024-02-20 13:16:25.963611345 +0900
+++ /home/dbs/pg-queryplans/postgres/src/test/regress/results/limit.out	2024-02-20 16:07:34.791982237 +0900
@@ -633,6 +633,11 @@
 CREATE VIEW limit_thousand_v_1 AS SELECT thousand FROM onek WHERE thousand < 995
 		ORDER BY thousand FETCH FIRST 5 ROWS WITH TIES OFFSET 10;
 \d+ limit_thousand_v_1
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                       View "public.limit_thousand_v_1"
   Column  |  Type   | Collation | Nullable | Default | Storage | Description 
 ----------+---------+-----------+----------+---------+---------+-------------
@@ -648,6 +653,11 @@
 CREATE VIEW limit_thousand_v_2 AS SELECT thousand FROM onek WHERE thousand < 995
 		ORDER BY thousand OFFSET 10 FETCH FIRST 5 ROWS ONLY;
 \d+ limit_thousand_v_2
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                       View "public.limit_thousand_v_2"
   Column  |  Type   | Collation | Nullable | Default | Storage | Description 
 ----------+---------+-----------+----------+---------+---------+-------------
@@ -666,6 +676,11 @@
 CREATE VIEW limit_thousand_v_3 AS SELECT thousand FROM onek WHERE thousand < 995
 		ORDER BY thousand FETCH FIRST (NULL+1) ROWS WITH TIES;
 \d+ limit_thousand_v_3
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                       View "public.limit_thousand_v_3"
   Column  |  Type   | Collation | Nullable | Default | Storage | Description 
 ----------+---------+-----------+----------+---------+---------+-------------
@@ -680,6 +695,11 @@
 CREATE VIEW limit_thousand_v_4 AS SELECT thousand FROM onek WHERE thousand < 995
 		ORDER BY thousand FETCH FIRST NULL ROWS ONLY;
 \d+ limit_thousand_v_4
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                       View "public.limit_thousand_v_4"
   Column  |  Type   | Collation | Nullable | Default | Storage | Description 
 ----------+---------+-----------+----------+---------+---------+-------------
diff -U3 /home/dbs/pg-queryplans/postgres/src/test/regress/expected/plpgsql.out /home/dbs/pg-queryplans/postgres/src/test/regress/results/plpgsql.out
--- /home/dbs/pg-queryplans/postgres/src/test/regress/expected/plpgsql.out	2024-02-20 13:16:25.967611274 +0900
+++ /home/dbs/pg-queryplans/postgres/src/test/regress/results/plpgsql.out	2024-02-20 16:07:34.975979551 +0900
@@ -1471,6 +1471,7 @@
 -- Now we take a look at the patchfield
 --
 select * from PField_v1 where pfname = 'PF0_1' order by slotname;
+INFO:  Path param info: 0.000000
  pfname |       slotname       |                         backside                         |                     patch                     
 --------+----------------------+----------------------------------------------------------+-----------------------------------------------
  PF0_1  | PS.base.a1           | WS.001.1a in room 001 -> Phone PH.hc001 (Hicom standard) | PS.base.ta1 -> Phone line -0 (Central call)
@@ -5116,6 +5117,7 @@
 select i, a from
   (select returns_rw_array(1) as a offset 0) ss,
   lateral consumes_rw_array(a) i;
+INFO:  Path param info: 0.000000
                            QUERY PLAN                            
 -----------------------------------------------------------------
  Nested Loop
@@ -5130,6 +5132,7 @@
 select i, a from
   (select returns_rw_array(1) as a offset 0) ss,
   lateral consumes_rw_array(a) i;
+INFO:  Path param info: 0.000000
  i |   a   
 ---+-------
  1 | {1,1}
@@ -5520,6 +5523,7 @@
 UPDATE transition_table_base
   SET val = '*' || val || '*'
   WHERE id BETWEEN 2 AND 3;
+INFO:  Path param info: 0.000000
 INFO:  Hash Full Join
   Output: COALESCE(ot.id, nt.id), ot.val, nt.val
   Hash Cond: (ot.id = nt.id)
@@ -5627,6 +5631,7 @@
 INSERT INTO transition_table_level2 (level2_no, parent_no)
   SELECT level2_no, level2_no / 50 + 1 AS parent_no
     FROM generate_series(1,9999) level2_no;
+INFO:  Path param info: 0.000000
 ANALYZE transition_table_level2;
 INSERT INTO transition_table_status (level, node_no, status)
   SELECT 1, level1_no, 0 FROM transition_table_level1;
@@ -5661,18 +5666,22 @@
 -- attempt modifications which would break RI (should all fail)
 DELETE FROM transition_table_level1
   WHERE level1_no = 25;
+INFO:  Path param info: 0.000000
 ERROR:  RI error
 CONTEXT:  PL/pgSQL function transition_table_level1_ri_parent_del_func() line 6 at RAISE
 UPDATE transition_table_level1 SET level1_no = -1
   WHERE level1_no = 30;
+INFO:  Path param info: 0.000000
 ERROR:  RI error
 CONTEXT:  PL/pgSQL function transition_table_level1_ri_parent_upd_func() line 15 at RAISE
 INSERT INTO transition_table_level2 (level2_no, parent_no)
   VALUES (10000, 10000);
+INFO:  Path param info: 0.000000
 ERROR:  RI error
 CONTEXT:  PL/pgSQL function transition_table_level2_ri_child_insupd_func() line 8 at RAISE
 UPDATE transition_table_level2 SET parent_no = 2000
   WHERE level2_no = 40;
+INFO:  Path param info: 0.000000
 ERROR:  RI error
 CONTEXT:  PL/pgSQL function transition_table_level2_ri_child_insupd_func() line 8 at RAISE
 -- attempt modifications which would not break RI (should all succeed)
diff -U3 /home/dbs/pg-queryplans/postgres/src/test/regress/expected/copy2.out /home/dbs/pg-queryplans/postgres/src/test/regress/results/copy2.out
--- /home/dbs/pg-queryplans/postgres/src/test/regress/expected/copy2.out	2024-02-20 13:16:25.955611488 +0900
+++ /home/dbs/pg-queryplans/postgres/src/test/regress/results/copy2.out	2024-02-20 16:07:34.815981886 +0900
@@ -530,6 +530,25 @@
 end $$ language plpgsql immutable;
 alter table check_con_tbl add check (check_con_function(check_con_tbl.*));
 \d+ check_con_tbl
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                Table "public.check_con_tbl"
  Column |  Type   | Collation | Nullable | Default | Storage | Stats target | Description 
 --------+---------+-----------+----------+---------+---------+--------------+-------------
diff -U3 /home/dbs/pg-queryplans/postgres/src/test/regress/expected/domain.out /home/dbs/pg-queryplans/postgres/src/test/regress/results/domain.out
--- /home/dbs/pg-queryplans/postgres/src/test/regress/expected/domain.out	2024-02-20 13:16:25.955611488 +0900
+++ /home/dbs/pg-queryplans/postgres/src/test/regress/results/domain.out	2024-02-20 16:07:34.851981361 +0900
@@ -316,6 +316,37 @@
 create rule silly as on delete to dcomptable do instead
   update dcomptable set d1.r = (d1).r - 1, d1.i = (d1).i + 1 where (d1).i > 0;
 \d+ dcomptable
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                   Table "public.dcomptable"
  Column |   Type    | Collation | Nullable | Default | Storage  | Stats target | Description 
 --------+-----------+-----------+----------+---------+----------+--------------+-------------
@@ -476,6 +507,37 @@
   update dcomptable set d1[1].r = d1[1].r - 1, d1[1].i = d1[1].i + 1
     where d1[1].i > 0;
 \d+ dcomptable
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                   Table "public.dcomptable"
  Column |    Type    | Collation | Nullable | Default | Storage  | Stats target | Description 
 --------+------------+-----------+----------+---------+----------+--------------+-------------
diff -U3 /home/dbs/pg-queryplans/postgres/src/test/regress/expected/rangefuncs.out /home/dbs/pg-queryplans/postgres/src/test/regress/results/rangefuncs.out
--- /home/dbs/pg-queryplans/postgres/src/test/regress/expected/rangefuncs.out	2024-02-20 13:16:25.971611203 +0900
+++ /home/dbs/pg-queryplans/postgres/src/test/regress/results/rangefuncs.out	2024-02-20 16:07:34.855981303 +0900
@@ -286,6 +286,7 @@
 commit;
 -- function with implicit LATERAL
 select * from rngfunc2, rngfunct(rngfunc2.rngfuncid) z where rngfunc2.f2 = z.f2;
+INFO:  Path param info: 0.000000
  rngfuncid | f2  | rngfuncid | f2  
 -----------+-----+-----------+-----
          1 |  11 |         1 |  11
@@ -295,6 +296,7 @@
 
 -- function with implicit LATERAL and explicit ORDINALITY
 select * from rngfunc2, rngfunct(rngfunc2.rngfuncid) with ordinality as z(rngfuncid,f2,ord) where rngfunc2.f2 = z.f2;
+INFO:  Path param info: 0.000000
  rngfuncid | f2  | rngfuncid | f2  | ord 
 -----------+-----+-----------+-----+-----
          1 |  11 |         1 |  11 |   1
@@ -710,6 +712,7 @@
 (1 row)
 
 SELECT * FROM (VALUES (1),(2),(3)) v(r) LEFT JOIN rngfunc_sql(11,13) ON (r+i)<100;
+INFO:  Path param info: 0.000000
  r | i  | s 
 ---+----+---
  1 | 11 | 1
@@ -730,6 +733,7 @@
 (1 row)
 
 SELECT * FROM (VALUES (1),(2),(3)) v(r) LEFT JOIN rngfunc_sql(11,13) WITH ORDINALITY AS f(i,s,o) ON (r+i)<100;
+INFO:  Path param info: 0.000000
  r | i  | s | o 
 ---+----+---+---
  1 | 11 | 1 | 1
@@ -750,6 +754,7 @@
 (1 row)
 
 SELECT * FROM (VALUES (1),(2),(3)) v(r) LEFT JOIN rngfunc_mat(11,13) ON (r+i)<100;
+INFO:  Path param info: 0.000000
  r | i  | s 
 ---+----+---
  1 | 11 | 1
@@ -770,6 +775,7 @@
 (1 row)
 
 SELECT * FROM (VALUES (1),(2),(3)) v(r) LEFT JOIN rngfunc_mat(11,13) WITH ORDINALITY AS f(i,s,o) ON (r+i)<100;
+INFO:  Path param info: 0.000000
  r | i  | s | o 
 ---+----+---+---
  1 | 11 | 1 | 1
@@ -790,6 +796,7 @@
 (1 row)
 
 SELECT * FROM (VALUES (1),(2),(3)) v(r) LEFT JOIN ROWS FROM( rngfunc_sql(11,13), rngfunc_mat(11,13) ) WITH ORDINALITY AS f(i1,s1,i2,s2,o) ON (r+i1+i2)<100;
+INFO:  Path param info: 0.000000
  r | i1 | s1 | i2 | s2 | o 
 ---+----+----+----+----+---
  1 | 11 |  1 | 11 |  1 | 1
@@ -804,6 +811,7 @@
 (9 rows)
 
 SELECT * FROM (VALUES (1),(2),(3)) v(r) LEFT JOIN generate_series(11,13) f(i) ON (r+i)<100;
+INFO:  Path param info: 0.000000
  r | i  
 ---+----
  1 | 11
@@ -818,6 +826,7 @@
 (9 rows)
 
 SELECT * FROM (VALUES (1),(2),(3)) v(r) LEFT JOIN generate_series(11,13) WITH ORDINALITY AS f(i,o) ON (r+i)<100;
+INFO:  Path param info: 0.000000
  r | i  | o 
 ---+----+---
  1 | 11 | 1
@@ -832,6 +841,7 @@
 (9 rows)
 
 SELECT * FROM (VALUES (1),(2),(3)) v(r) LEFT JOIN unnest(array[10,20,30]) f(i) ON (r+i)<100;
+INFO:  Path param info: 0.000000
  r | i  
 ---+----
  1 | 10
@@ -846,6 +856,7 @@
 (9 rows)
 
 SELECT * FROM (VALUES (1),(2),(3)) v(r) LEFT JOIN unnest(array[10,20,30]) WITH ORDINALITY AS f(i,o) ON (r+i)<100;
+INFO:  Path param info: 0.000000
  r | i  | o 
 ---+----+---
  1 | 10 | 1
@@ -867,6 +878,7 @@
 (1 row)
 
 SELECT * FROM (VALUES (1),(2),(3)) v(r), rngfunc_sql(10+r,13);
+INFO:  Path param info: 0.000000
  r | i  | s 
 ---+----+---
  1 | 11 | 1
@@ -884,6 +896,7 @@
 (1 row)
 
 SELECT * FROM (VALUES (1),(2),(3)) v(r), rngfunc_sql(10+r,13) WITH ORDINALITY AS f(i,s,o);
+INFO:  Path param info: 0.000000
  r | i  | s | o 
 ---+----+---+---
  1 | 11 | 1 | 1
@@ -901,6 +914,7 @@
 (1 row)
 
 SELECT * FROM (VALUES (1),(2),(3)) v(r), rngfunc_sql(11,10+r);
+INFO:  Path param info: 0.000000
  r | i  | s 
 ---+----+---
  1 | 11 | 1
@@ -918,6 +932,7 @@
 (1 row)
 
 SELECT * FROM (VALUES (1),(2),(3)) v(r), rngfunc_sql(11,10+r) WITH ORDINALITY AS f(i,s,o);
+INFO:  Path param info: 0.000000
  r | i  | s | o 
 ---+----+---+---
  1 | 11 | 1 | 1
@@ -935,6 +950,7 @@
 (1 row)
 
 SELECT * FROM (VALUES (11,12),(13,15),(16,20)) v(r1,r2), rngfunc_sql(r1,r2);
+INFO:  Path param info: 0.000000
  r1 | r2 | i  | s  
 ----+----+----+----
  11 | 12 | 11 |  1
@@ -956,6 +972,7 @@
 (1 row)
 
 SELECT * FROM (VALUES (11,12),(13,15),(16,20)) v(r1,r2), rngfunc_sql(r1,r2) WITH ORDINALITY AS f(i,s,o);
+INFO:  Path param info: 0.000000
  r1 | r2 | i  | s  | o 
 ----+----+----+----+---
  11 | 12 | 11 |  1 | 1
@@ -977,6 +994,7 @@
 (1 row)
 
 SELECT * FROM (VALUES (1),(2),(3)) v(r), rngfunc_mat(10+r,13);
+INFO:  Path param info: 0.000000
  r | i  | s 
 ---+----+---
  1 | 11 | 1
@@ -994,6 +1012,7 @@
 (1 row)
 
 SELECT * FROM (VALUES (1),(2),(3)) v(r), rngfunc_mat(10+r,13) WITH ORDINALITY AS f(i,s,o);
+INFO:  Path param info: 0.000000
  r | i  | s | o 
 ---+----+---+---
  1 | 11 | 1 | 1
@@ -1011,6 +1030,7 @@
 (1 row)
 
 SELECT * FROM (VALUES (1),(2),(3)) v(r), rngfunc_mat(11,10+r);
+INFO:  Path param info: 0.000000
  r | i  | s 
 ---+----+---
  1 | 11 | 1
@@ -1028,6 +1048,7 @@
 (1 row)
 
 SELECT * FROM (VALUES (1),(2),(3)) v(r), rngfunc_mat(11,10+r) WITH ORDINALITY AS f(i,s,o);
+INFO:  Path param info: 0.000000
  r | i  | s | o 
 ---+----+---+---
  1 | 11 | 1 | 1
@@ -1045,6 +1066,7 @@
 (1 row)
 
 SELECT * FROM (VALUES (11,12),(13,15),(16,20)) v(r1,r2), rngfunc_mat(r1,r2);
+INFO:  Path param info: 0.000000
  r1 | r2 | i  | s  
 ----+----+----+----
  11 | 12 | 11 |  1
@@ -1066,6 +1088,7 @@
 (1 row)
 
 SELECT * FROM (VALUES (11,12),(13,15),(16,20)) v(r1,r2), rngfunc_mat(r1,r2) WITH ORDINALITY AS f(i,s,o);
+INFO:  Path param info: 0.000000
  r1 | r2 | i  | s  | o 
 ----+----+----+----+---
  11 | 12 | 11 |  1 | 1
@@ -1088,6 +1111,7 @@
 (1 row)
 
 SELECT * FROM (VALUES (1),(2),(3)) v(r), ROWS FROM( rngfunc_sql(11,11), rngfunc_mat(10+r,13) );
+INFO:  Path param info: 0.000000
  r | i  | s | i  | s 
 ---+----+---+----+---
  1 | 11 | 1 | 11 | 1
@@ -1105,6 +1129,7 @@
 (1 row)
 
 SELECT * FROM (VALUES (1),(2),(3)) v(r), ROWS FROM( rngfunc_sql(10+r,13), rngfunc_mat(11,11) );
+INFO:  Path param info: 0.000000
  r | i  | s | i  | s 
 ---+----+---+----+---
  1 | 11 | 1 | 11 | 1
@@ -1122,6 +1147,7 @@
 (1 row)
 
 SELECT * FROM (VALUES (1),(2),(3)) v(r), ROWS FROM( rngfunc_sql(10+r,13), rngfunc_mat(10+r,13) );
+INFO:  Path param info: 0.000000
  r | i  | s | i  | s 
 ---+----+---+----+---
  1 | 11 | 1 | 11 | 1
@@ -1139,6 +1165,10 @@
 (1 row)
 
 SELECT * FROM generate_series(1,2) r1, generate_series(r1,3) r2, ROWS FROM( rngfunc_sql(10+r1,13), rngfunc_mat(10+r2,13) );
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  r1 | r2 | i  | s  | i  | s 
 ----+----+----+----+----+---
   1 |  1 | 11 |  1 | 11 | 1
@@ -1157,6 +1187,7 @@
 (13 rows)
 
 SELECT * FROM (VALUES (1),(2),(3)) v(r), generate_series(10+r,20-r) f(i);
+INFO:  Path param info: 0.000000
  r | i  
 ---+----
  1 | 11
@@ -1183,6 +1214,7 @@
 (21 rows)
 
 SELECT * FROM (VALUES (1),(2),(3)) v(r), generate_series(10+r,20-r) WITH ORDINALITY AS f(i,o);
+INFO:  Path param info: 0.000000
  r | i  | o 
 ---+----+---
  1 | 11 | 1
@@ -1209,6 +1241,7 @@
 (21 rows)
 
 SELECT * FROM (VALUES (1),(2),(3)) v(r), unnest(array[r*10,r*20,r*30]) f(i);
+INFO:  Path param info: 0.000000
  r | i  
 ---+----
  1 | 10
@@ -1223,6 +1256,7 @@
 (9 rows)
 
 SELECT * FROM (VALUES (1),(2),(3)) v(r), unnest(array[r*10,r*20,r*30]) WITH ORDINALITY AS f(i,o);
+INFO:  Path param info: 0.000000
  r | i  | o 
 ---+----+---
  1 | 10 | 1
@@ -1240,6 +1274,8 @@
 SELECT * FROM (VALUES (1),(2),(3)) v1(r1),
               LATERAL (SELECT r1, * FROM (VALUES (10),(20),(30)) v2(r2)
                                          LEFT JOIN generate_series(21,23) f(i) ON ((r2+i)<100) OFFSET 0) s1;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  r1 | r1 | r2 | i  
 ----+----+----+----
   1 |  1 | 10 | 21
@@ -1274,6 +1310,8 @@
 SELECT * FROM (VALUES (1),(2),(3)) v1(r1),
               LATERAL (SELECT r1, * FROM (VALUES (10),(20),(30)) v2(r2)
                                          LEFT JOIN generate_series(20+r1,23) f(i) ON ((r2+i)<100) OFFSET 0) s1;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  r1 | r1 | r2 | i  
 ----+----+----+----
   1 |  1 | 10 | 21
@@ -1299,6 +1337,8 @@
 SELECT * FROM (VALUES (1),(2),(3)) v1(r1),
               LATERAL (SELECT r1, * FROM (VALUES (10),(20),(30)) v2(r2)
                                          LEFT JOIN generate_series(r2,r2+3) f(i) ON ((r2+i)<100) OFFSET 0) s1;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  r1 | r1 | r2 | i  
 ----+----+----+----
   1 |  1 | 10 | 10
@@ -1342,6 +1382,8 @@
 SELECT * FROM (VALUES (1),(2),(3)) v1(r1),
               LATERAL (SELECT r1, * FROM (VALUES (10),(20),(30)) v2(r2)
                                          LEFT JOIN generate_series(r1,2+r2/5) f(i) ON ((r2+i)<100) OFFSET 0) s1;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  r1 | r1 | r2 | i 
 ----+----+----+---
   1 |  1 | 10 | 1
@@ -1404,6 +1446,10 @@
         ) AS ss1 ON TRUE
         FULL JOIN generate_series(1, v1.r1) AS gs4 ON FALSE
     ) AS ss0 ON TRUE;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  r1 | gs1 | gs2 | gs3 | gs4 
 ----+-----+-----+-----+-----
   1 |     |     |     |   1
@@ -1633,6 +1679,7 @@
          FROM generate_series(1,$1) a(a),
               generate_series(1,$1) b(b) $$ LANGUAGE sql;
 SELECT * FROM rngfunc(3);
+INFO:  Path param info: 0.000000
  a | b 
 ---+---
  1 | 1
@@ -2358,6 +2405,7 @@
 $$ language sql immutable;
 explain (verbose, costs off)
 select x from int8_tbl, extractq2(int8_tbl) f(x);
+INFO:  Path param info: 0.000000
                 QUERY PLAN                
 ------------------------------------------
  Nested Loop
@@ -2370,6 +2418,7 @@
 (7 rows)
 
 select x from int8_tbl, extractq2(int8_tbl) f(x);
+INFO:  Path param info: 0.000000
          x         
 -------------------
                456
@@ -2384,6 +2433,7 @@
 $$ language sql immutable;
 explain (verbose, costs off)
 select x from int8_tbl, extractq2_2(int8_tbl) f(x);
+INFO:  Path param info: 0.000000
             QUERY PLAN             
 -----------------------------------
  Nested Loop
@@ -2395,6 +2445,7 @@
 (6 rows)
 
 select x from int8_tbl, extractq2_2(int8_tbl) f(x);
+INFO:  Path param info: 0.000000
          x         
 -------------------
                456
@@ -2463,6 +2514,7 @@
    from unnest(array['{"lectures": [{"id": "1"}]}'::jsonb])
         as unnested_modules(module)) as ss,
   jsonb_to_recordset(ss.lecture) as j (id text);
+INFO:  Path param info: 0.000000
                                                                        QUERY PLAN                                                                       
 --------------------------------------------------------------------------------------------------------------------------------------------------------
  Nested Loop
@@ -2480,6 +2532,7 @@
    from unnest(array['{"lectures": [{"id": "1"}]}'::jsonb])
         as unnested_modules(module)) as ss,
   jsonb_to_recordset(ss.lecture) as j (id text);
+INFO:  Path param info: 0.000000
     lecture    | id 
 ---------------+----
  [{"id": "1"}] | 1
diff -U3 /home/dbs/pg-queryplans/postgres/src/test/regress/expected/conversion.out /home/dbs/pg-queryplans/postgres/src/test/regress/results/conversion.out
--- /home/dbs/pg-queryplans/postgres/src/test/regress/expected/conversion.out	2024-02-20 13:16:25.955611488 +0900
+++ /home/dbs/pg-queryplans/postgres/src/test/regress/results/conversion.out	2024-02-20 16:07:34.803982063 +0900
@@ -163,6 +163,8 @@
 using (description)
 where p.error is distinct from b.error
 order by description;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  description | orig_error | error_after_padding 
 -------------+------------+---------------------
 (0 rows)
@@ -190,6 +192,8 @@
 using (description)
 where p.error is distinct from b.error
 order by description;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  description | orig_error | error_after_padding 
 -------------+------------+---------------------
 (0 rows)
@@ -217,6 +221,8 @@
 using (description)
 where p.error is distinct from b.error
 order by description;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  description | orig_error | error_after_padding 
 -------------+------------+---------------------
 (0 rows)
@@ -244,6 +250,8 @@
 using (description)
 where p.error is distinct from b.error
 order by description;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  description | orig_error | error_after_padding 
 -------------+------------+---------------------
 (0 rows)
diff -U3 /home/dbs/pg-queryplans/postgres/src/test/regress/expected/truncate.out /home/dbs/pg-queryplans/postgres/src/test/regress/results/truncate.out
--- /home/dbs/pg-queryplans/postgres/src/test/regress/expected/truncate.out	2024-02-20 13:16:25.975611131 +0900
+++ /home/dbs/pg-queryplans/postgres/src/test/regress/results/truncate.out	2024-02-20 16:07:34.847981419 +0900
@@ -70,6 +70,7 @@
 NOTICE:  truncate cascades to table "trunc_e"
 -- circular references
 ALTER TABLE truncate_a ADD FOREIGN KEY (col1) REFERENCES trunc_c;
+INFO:  Path param info: 0.000000
 -- Add some data to verify that truncating actually works ...
 INSERT INTO trunc_c VALUES (1);
 INSERT INTO truncate_a VALUES (1);
@@ -502,6 +503,7 @@
 -- should truncate everything
 TRUNCATE TABLE truncprim, truncpart;
 select * from tp_chk_data();
+INFO:  Path param info: 0.000000
  pktb | pkval | fktb | fkval 
 ------+-------+------+-------
 (0 rows)
@@ -520,6 +522,7 @@
 NOTICE:  truncate cascades to table "truncpart_2_1"
 NOTICE:  truncate cascades to table "truncpart_2_d"
 SELECT * FROM tp_chk_data();
+INFO:  Path param info: 0.000000
  pktb | pkval | fktb | fkval 
 ------+-------+------+-------
 (0 rows)
@@ -533,6 +536,7 @@
 -- should truncate all partitions
 TRUNCATE TABLE truncpart;
 SELECT * FROM tp_chk_data();
+INFO:  Path param info: 0.000000
    pktb    | pkval | fktb | fkval 
 -----------+-------+------+-------
  truncprim |     1 |      |      
diff -U3 /home/dbs/pg-queryplans/postgres/src/test/regress/expected/alter_table.out /home/dbs/pg-queryplans/postgres/src/test/regress/results/alter_table.out
--- /home/dbs/pg-queryplans/postgres/src/test/regress/expected/alter_table.out	2024-02-20 13:16:25.951611559 +0900
+++ /home/dbs/pg-queryplans/postgres/src/test/regress/results/alter_table.out	2024-02-20 16:07:35.215976046 +0900
@@ -105,6 +105,18 @@
 HINT:  Alter statistics on table column instead.
 ALTER INDEX attmp_idx ALTER COLUMN 2 SET STATISTICS 1000;
 \d+ attmp_idx
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                         Index "public.attmp_idx"
  Column |       Type       | Key? | Definition | Storage | Stats target 
 --------+------------------+------+------------+---------+--------------
@@ -328,6 +340,23 @@
 -- renaming constraints vs. inheritance
 CREATE TABLE constraint_rename_test (a int CONSTRAINT con1 CHECK (a > 0), b int, c int);
 \d constraint_rename_test
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
        Table "public.constraint_rename_test"
  Column |  Type   | Collation | Nullable | Default 
 --------+---------+-----------+----------+---------
@@ -341,6 +370,23 @@
 NOTICE:  merging column "a" with inherited definition
 NOTICE:  merging constraint "con1" with inherited definition
 \d constraint_rename_test2
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
       Table "public.constraint_rename_test2"
  Column |  Type   | Collation | Nullable | Default 
 --------+---------+-----------+----------+---------
@@ -358,6 +404,23 @@
 ERROR:  inherited constraint "con1" must be renamed in child tables too
 ALTER TABLE constraint_rename_test RENAME CONSTRAINT con1 TO con1foo; -- ok
 \d constraint_rename_test
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
        Table "public.constraint_rename_test"
  Column |  Type   | Collation | Nullable | Default 
 --------+---------+-----------+----------+---------
@@ -369,6 +432,23 @@
 Number of child tables: 1 (Use \d+ to list them.)
 
 \d constraint_rename_test2
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
       Table "public.constraint_rename_test2"
  Column |  Type   | Collation | Nullable | Default 
 --------+---------+-----------+----------+---------
@@ -384,6 +464,23 @@
 ALTER TABLE ONLY constraint_rename_test RENAME CONSTRAINT con2 TO con2foo; -- ok
 ALTER TABLE constraint_rename_test RENAME CONSTRAINT con2foo TO con2bar; -- ok
 \d constraint_rename_test
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
        Table "public.constraint_rename_test"
  Column |  Type   | Collation | Nullable | Default 
 --------+---------+-----------+----------+---------
@@ -396,6 +493,23 @@
 Number of child tables: 1 (Use \d+ to list them.)
 
 \d constraint_rename_test2
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
       Table "public.constraint_rename_test2"
  Column |  Type   | Collation | Nullable | Default 
 --------+---------+-----------+----------+---------
@@ -410,6 +524,35 @@
 ALTER TABLE constraint_rename_test ADD CONSTRAINT con3 PRIMARY KEY (a);
 ALTER TABLE constraint_rename_test RENAME CONSTRAINT con3 TO con3foo; -- ok
 \d constraint_rename_test
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
        Table "public.constraint_rename_test"
  Column |  Type   | Collation | Nullable | Default 
 --------+---------+-----------+----------+---------
@@ -424,6 +567,23 @@
 Number of child tables: 1 (Use \d+ to list them.)
 
 \d constraint_rename_test2
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
       Table "public.constraint_rename_test2"
  Column |  Type   | Collation | Nullable | Default 
 --------+---------+-----------+----------+---------
@@ -452,6 +612,35 @@
 CREATE TABLE like_constraint_rename_cache
   (LIKE constraint_rename_cache INCLUDING ALL);
 \d like_constraint_rename_cache
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
     Table "public.like_constraint_rename_cache"
  Column |  Type   | Collation | Nullable | Default 
 --------+---------+-----------+----------+---------
@@ -485,23 +674,27 @@
 ERROR:  column "b" referenced in foreign key constraint does not exist
 -- Try (and fail) to add constraint due to invalid data
 ALTER TABLE attmp3 add constraint attmpconstr foreign key (a) references attmp2 match full;
+INFO:  Path param info: 0.000000
 ERROR:  insert or update on table "attmp3" violates foreign key constraint "attmpconstr"
 DETAIL:  Key (a)=(5) is not present in table "attmp2".
 -- Delete failing row
 DELETE FROM attmp3 where a=5;
 -- Try (and succeed)
 ALTER TABLE attmp3 add constraint attmpconstr foreign key (a) references attmp2 match full;
+INFO:  Path param info: 0.000000
 ALTER TABLE attmp3 drop constraint attmpconstr;
 INSERT INTO attmp3 values (5,50);
 -- Try NOT VALID and then VALIDATE CONSTRAINT, but fails. Delete failure then re-validate
 ALTER TABLE attmp3 add constraint attmpconstr foreign key (a) references attmp2 match full NOT VALID;
 ALTER TABLE attmp3 validate constraint attmpconstr;
+INFO:  Path param info: 0.000000
 ERROR:  insert or update on table "attmp3" violates foreign key constraint "attmpconstr"
 DETAIL:  Key (a)=(5) is not present in table "attmp2".
 -- Delete failing row
 DELETE FROM attmp3 where a=5;
 -- Try (and succeed) and repeat to show it works on already valid constraint
 ALTER TABLE attmp3 validate constraint attmpconstr;
+INFO:  Path param info: 0.000000
 ALTER TABLE attmp3 validate constraint attmpconstr;
 -- Try a non-verified CHECK constraint
 ALTER TABLE attmp3 ADD CONSTRAINT b_greater_than_ten CHECK (b > 10); -- fail
@@ -573,6 +766,23 @@
 create table nv_parent (d date, check (false) no inherit not valid);
 -- not valid constraint added at creation time should automatically become valid
 \d nv_parent
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
             Table "public.nv_parent"
  Column | Type | Collation | Nullable | Default 
 --------+------+-----------+----------+---------
@@ -640,6 +850,23 @@
 -- add an inherited NOT VALID constraint
 alter table nv_parent add check (d between '2001-01-01'::date and '2099-12-31'::date) not valid;
 \d nv_child_2009
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
           Table "public.nv_child_2009"
  Column | Type | Collation | Nullable | Default 
 --------+------+-----------+----------+---------
@@ -670,6 +897,7 @@
 -- because int=int8 exists and is a member of the integer opfamily
 CREATE TEMP TABLE FKTABLE (ftest1 int8);
 ALTER TABLE FKTABLE ADD FOREIGN KEY(ftest1) references pktable;
+INFO:  Path param info: 0.000000
 -- Check it actually works
 INSERT INTO FKTABLE VALUES(42);		-- should succeed
 INSERT INTO FKTABLE VALUES(43);		-- should fail
@@ -691,6 +919,7 @@
 INSERT INTO PKTABLE VALUES(42);
 CREATE TEMP TABLE FKTABLE (ftest1 int);
 ALTER TABLE FKTABLE ADD FOREIGN KEY(ftest1) references pktable;
+INFO:  Path param info: 0.000000
 -- Check it actually works
 INSERT INTO FKTABLE VALUES(42);		-- should succeed
 INSERT INTO FKTABLE VALUES(43);		-- should fail
@@ -731,23 +960,31 @@
 CREATE TEMP TABLE FKTABLE (ftest1 int);
 ALTER TABLE FKTABLE ADD CONSTRAINT fknd FOREIGN KEY(ftest1) REFERENCES pktable
   ON DELETE CASCADE ON UPDATE NO ACTION NOT DEFERRABLE;
+INFO:  Path param info: 0.000000
 ALTER TABLE FKTABLE ADD CONSTRAINT fkdd FOREIGN KEY(ftest1) REFERENCES pktable
   ON DELETE CASCADE ON UPDATE NO ACTION DEFERRABLE INITIALLY DEFERRED;
+INFO:  Path param info: 0.000000
 ALTER TABLE FKTABLE ADD CONSTRAINT fkdi FOREIGN KEY(ftest1) REFERENCES pktable
   ON DELETE CASCADE ON UPDATE NO ACTION DEFERRABLE INITIALLY IMMEDIATE;
+INFO:  Path param info: 0.000000
 ALTER TABLE FKTABLE ADD CONSTRAINT fknd2 FOREIGN KEY(ftest1) REFERENCES pktable
   ON DELETE CASCADE ON UPDATE NO ACTION DEFERRABLE INITIALLY DEFERRED;
+INFO:  Path param info: 0.000000
 ALTER TABLE FKTABLE ALTER CONSTRAINT fknd2 NOT DEFERRABLE;
 ALTER TABLE FKTABLE ADD CONSTRAINT fkdd2 FOREIGN KEY(ftest1) REFERENCES pktable
   ON DELETE CASCADE ON UPDATE NO ACTION NOT DEFERRABLE;
+INFO:  Path param info: 0.000000
 ALTER TABLE FKTABLE ALTER CONSTRAINT fkdd2 DEFERRABLE INITIALLY DEFERRED;
 ALTER TABLE FKTABLE ADD CONSTRAINT fkdi2 FOREIGN KEY(ftest1) REFERENCES pktable
   ON DELETE CASCADE ON UPDATE NO ACTION NOT DEFERRABLE;
+INFO:  Path param info: 0.000000
 ALTER TABLE FKTABLE ALTER CONSTRAINT fkdi2 DEFERRABLE INITIALLY IMMEDIATE;
 SELECT conname, tgfoid::regproc, tgtype, tgdeferrable, tginitdeferred
 FROM pg_trigger JOIN pg_constraint con ON con.oid = tgconstraint
 WHERE tgrelid = 'pktable'::regclass
 ORDER BY 1,2,3;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  conname |         tgfoid         | tgtype | tgdeferrable | tginitdeferred 
 ---------+------------------------+--------+--------------+----------------
  fkdd    | "RI_FKey_cascade_del"  |      9 | f            | f
@@ -768,6 +1005,8 @@
 FROM pg_trigger JOIN pg_constraint con ON con.oid = tgconstraint
 WHERE tgrelid = 'fktable'::regclass
 ORDER BY 1,2,3;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  conname |       tgfoid        | tgtype | tgdeferrable | tginitdeferred 
 ---------+---------------------+--------+--------------+----------------
  fkdd    | "RI_FKey_check_ins" |      5 | t            | t
@@ -1050,6 +1289,7 @@
 create table atacc1 (a int primary key);
 alter table atacc1 add constraint atacc1_fkey foreign key (a) references atacc1 (a) not valid;
 alter table atacc1 validate constraint atacc1_fkey, alter a type bigint;
+INFO:  Path param info: 0.000000
 drop table atacc1;
 -- we've also seen issues with check constraints being validated at the wrong
 -- time when there's a pending table rewrite.
@@ -1748,6 +1988,8 @@
 from pg_class join pg_attribute on (pg_class.oid = pg_attribute.attrelid)
 where relname in ('p1','p2','c1','gc1') and attnum > 0 and not attisdropped
 order by relname, attnum;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  relname | attname | attinhcount | attislocal 
 ---------+---------+-------------+------------
  c1      | id      |           1 | f
@@ -1791,6 +2033,8 @@
 from pg_class join pg_attribute on (pg_class.oid = pg_attribute.attrelid)
 where relname in ('p1','p2','c1','gc1') and attnum > 0 and not attisdropped
 order by relname, attnum;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  relname | attname | attinhcount | attislocal 
 ---------+---------+-------------+------------
  c1      | id      |           1 | f
@@ -1985,6 +2229,35 @@
 create index on anothertab(f2,f3);
 create unique index on anothertab(f4);
 \d anothertab
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
              Table "public.anothertab"
  Column |  Type   | Collation | Nullable | Default 
 --------+---------+-----------+----------+---------
@@ -2010,6 +2283,35 @@
   alter column f4 type bigint;
 alter table anothertab alter column f5 type bigint;
 \d anothertab
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
             Table "public.anothertab"
  Column |  Type  | Collation | Nullable | Default 
 --------+--------+-----------+----------+---------
@@ -2088,6 +2390,36 @@
 create index on at_partitioned (b);
 create index on at_partitioned (a);
 \d at_part_1
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
              Table "public.at_part_1"
  Column |  Type   | Collation | Nullable | Default 
 --------+---------+-----------+----------+---------
@@ -2099,6 +2431,23 @@
     "at_part_1_b_idx" btree (b)
 
 \d at_part_2
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
              Table "public.at_part_2"
  Column |  Type   | Collation | Nullable | Default 
 --------+---------+-----------+----------+---------
@@ -2107,6 +2456,36 @@
 
 alter table at_partitioned attach partition at_part_2 for values from (1000) to (2000);
 \d at_part_2
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
              Table "public.at_part_2"
  Column |  Type   | Collation | Nullable | Default 
 --------+---------+-----------+----------+---------
@@ -2119,6 +2498,36 @@
 
 alter table at_partitioned alter column b type numeric using b::numeric;
 \d at_part_1
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
              Table "public.at_part_1"
  Column |  Type   | Collation | Nullable | Default 
 --------+---------+-----------+----------+---------
@@ -2130,6 +2539,36 @@
     "at_part_1_b_idx" btree (b)
 
 \d at_part_2
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
              Table "public.at_part_2"
  Column |  Type   | Collation | Nullable | Default 
 --------+---------+-----------+----------+---------
@@ -2172,6 +2611,8 @@
   from pg_class c left join old_oids using (relname)
   where relname like 'at_partitioned%'
   order by relname;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
            relname            | orig_oid | storage |     desc      
 ------------------------------+----------+---------+---------------
  at_partitioned               | t        | none    | 
@@ -2206,6 +2647,8 @@
   from pg_class c left join old_oids using (relname)
   where relname like 'at_partitioned%'
   order by relname;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
            relname            | orig_oid | storage |     desc     
 ------------------------------+----------+---------+--------------
  at_partitioned               | t        | none    | 
@@ -2277,6 +2720,37 @@
 create index test_storage_idx on test_storage (b, a);
 alter table test_storage alter column a set storage external;
 \d+ test_storage
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                      Table "public.test_storage"
  Column |  Type   | Collation | Nullable |      Default      | Storage  | Stats target | Description 
 --------+---------+-----------+----------+-------------------+----------+--------------+-------------
@@ -2287,6 +2761,18 @@
     "test_storage_idx" btree (b, a)
 
 \d+ test_storage_idx
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                 Index "public.test_storage_idx"
  Column |  Type   | Key? | Definition | Storage  | Stats target 
 --------+---------+------+------------+----------+--------------
@@ -2298,6 +2784,23 @@
 CREATE TABLE test_inh_check (a float check (a > 10.2), b float);
 CREATE TABLE test_inh_check_child() INHERITS(test_inh_check);
 \d test_inh_check
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                Table "public.test_inh_check"
  Column |       Type       | Collation | Nullable | Default 
 --------+------------------+-----------+----------+---------
@@ -2308,6 +2811,23 @@
 Number of child tables: 1 (Use \d+ to list them.)
 
 \d test_inh_check_child
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
             Table "public.test_inh_check_child"
  Column |       Type       | Collation | Nullable | Default 
 --------+------------------+-----------+----------+---------
@@ -2321,6 +2841,7 @@
   from pg_constraint c, pg_class r
   where relname like 'test_inh_check%' and c.conrelid = r.oid
   order by 1, 2;
+INFO:  Path param info: 0.000000
        relname        |        conname         | coninhcount | conislocal | connoinherit 
 ----------------------+------------------------+-------------+------------+--------------
  test_inh_check       | test_inh_check_a_check |           0 | t          | f
@@ -2329,6 +2850,23 @@
 
 ALTER TABLE test_inh_check ALTER COLUMN a TYPE numeric;
 \d test_inh_check
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                Table "public.test_inh_check"
  Column |       Type       | Collation | Nullable | Default 
 --------+------------------+-----------+----------+---------
@@ -2339,6 +2877,23 @@
 Number of child tables: 1 (Use \d+ to list them.)
 
 \d test_inh_check_child
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
             Table "public.test_inh_check_child"
  Column |       Type       | Collation | Nullable | Default 
 --------+------------------+-----------+----------+---------
@@ -2352,6 +2907,7 @@
   from pg_constraint c, pg_class r
   where relname like 'test_inh_check%' and c.conrelid = r.oid
   order by 1, 2;
+INFO:  Path param info: 0.000000
        relname        |        conname         | coninhcount | conislocal | connoinherit 
 ----------------------+------------------------+-------------+------------+--------------
  test_inh_check       | test_inh_check_a_check |           0 | t          | f
@@ -2365,6 +2921,23 @@
 ALTER TABLE test_inh_check ADD CONSTRAINT bmerged CHECK (b > 1);
 NOTICE:  merging constraint "bmerged" with inherited definition
 \d test_inh_check
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                Table "public.test_inh_check"
  Column |       Type       | Collation | Nullable | Default 
 --------+------------------+-----------+----------+---------
@@ -2377,6 +2950,23 @@
 Number of child tables: 1 (Use \d+ to list them.)
 
 \d test_inh_check_child
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
             Table "public.test_inh_check_child"
  Column |       Type       | Collation | Nullable | Default 
 --------+------------------+-----------+----------+---------
@@ -2392,6 +2982,7 @@
   from pg_constraint c, pg_class r
   where relname like 'test_inh_check%' and c.conrelid = r.oid
   order by 1, 2;
+INFO:  Path param info: 0.000000
        relname        |        conname         | coninhcount | conislocal | connoinherit 
 ----------------------+------------------------+-------------+------------+--------------
  test_inh_check       | bmerged                |           0 | t          | f
@@ -2405,6 +2996,23 @@
 ALTER TABLE test_inh_check ALTER COLUMN b TYPE numeric;
 NOTICE:  merging constraint "bmerged" with inherited definition
 \d test_inh_check
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
            Table "public.test_inh_check"
  Column |  Type   | Collation | Nullable | Default 
 --------+---------+-----------+----------+---------
@@ -2417,6 +3025,23 @@
 Number of child tables: 1 (Use \d+ to list them.)
 
 \d test_inh_check_child
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
         Table "public.test_inh_check_child"
  Column |  Type   | Collation | Nullable | Default 
 --------+---------+-----------+----------+---------
@@ -2432,6 +3057,7 @@
   from pg_constraint c, pg_class r
   where relname like 'test_inh_check%' and c.conrelid = r.oid
   order by 1, 2;
+INFO:  Path param info: 0.000000
        relname        |        conname         | coninhcount | conislocal | connoinherit 
 ----------------------+------------------------+-------------+------------+--------------
  test_inh_check       | bmerged                |           0 | t          | f
@@ -2472,6 +3098,26 @@
 ANALYZE check_fk_presence_2;
 ROLLBACK;
 \d check_fk_presence_2
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
         Table "public.check_fk_presence_2"
  Column |  Type   | Collation | Nullable | Default 
 --------+---------+-----------+----------+---------
@@ -2487,6 +3133,11 @@
 create view at_view_1 as select * from at_base_table bt;
 create view at_view_2 as select *, to_json(v1) as j from at_view_1 v1;
 \d+ at_view_1
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                           View "public.at_view_1"
  Column |  Type   | Collation | Nullable | Default | Storage  | Description 
 --------+---------+-----------+----------+---------+----------+-------------
@@ -2498,6 +3149,11 @@
    FROM at_base_table bt;
 
 \d+ at_view_2
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                           View "public.at_view_2"
  Column |  Type   | Collation | Nullable | Default | Storage  | Description 
 --------+---------+-----------+----------+---------+----------+-------------
@@ -2525,6 +3181,11 @@
 
 create or replace view at_view_1 as select *, 2+2 as more from at_base_table bt;
 \d+ at_view_1
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                           View "public.at_view_1"
  Column |  Type   | Collation | Nullable | Default | Storage  | Description 
 --------+---------+-----------+----------+---------+----------+-------------
@@ -2538,6 +3199,11 @@
    FROM at_base_table bt;
 
 \d+ at_view_2
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                           View "public.at_view_2"
  Column |  Type   | Collation | Nullable | Default | Storage  | Description 
 --------+---------+-----------+----------+---------+----------+-------------
@@ -2718,6 +3384,8 @@
 insert into alterlock2 values (1, 1);
 begin; alter table alterlock alter column f2 set statistics 150;
 select * from my_locks order by 1;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
   relname  |       max_lockmode       
 -----------+--------------------------
  alterlock | ShareUpdateExclusiveLock
@@ -2726,6 +3394,8 @@
 rollback;
 begin; alter table alterlock cluster on alterlock_pkey;
 select * from my_locks order by 1;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
     relname     |       max_lockmode       
 ----------------+--------------------------
  alterlock      | ShareUpdateExclusiveLock
@@ -2735,6 +3405,8 @@
 commit;
 begin; alter table alterlock set without cluster;
 select * from my_locks order by 1;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
   relname  |       max_lockmode       
 -----------+--------------------------
  alterlock | ShareUpdateExclusiveLock
@@ -2743,6 +3415,8 @@
 commit;
 begin; alter table alterlock set (fillfactor = 100);
 select * from my_locks order by 1;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
   relname  |       max_lockmode       
 -----------+--------------------------
  alterlock | ShareUpdateExclusiveLock
@@ -2752,6 +3426,8 @@
 commit;
 begin; alter table alterlock reset (fillfactor);
 select * from my_locks order by 1;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
   relname  |       max_lockmode       
 -----------+--------------------------
  alterlock | ShareUpdateExclusiveLock
@@ -2761,6 +3437,8 @@
 commit;
 begin; alter table alterlock set (toast.autovacuum_enabled = off);
 select * from my_locks order by 1;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
   relname  |       max_lockmode       
 -----------+--------------------------
  alterlock | ShareUpdateExclusiveLock
@@ -2770,6 +3448,8 @@
 commit;
 begin; alter table alterlock set (autovacuum_enabled = off);
 select * from my_locks order by 1;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
   relname  |       max_lockmode       
 -----------+--------------------------
  alterlock | ShareUpdateExclusiveLock
@@ -2779,6 +3459,8 @@
 commit;
 begin; alter table alterlock alter column f2 set (n_distinct = 1);
 select * from my_locks order by 1;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
   relname  |       max_lockmode       
 -----------+--------------------------
  alterlock | ShareUpdateExclusiveLock
@@ -2788,6 +3470,8 @@
 -- test that mixing options with different lock levels works as expected
 begin; alter table alterlock set (autovacuum_enabled = off, fillfactor = 80);
 select * from my_locks order by 1;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
   relname  |       max_lockmode       
 -----------+--------------------------
  alterlock | ShareUpdateExclusiveLock
@@ -2797,6 +3481,8 @@
 commit;
 begin; alter table alterlock alter column f2 set storage extended;
 select * from my_locks order by 1;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
   relname  |    max_lockmode     
 -----------+---------------------
  alterlock | AccessExclusiveLock
@@ -2805,6 +3491,8 @@
 rollback;
 begin; alter table alterlock alter column f2 set default 'x';
 select * from my_locks order by 1;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
   relname  |    max_lockmode     
 -----------+---------------------
  alterlock | AccessExclusiveLock
@@ -2818,6 +3506,8 @@
 	execute procedure
 	ttdummy (1, 1);
 select * from my_locks order by 1;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
   relname  |     max_lockmode      
 -----------+-----------------------
  alterlock | ShareRowExclusiveLock
@@ -2826,12 +3516,17 @@
 rollback;
 begin;
 select * from my_locks order by 1;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  relname | max_lockmode 
 ---------+--------------
 (0 rows)
 
 alter table alterlock2 add foreign key (f1) references alterlock (f1);
+INFO:  Path param info: 0.000000
 select * from my_locks order by 1;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
      relname     |     max_lockmode      
 -----------------+-----------------------
  alterlock       | ShareRowExclusiveLock
@@ -2845,6 +3540,8 @@
 alter table alterlock2
 add constraint alterlock2nv foreign key (f1) references alterlock (f1) NOT VALID;
 select * from my_locks order by 1;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
   relname   |     max_lockmode      
 ------------+-----------------------
  alterlock  | ShareRowExclusiveLock
@@ -2854,7 +3551,10 @@
 commit;
 begin;
 alter table alterlock2 validate constraint alterlock2nv;
+INFO:  Path param info: 0.000000
 select * from my_locks order by 1;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
      relname     |       max_lockmode       
 -----------------+--------------------------
  alterlock       | RowShareLock
@@ -2885,6 +3585,7 @@
 begin;
 alter view my_locks set (security_barrier=off);
 select * from my_locks order by 1;
+INFO:  Path param info: 0.000000
  relname  |    max_lockmode     
 ----------+---------------------
  my_locks | AccessExclusiveLock
@@ -2898,6 +3599,7 @@
 begin;
 alter table my_locks set (security_barrier=off);
 select * from my_locks order by 1;
+INFO:  Path param info: 0.000000
  relname  |    max_lockmode     
 ----------+---------------------
  my_locks | AccessExclusiveLock
@@ -3032,6 +3734,9 @@
 --
 CREATE TYPE test_type AS (a int);
 \d test_type
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
          Composite type "public.test_type"
  Column |  Type   | Collation | Nullable | Default 
 --------+---------+-----------+----------+---------
@@ -3041,6 +3746,9 @@
 ERROR:  relation "nosuchtype" does not exist
 ALTER TYPE test_type ADD ATTRIBUTE b text;
 \d test_type
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
          Composite type "public.test_type"
  Column |  Type   | Collation | Nullable | Default 
 --------+---------+-----------+----------+---------
@@ -3051,6 +3759,9 @@
 ERROR:  column "b" of relation "test_type" already exists
 ALTER TYPE test_type ALTER ATTRIBUTE b SET DATA TYPE varchar;
 \d test_type
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
               Composite type "public.test_type"
  Column |       Type        | Collation | Nullable | Default 
 --------+-------------------+-----------+----------+---------
@@ -3059,6 +3770,9 @@
 
 ALTER TYPE test_type ALTER ATTRIBUTE b SET DATA TYPE integer;
 \d test_type
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
          Composite type "public.test_type"
  Column |  Type   | Collation | Nullable | Default 
 --------+---------+-----------+----------+---------
@@ -3067,6 +3781,9 @@
 
 ALTER TYPE test_type DROP ATTRIBUTE b;
 \d test_type
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
          Composite type "public.test_type"
  Column |  Type   | Collation | Nullable | Default 
 --------+---------+-----------+----------+---------
@@ -3078,6 +3795,9 @@
 NOTICE:  column "c" of relation "test_type" does not exist, skipping
 ALTER TYPE test_type DROP ATTRIBUTE a, ADD ATTRIBUTE d boolean;
 \d test_type
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
          Composite type "public.test_type"
  Column |  Type   | Collation | Nullable | Default 
 --------+---------+-----------+----------+---------
@@ -3087,6 +3807,9 @@
 ERROR:  column "a" does not exist
 ALTER TYPE test_type RENAME ATTRIBUTE d TO dd;
 \d test_type
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
          Composite type "public.test_type"
  Column |  Type   | Collation | Nullable | Default 
 --------+---------+-----------+----------+---------
@@ -3108,6 +3831,9 @@
 CREATE TABLE test_tbl2 OF test_type2;
 CREATE TABLE test_tbl2_subclass () INHERITS (test_tbl2);
 \d test_type2
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
         Composite type "public.test_type2"
  Column |  Type   | Collation | Nullable | Default 
 --------+---------+-----------+----------+---------
@@ -3115,6 +3841,23 @@
  b      | text    |           |          | 
 
 \d test_tbl2
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
              Table "public.test_tbl2"
  Column |  Type   | Collation | Nullable | Default 
 --------+---------+-----------+----------+---------
@@ -3128,6 +3871,9 @@
 HINT:  Use ALTER ... CASCADE to alter the typed tables too.
 ALTER TYPE test_type2 ADD ATTRIBUTE c text CASCADE;
 \d test_type2
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
         Composite type "public.test_type2"
  Column |  Type   | Collation | Nullable | Default 
 --------+---------+-----------+----------+---------
@@ -3136,6 +3882,23 @@
  c      | text    |           |          | 
 
 \d test_tbl2
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
              Table "public.test_tbl2"
  Column |  Type   | Collation | Nullable | Default 
 --------+---------+-----------+----------+---------
@@ -3150,6 +3913,9 @@
 HINT:  Use ALTER ... CASCADE to alter the typed tables too.
 ALTER TYPE test_type2 ALTER ATTRIBUTE b TYPE varchar CASCADE;
 \d test_type2
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
              Composite type "public.test_type2"
  Column |       Type        | Collation | Nullable | Default 
 --------+-------------------+-----------+----------+---------
@@ -3158,6 +3924,23 @@
  c      | text              |           |          | 
 
 \d test_tbl2
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                   Table "public.test_tbl2"
  Column |       Type        | Collation | Nullable | Default 
 --------+-------------------+-----------+----------+---------
@@ -3172,6 +3955,9 @@
 HINT:  Use ALTER ... CASCADE to alter the typed tables too.
 ALTER TYPE test_type2 DROP ATTRIBUTE b CASCADE;
 \d test_type2
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
         Composite type "public.test_type2"
  Column |  Type   | Collation | Nullable | Default 
 --------+---------+-----------+----------+---------
@@ -3179,6 +3965,23 @@
  c      | text    |           |          | 
 
 \d test_tbl2
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
              Table "public.test_tbl2"
  Column |  Type   | Collation | Nullable | Default 
 --------+---------+-----------+----------+---------
@@ -3192,6 +3995,9 @@
 HINT:  Use ALTER ... CASCADE to alter the typed tables too.
 ALTER TYPE test_type2 RENAME ATTRIBUTE a TO aa CASCADE;
 \d test_type2
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
         Composite type "public.test_type2"
  Column |  Type   | Collation | Nullable | Default 
 --------+---------+-----------+----------+---------
@@ -3199,6 +4005,23 @@
  c      | text    |           |          | 
 
 \d test_tbl2
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
              Table "public.test_tbl2"
  Column |  Type   | Collation | Nullable | Default 
 --------+---------+-----------+----------+---------
@@ -3208,6 +4031,23 @@
 Typed table of type: test_type2
 
 \d test_tbl2_subclass
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
          Table "public.test_tbl2_subclass"
  Column |  Type   | Collation | Nullable | Default 
 --------+---------+-----------+----------+---------
@@ -3226,6 +4066,23 @@
 ALTER TYPE test_typex DROP ATTRIBUTE a CASCADE;
 NOTICE:  drop cascades to constraint test_tblx_y_check on table test_tblx
 \d test_tblx
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                Table "public.test_tblx"
  Column |    Type    | Collation | Nullable | Default 
 --------+------------+-----------+----------+---------
@@ -3274,6 +4131,23 @@
 ALTER TABLE tt7 OF tt_t1;			-- reassign an already-typed table
 ALTER TABLE tt7 NOT OF;
 \d tt7
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                    Table "public.tt7"
  Column |     Type     | Collation | Nullable | Default 
 --------+--------------+-----------+----------+---------
@@ -3314,6 +4188,36 @@
 ALTER TABLE IF EXISTS tt8 RENAME COLUMN f TO f1;
 ALTER TABLE IF EXISTS tt8 SET SCHEMA alter2;
 \d alter2.tt8
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                 Table "alter2.tt8"
  Column |  Type   | Collation | Nullable | Default 
 --------+---------+-----------+----------+---------
@@ -3346,6 +4250,35 @@
 ALTER TABLE tt9 ADD CONSTRAINT tt9_c_key2 CHECK(c > 6);
 ALTER TABLE tt9 ADD UNIQUE(c);  -- picks nonconflicting name
 \d tt9
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                 Table "public.tt9"
  Column |  Type   | Collation | Nullable | Default 
 --------+---------+-----------+----------+---------
@@ -3468,8 +4401,10 @@
 FROM pg_class,
     pg_filenode_relation(reltablespace, pg_relation_filenode(oid)) AS mapped_oid
 WHERE relkind IN ('r', 'i', 'S', 't', 'm') AND mapped_oid IS DISTINCT FROM oid;
+INFO:  Path param info: 0.000000
 SELECT m.* FROM filenode_mapping m LEFT JOIN pg_class c ON c.oid = m.oid
 WHERE c.oid IS NOT NULL OR m.mapped_oid IS NOT NULL;
+INFO:  Path param info: 0.000000
  oid | mapped_oid | reltablespace | relfilenode | relname 
 -----+------------+---------------+-------------+---------
 (0 rows)
@@ -3511,6 +4446,24 @@
 UNION ALL
 SELECT r.relname || ' toast index', ri.relkind, ri.relpersistence FROM pg_class r join pg_class t ON t.oid = r.reltoastrelid JOIN pg_index i ON i.indrelid = t.oid JOIN pg_class ri ON ri.oid = i.indexrelid WHERE r.relname ~ '^unlogged1'
 ORDER BY relname;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
         relname        | relkind | relpersistence 
 -----------------------+---------+----------------
  unlogged1             | r       | u
@@ -3533,6 +4486,24 @@
 UNION ALL
 SELECT r.relname || ' toast index', ri.relkind, ri.relpersistence FROM pg_class r join pg_class t ON t.oid = r.reltoastrelid JOIN pg_index i ON i.indrelid = t.oid JOIN pg_class ri ON ri.oid = i.indexrelid WHERE r.relname ~ '^unlogged1'
 ORDER BY relname;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
         relname        | relkind | relpersistence 
 -----------------------+---------+----------------
  unlogged1             | r       | p
@@ -3555,6 +4526,24 @@
 UNION ALL
 SELECT r.relname ||' toast index', ri.relkind, ri.relpersistence FROM pg_class r join pg_class t ON t.oid = r.reltoastrelid JOIN pg_index i ON i.indrelid = t.oid JOIN pg_class ri ON ri.oid = i.indexrelid WHERE r.relname ~ '^logged1'
 ORDER BY relname;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
        relname       | relkind | relpersistence 
 ---------------------+---------+----------------
  logged1             | r       | p
@@ -3578,6 +4567,24 @@
 UNION ALL
 SELECT r.relname || ' toast index', ri.relkind, ri.relpersistence FROM pg_class r join pg_class t ON t.oid = r.reltoastrelid JOIN pg_index i ON i.indrelid = t.oid JOIN pg_class ri ON ri.oid = i.indexrelid WHERE r.relname ~ '^logged1'
 ORDER BY relname;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
        relname       | relkind | relpersistence 
 ---------------------+---------+----------------
  logged1             | r       | u
@@ -3594,6 +4601,23 @@
 -- test ADD COLUMN IF NOT EXISTS
 CREATE TABLE test_add_column(c1 integer);
 \d test_add_column
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
           Table "public.test_add_column"
  Column |  Type   | Collation | Nullable | Default 
 --------+---------+-----------+----------+---------
@@ -3602,6 +4626,23 @@
 ALTER TABLE test_add_column
 	ADD COLUMN c2 integer;
 \d test_add_column
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
           Table "public.test_add_column"
  Column |  Type   | Collation | Nullable | Default 
 --------+---------+-----------+----------+---------
@@ -3615,6 +4656,23 @@
 	ADD COLUMN c2 integer; -- fail because c2 already exists
 ERROR:  column "c2" of relation "test_add_column" already exists
 \d test_add_column
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
           Table "public.test_add_column"
  Column |  Type   | Collation | Nullable | Default 
 --------+---------+-----------+----------+---------
@@ -3628,6 +4686,23 @@
 	ADD COLUMN IF NOT EXISTS c2 integer; -- skipping because c2 already exists
 NOTICE:  column "c2" of relation "test_add_column" already exists, skipping
 \d test_add_column
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
           Table "public.test_add_column"
  Column |  Type   | Collation | Nullable | Default 
 --------+---------+-----------+----------+---------
@@ -3639,6 +4714,23 @@
 	ADD COLUMN c3 integer primary key;
 ERROR:  column "c2" of relation "test_add_column" already exists
 \d test_add_column
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
           Table "public.test_add_column"
  Column |  Type   | Collation | Nullable | Default 
 --------+---------+-----------+----------+---------
@@ -3650,6 +4742,35 @@
 	ADD COLUMN c3 integer primary key;
 NOTICE:  column "c2" of relation "test_add_column" already exists, skipping
 \d test_add_column
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
           Table "public.test_add_column"
  Column |  Type   | Collation | Nullable | Default 
 --------+---------+-----------+----------+---------
@@ -3665,6 +4786,35 @@
 NOTICE:  column "c2" of relation "test_add_column" already exists, skipping
 NOTICE:  column "c3" of relation "test_add_column" already exists, skipping
 \d test_add_column
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
           Table "public.test_add_column"
  Column |  Type   | Collation | Nullable | Default 
 --------+---------+-----------+----------+---------
@@ -3681,6 +4831,38 @@
 NOTICE:  column "c2" of relation "test_add_column" already exists, skipping
 NOTICE:  column "c3" of relation "test_add_column" already exists, skipping
 \d test_add_column
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
           Table "public.test_add_column"
  Column |  Type   | Collation | Nullable | Default 
 --------+---------+-----------+----------+---------
@@ -3699,6 +4881,38 @@
 	ADD COLUMN IF NOT EXISTS c4 integer REFERENCES test_add_column;
 NOTICE:  column "c4" of relation "test_add_column" already exists, skipping
 \d test_add_column
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
           Table "public.test_add_column"
  Column |  Type   | Collation | Nullable | Default 
 --------+---------+-----------+----------+---------
@@ -3716,6 +4930,38 @@
 ALTER TABLE test_add_column
 	ADD COLUMN IF NOT EXISTS c5 SERIAL CHECK (c5 > 8);
 \d test_add_column
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                             Table "public.test_add_column"
  Column |  Type   | Collation | Nullable |                   Default                   
 --------+---------+-----------+----------+---------------------------------------------
@@ -3737,6 +4983,38 @@
 	ADD COLUMN IF NOT EXISTS c5 SERIAL CHECK (c5 > 10);
 NOTICE:  column "c5" of relation "test_add_column" already exists, skipping
 \d test_add_column*
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                             Table "public.test_add_column"
  Column |  Type   | Collation | Nullable |                   Default                   
 --------+---------+-----------+----------+---------------------------------------------
@@ -3754,12 +5032,40 @@
 Referenced by:
     TABLE "test_add_column" CONSTRAINT "test_add_column_c4_fkey" FOREIGN KEY (c4) REFERENCES test_add_column(c3)
 
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                Sequence "public.test_add_column_c5_seq"
   Type   | Start | Minimum |  Maximum   | Increment | Cycles? | Cache 
 ---------+-------+---------+------------+-----------+---------+-------
  integer |     1 |       1 | 2147483647 |         1 | no      |     1
 Owned by: public.test_add_column.c5
 
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  Index "public.test_add_column_pkey"
  Column |  Type   | Key? | Definition 
 --------+---------+------+------------
@@ -3768,6 +5074,7 @@
 
 DROP TABLE test_add_column;
 \d test_add_column*
+INFO:  Path param info: 0.000000
 -- assorted cases with multiple ALTER TABLE steps
 CREATE TABLE ataddindex(f1 INT);
 INSERT INTO ataddindex VALUES (42), (43);
@@ -3776,6 +5083,35 @@
   ADD PRIMARY KEY USING INDEX ataddindexi0,
   ALTER f1 TYPE BIGINT;
 \d ataddindex
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
             Table "public.ataddindex"
  Column |  Type  | Collation | Nullable | Default 
 --------+--------+-----------+----------+---------
@@ -3790,6 +5126,35 @@
   ALTER f1 SET DATA TYPE TEXT,
   ADD EXCLUDE ((f1 LIKE 'a') WITH =);
 \d ataddindex
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
            Table "public.ataddindex"
  Column | Type | Collation | Nullable | Default 
 --------+------+-----------+----------+---------
@@ -3802,7 +5167,40 @@
 ALTER TABLE ataddindex
   ADD PRIMARY KEY (id),
   ADD FOREIGN KEY (ref_id) REFERENCES ataddindex;
+INFO:  Path param info: 0.000000
 \d ataddindex
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
              Table "public.ataddindex"
  Column |  Type   | Collation | Nullable | Default 
 --------+---------+-----------+----------+---------
@@ -3820,7 +5218,40 @@
 ALTER TABLE ataddindex
   ADD UNIQUE (id),
   ADD FOREIGN KEY (ref_id) REFERENCES ataddindex (id);
+INFO:  Path param info: 0.000000
 \d ataddindex
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
              Table "public.ataddindex"
  Column |  Type   | Collation | Nullable | Default 
 --------+---------+-----------+----------+---------
@@ -4307,6 +5738,28 @@
 -- works fine
 ALTER TABLE range_parted2 DETACH PARTITION part_rp CONCURRENTLY;
 \d+ range_parted2
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                          Partitioned table "public.range_parted2"
  Column |  Type   | Collation | Nullable | Default | Storage | Stats target | Description 
 --------+---------+-----------+----------+---------+---------+--------------+-------------
@@ -4316,6 +5769,23 @@
 
 -- constraint should be created
 \d part_rp
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
               Table "public.part_rp"
  Column |  Type   | Collation | Nullable | Default 
 --------+---------+-----------+----------+---------
@@ -4327,6 +5797,23 @@
 ALTER TABLE range_parted2 DETACH PARTITION part_rp100 CONCURRENTLY;
 -- redundant constraint should not be created
 \d part_rp100
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
              Table "public.part_rp100"
  Column |  Type   | Collation | Nullable | Default 
 --------+---------+-----------+----------+---------
@@ -4566,13 +6053,17 @@
 create table atref (c1 int references attbl(p1));
 cluster attbl using pk_attbl;
 alter table attbl alter column p1 set data type bigint;
+INFO:  Path param info: 0.000000
 alter table atref alter column c1 set data type bigint;
+INFO:  Path param info: 0.000000
 drop table attbl, atref;
 create table attbl (p1 int constraint pk_attbl primary key);
 alter table attbl replica identity using index pk_attbl;
 create table atref (c1 int references attbl(p1));
 alter table attbl alter column p1 set data type bigint;
+INFO:  Path param info: 0.000000
 alter table atref alter column c1 set data type bigint;
+INFO:  Path param info: 0.000000
 drop table attbl, atref;
 /* End test case for bug #17409 */
 -- Test that ALTER TABLE rewrite preserves a clustered index
@@ -4652,6 +6143,26 @@
 reset client_min_messages;
 alter table alter1.t1 set schema alter2;
 \d+ alter2.t1
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                     Table "alter2.t1"
  Column |  Type   | Collation | Nullable | Default | Storage | Stats target | Description 
 --------+---------+-----------+----------+---------+---------+--------------+-------------
diff -U3 /home/dbs/pg-queryplans/postgres/src/test/regress/expected/sequence.out /home/dbs/pg-queryplans/postgres/src/test/regress/results/sequence.out
--- /home/dbs/pg-queryplans/postgres/src/test/regress/expected/sequence.out	2024-02-20 13:16:25.975611131 +0900
+++ /home/dbs/pg-queryplans/postgres/src/test/regress/results/sequence.out	2024-02-20 16:07:34.823981770 +0900
@@ -478,6 +478,25 @@
 SELECT * FROM information_schema.sequences
   WHERE sequence_name ~ ANY(ARRAY['sequence_test', 'serialtest'])
   ORDER BY sequence_name ASC;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  sequence_catalog | sequence_schema |   sequence_name    | data_type | numeric_precision | numeric_precision_radix | numeric_scale | start_value |    minimum_value     |    maximum_value    | increment | cycle_option 
 ------------------+-----------------+--------------------+-----------+-------------------+-------------------------+---------------+-------------+----------------------+---------------------+-----------+--------------
  regression       | public          | sequence_test10    | smallint  |                16 |                       2 |             0 | 1           | -20000               | 32767               | 1         | NO
@@ -505,6 +524,10 @@
 FROM pg_sequences
 WHERE sequencename ~ ANY(ARRAY['sequence_test', 'serialtest'])
   ORDER BY sequencename ASC;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  schemaname |    sequencename    | start_value |      min_value       |      max_value      | increment_by | cycle | cache_size | last_value 
 ------------+--------------------+-------------+----------------------+---------------------+--------------+-------+------------+------------
  public     | sequence_test10    |           1 |               -20000 |               32767 |            1 | f     |          1 |           
@@ -535,12 +558,52 @@
 (1 row)
 
 \d sequence_test4
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                        Sequence "public.sequence_test4"
   Type  | Start |       Minimum        | Maximum | Increment | Cycles? | Cache 
 --------+-------+----------------------+---------+-----------+---------+-------
  bigint |    -1 | -9223372036854775808 |      -1 |        -1 | no      |     1
 
 \d serialtest2_f2_seq
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                  Sequence "public.serialtest2_f2_seq"
   Type   | Start | Minimum |  Maximum   | Increment | Cycles? | Cache 
 ---------+-------+---------+------------+-----------+---------+-------
@@ -603,6 +666,26 @@
 CREATE UNLOGGED SEQUENCE sequence_test_unlogged;
 ALTER SEQUENCE sequence_test_unlogged SET LOGGED;
 \d sequence_test_unlogged
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                    Sequence "public.sequence_test_unlogged"
   Type  | Start | Minimum |       Maximum       | Increment | Cycles? | Cache 
 --------+-------+---------+---------------------+-----------+---------+-------
@@ -610,6 +693,26 @@
 
 ALTER SEQUENCE sequence_test_unlogged SET UNLOGGED;
 \d sequence_test_unlogged
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
               Unlogged sequence "public.sequence_test_unlogged"
   Type  | Start | Minimum |       Maximum       | Increment | Cycles? | Cache 
 --------+-------+---------+---------------------+-----------+---------+-------
@@ -811,6 +914,25 @@
   ('sequence_test2', 'serialtest2_f2_seq', 'serialtest2_f3_seq',
    'serialtest2_f4_seq', 'serialtest2_f5_seq', 'serialtest2_f6_seq')
   ORDER BY sequence_name ASC;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  sequence_catalog | sequence_schema | sequence_name  | data_type | numeric_precision | numeric_precision_radix | numeric_scale | start_value | minimum_value | maximum_value | increment | cycle_option 
 ------------------+-----------------+----------------+-----------+-------------------+-------------------------+---------------+-------------+---------------+---------------+-----------+--------------
  regression       | public          | sequence_test2 | bigint    |                64 |                       2 |             0 | 32          | 5             | 36            | 4         | YES
diff -U3 /home/dbs/pg-queryplans/postgres/src/test/regress/expected/polymorphism.out /home/dbs/pg-queryplans/postgres/src/test/regress/results/polymorphism.out
--- /home/dbs/pg-queryplans/postgres/src/test/regress/expected/polymorphism.out	2024-02-20 13:16:25.967611274 +0900
+++ /home/dbs/pg-queryplans/postgres/src/test/regress/results/polymorphism.out	2024-02-20 16:07:34.827981712 +0900
@@ -942,6 +942,15 @@
 -- check that we can apply functions taking ANYARRAY to pg_stats
 select distinct array_ndims(histogram_bounds) from pg_stats
 where histogram_bounds is not null;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  array_ndims 
 -------------
            1
@@ -950,6 +959,15 @@
 -- such functions must protect themselves if varying element type isn't OK
 -- (WHERE clause here is to avoid possibly getting a collation error instead)
 select max(histogram_bounds) from pg_stats where tablename = 'pg_am';
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
 ERROR:  cannot compare arrays of different element types
 -- another corner case is the input functions for polymorphic pseudotypes
 select array_in('{1,2,3}','int4'::regtype,-1);  -- this has historically worked
@@ -1177,6 +1195,7 @@
 
 -- verify it lists properly
 \df dfunc
+INFO:  Path param info: 0.000000
                                           List of functions
  Schema | Name  | Result data type |                    Argument data types                    | Type 
 --------+-------+------------------+-----------------------------------------------------------+------
@@ -1345,6 +1364,7 @@
 ERROR:  cannot remove parameter defaults from existing function
 HINT:  Use DROP FUNCTION dfunc(integer[]) first.
 \df dfunc
+INFO:  Path param info: 0.000000
                                      List of functions
  Schema | Name  | Result data type |               Argument data types               | Type 
 --------+-------+------------------+-------------------------------------------------+------
@@ -1793,6 +1813,11 @@
 (5 rows)
 
 \d+ dfview
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                            View "public.dfview"
  Column |  Type  | Collation | Nullable | Default | Storage | Description 
 --------+--------+-----------+----------+---------+---------+-------------
diff -U3 /home/dbs/pg-queryplans/postgres/src/test/regress/expected/rowtypes.out /home/dbs/pg-queryplans/postgres/src/test/regress/results/rowtypes.out
--- /home/dbs/pg-queryplans/postgres/src/test/regress/expected/rowtypes.out	2024-02-20 13:16:25.971611203 +0900
+++ /home/dbs/pg-queryplans/postgres/src/test/regress/results/rowtypes.out	2024-02-20 16:07:34.839981536 +0900
@@ -291,6 +291,8 @@
 where (unique1, unique2) < any (select ten, ten from tenk1 where hundred < 3)
       and unique1 <= 20
 order by 1;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  unique1 | unique2 
 ---------+---------
        0 |    9998
@@ -890,6 +892,7 @@
     SET active = true, price = input_prices.price
     FROM unnest(ARRAY[(10, 123.00), (11, 99.99)]::price_input[]) input_prices
     WHERE price_key_from_table(price.*) = price_key_from_input(input_prices.*);
+INFO:  Path param info: 0.000000
 select * from price;
  id | active | price  
 ----+--------+--------
diff -U3 /home/dbs/pg-queryplans/postgres/src/test/regress/expected/returning.out /home/dbs/pg-queryplans/postgres/src/test/regress/results/returning.out
--- /home/dbs/pg-queryplans/postgres/src/test/regress/expected/returning.out	2024-02-20 13:16:25.971611203 +0900
+++ /home/dbs/pg-queryplans/postgres/src/test/regress/results/returning.out	2024-02-20 16:07:34.783982354 +0900
@@ -85,6 +85,7 @@
   FROM int4_tbl i
   WHERE foo.f1 + 123455 = i.f1
   RETURNING foo.*, i.f1 as "i.f1";
+INFO:  Path param info: 0.000000
  f1 |  f2  | f3 |  i.f1  
 ----+------+----+--------
   1 | test | 84 | 123456
@@ -101,6 +102,7 @@
   USING int4_tbl i
   WHERE foo.f1 + 123455 = i.f1
   RETURNING foo.*, i.f1 as "i.f1";
+INFO:  Path param info: 0.000000
  f1 |  f2  | f3 |  i.f1  
 ----+------+----+--------
   1 | test | 84 | 123456
@@ -153,6 +155,7 @@
   FROM int8_tbl i
   WHERE foo.f1 = i.q2
   RETURNING *;
+INFO:  Path param info: 0.000000
  f1  |  f2   |  f3  |  f4  |        q1        | q2  
 -----+-------+------+------+------------------+-----
  123 | child | 1998 | 1098 | 4567890123456789 | 123
@@ -175,6 +178,7 @@
   USING int8_tbl i
   WHERE foo.f1 = i.q2
   RETURNING *;
+INFO:  Path param info: 0.000000
  f1  |  f2   |  f3  |  f4  |        q1        | q2  
 -----+-------+------+------+------------------+-----
  123 | child | 1998 | 1098 | 4567890123456789 | 123
@@ -238,7 +242,9 @@
   UPDATE foo SET f1 = new.f1, f2 = new.f2 WHERE f1 = old.f1
   RETURNING f1, f2;
 update voo set f1 = f1 + 1 where f2 = 'zoo2';
+INFO:  Path param info: 0.000000
 update voo set f1 = f1 + 1 where f2 = 'zoo2' RETURNING *, f1*2;
+INFO:  Path param info: 0.000000
  f1 |  f2  | ?column? 
 ----+------+----------
  16 | zoo2 |       32
@@ -294,6 +300,7 @@
 CREATE TEMP VIEW joinview AS
   SELECT foo.*, other FROM foo JOIN joinme ON (f2 = f2j);
 SELECT * FROM joinview;
+INFO:  Path param info: 0.000000
  f1 |  f2  | f3 | f4  | other 
 ----+------+----+-----+-------
   2 | more | 42 | 141 | 12345
@@ -305,12 +312,33 @@
     FROM joinme WHERE f2 = f2j AND f2 = old.f2
     RETURNING foo.*, other;
 UPDATE joinview SET f1 = f1 + 1 WHERE f3 = 57 RETURNING *, other + 1;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  f1 |  f2  | f3 | f4 | other | ?column? 
 ----+------+----+----+-------+----------
  17 | zoo2 | 57 | 99 | 54321 |    54322
 (1 row)
 
 SELECT * FROM joinview;
+INFO:  Path param info: 0.000000
  f1 |  f2  | f3 | f4  | other 
 ----+------+----+-----+-------
   2 | more | 42 | 141 | 12345
diff -U3 /home/dbs/pg-queryplans/postgres/src/test/regress/expected/with.out /home/dbs/pg-queryplans/postgres/src/test/regress/results/with.out
--- /home/dbs/pg-queryplans/postgres/src/test/regress/expected/with.out	2024-02-20 13:16:25.979611060 +0900
+++ /home/dbs/pg-queryplans/postgres/src/test/regress/results/with.out	2024-02-20 16:07:34.839981536 +0900
@@ -4,6 +4,7 @@
 -- Basic WITH
 WITH q1(x,y) AS (SELECT 1,2)
 SELECT * FROM q1, q1 AS q2;
+INFO:  Path param info: 0.000000
  x | y | x | y 
 ---+---+---+---
  1 | 2 | 1 | 2
@@ -268,6 +269,7 @@
 		WHERE d.parent_department = sd.id
 )
 SELECT * FROM subdepartment ORDER BY name;
+INFO:  Path param info: 0.000000
  root_name | id | parent_department | name 
 -----------+----+-------------------+------
  A         |  1 |                 0 | A
@@ -288,6 +290,7 @@
 		WHERE d.parent_department = sd.id
 )
 SELECT * FROM subdepartment ORDER BY name;
+INFO:  Path param info: 0.000000
  level | id | parent_department | name 
 -------+----+-------------------+------
      1 |  1 |                 0 | A
@@ -309,6 +312,7 @@
 		WHERE d.parent_department = sd.id
 )
 SELECT * FROM subdepartment WHERE level >= 2 ORDER BY name;
+INFO:  Path param info: 0.000000
  level | id | parent_department | name 
 -------+----+-------------------+------
      2 |  2 |                 1 | B
@@ -369,6 +373,7 @@
 	)
 	SELECT * FROM subdepartment;
 SELECT * FROM vsubdepartment ORDER BY name;
+INFO:  Path param info: 0.000000
  id | parent_department | name 
 ----+-------------------+------
   1 |                 0 | A
@@ -434,6 +439,11 @@
 )
 SELECT sum(n) FROM t;
 \d+ sums_1_100
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                          View "public.sums_1_100"
  Column |  Type  | Collation | Nullable | Default | Storage | Description 
 --------+--------+-----------+----------+---------+---------+-------------
@@ -540,6 +550,7 @@
 		(SELECT 2 AS i UNION ALL SELECT 3 AS i) AS t2
 		JOIN t ON (t2.i = t.i+1))
 	SELECT * FROM t;
+INFO:  Path param info: 0.000000
  i | j 
 ---+---
  1 | 2
@@ -571,6 +582,8 @@
 	array_upper(t1.path,1) = 1 AND
 	array_upper(t2.path,1) > 1)
 	ORDER BY t1.id, t2.id;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  id | path | id |    path     
 ----+------+----+-------------
   2 | {2}  |  4 | {2,4}
@@ -601,6 +614,8 @@
 	array_upper(t2.path,1) > 1)
 	GROUP BY t1.id
 	ORDER BY t1.id;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  id | count 
 ----+-------
   2 |     6
@@ -616,6 +631,8 @@
 )
 SELECT t1.id, t2.path, t2 FROM t AS t1 JOIN t AS t2 ON
 (t1.id=t2.id);
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  id |    path     |         t2         
 ----+-------------+--------------------
   1 | {}          | (1,{})
@@ -653,6 +670,7 @@
 	where g.f = sg.t
 ) search depth first by f, t set seq
 select * from search_graph order by seq;
+INFO:  Path param info: 0.000000
                                           QUERY PLAN                                          
 ----------------------------------------------------------------------------------------------
  Sort
@@ -687,6 +705,7 @@
 	where g.f = sg.t
 ) search depth first by f, t set seq
 select * from search_graph order by seq;
+INFO:  Path param info: 0.000000
  f | t |   label    |        seq        
 ---+---+------------+-------------------
  1 | 2 | arc 1 -> 2 | {"(1,2)"}
@@ -706,6 +725,7 @@
 	where g.f = sg.t
 ) search depth first by f, t set seq
 select * from search_graph order by seq;
+INFO:  Path param info: 0.000000
  f | t |   label    |        seq        
 ---+---+------------+-------------------
  1 | 2 | arc 1 -> 2 | {"(1,2)"}
@@ -726,6 +746,7 @@
 	where g.f = sg.t
 ) search breadth first by f, t set seq
 select * from search_graph order by seq;
+INFO:  Path param info: 0.000000
                                            QUERY PLAN                                            
 -------------------------------------------------------------------------------------------------
  Sort
@@ -760,6 +781,7 @@
 	where g.f = sg.t
 ) search breadth first by f, t set seq
 select * from search_graph order by seq;
+INFO:  Path param info: 0.000000
  f | t |   label    |   seq   
 ---+---+------------+---------
  1 | 2 | arc 1 -> 2 | (0,1,2)
@@ -779,6 +801,7 @@
 	where g.f = sg.t
 ) search breadth first by f, t set seq
 select * from search_graph order by seq;
+INFO:  Path param info: 0.000000
  f | t |   label    |   seq   
 ---+---+------------+---------
  1 | 2 | arc 1 -> 2 | (0,1,2)
@@ -966,6 +989,7 @@
 (1 row)
 
 select * from v_search;
+INFO:  Path param info: 0.000000
  f | t |   label    
 ---+---+------------
  1 | 2 | arc 1 -> 2
@@ -996,6 +1020,7 @@
 	where g.f = sg.t and not is_cycle
 )
 select * from search_graph;
+INFO:  Path param info: 0.000000
  f | t |   label    | is_cycle |                   path                    
 ---+---+------------+----------+-------------------------------------------
  1 | 2 | arc 1 -> 2 | f        | {"(1,2)"}
@@ -1034,6 +1059,7 @@
 	where g.f = sg.t and not is_cycle
 )
 select * from search_graph;
+INFO:  Path param info: 0.000000
  f | t |   label    | is_cycle |                   path                    
 ---+---+------------+----------+-------------------------------------------
  1 | 2 | arc 1 -> 2 | f        | {"(1,2)"}
@@ -1072,6 +1098,7 @@
 	where g.f = sg.t and not is_cycle
 )
 select * from search_graph order by path;
+INFO:  Path param info: 0.000000
  f | t |   label    | is_cycle |                   path                    
 ---+---+------------+----------+-------------------------------------------
  1 | 2 | arc 1 -> 2 | f        | {"(1,2)"}
@@ -1111,6 +1138,7 @@
 	where g.f = sg.t
 ) cycle f, t set is_cycle using path
 select * from search_graph;
+INFO:  Path param info: 0.000000
                                                                               QUERY PLAN                                                                               
 -----------------------------------------------------------------------------------------------------------------------------------------------------------------------
  CTE Scan on search_graph
@@ -1143,6 +1171,7 @@
 	where g.f = sg.t
 ) cycle f, t set is_cycle using path
 select * from search_graph;
+INFO:  Path param info: 0.000000
  f | t |   label    | is_cycle |                   path                    
 ---+---+------------+----------+-------------------------------------------
  1 | 2 | arc 1 -> 2 | f        | {"(1,2)"}
@@ -1180,6 +1209,7 @@
 	where g.f = sg.t
 ) cycle f, t set is_cycle to 'Y' default 'N' using path
 select * from search_graph;
+INFO:  Path param info: 0.000000
  f | t |   label    | is_cycle |                   path                    
 ---+---+------------+----------+-------------------------------------------
  1 | 2 | arc 1 -> 2 | N        | {"(1,2)"}
@@ -1293,6 +1323,7 @@
         where g.f = sg.t
 ) cycle f, t set is_cycle to true default false using path
 select f, t, label from search_graph;
+INFO:  Path param info: 0.000000
  f | t |   label    
 ---+---+------------
  1 | 2 | arc 1 -> 2
@@ -1345,6 +1376,7 @@
 ) search depth first by f, t set seq
   cycle f, t set is_cycle using path
 select * from search_graph;
+INFO:  Path param info: 0.000000
  f | t |   label    |                    seq                    | is_cycle |                   path                    
 ---+---+------------+-------------------------------------------+----------+-------------------------------------------
  1 | 2 | arc 1 -> 2 | {"(1,2)"}                                 | f        | {"(1,2)"}
@@ -1383,6 +1415,7 @@
 ) search breadth first by f, t set seq
   cycle f, t set is_cycle using path
 select * from search_graph;
+INFO:  Path param info: 0.000000
  f | t |   label    |   seq   | is_cycle |                   path                    
 ---+---+------------+---------+----------+-------------------------------------------
  1 | 2 | arc 1 -> 2 | (0,1,2) | f        | {"(1,2)"}
@@ -1576,6 +1609,7 @@
 (1 row)
 
 select * from v_cycle1;
+INFO:  Path param info: 0.000000
  f | t |   label    
 ---+---+------------
  1 | 2 | arc 1 -> 2
@@ -1606,6 +1640,7 @@
 (25 rows)
 
 select * from v_cycle2;
+INFO:  Path param info: 0.000000
  f | t |   label    
 ---+---+------------
  1 | 2 | arc 1 -> 2
@@ -1671,6 +1706,7 @@
    y(id) AS
      (VALUES (1) UNION ALL SELECT id+1 FROM y WHERE id < 10)
  SELECT y.*, x.* FROM y LEFT JOIN x USING (id);
+INFO:  Path param info: 0.000000
  id | id 
 ----+----
   1 |  1
@@ -1691,6 +1727,7 @@
    y(id) AS
      (VALUES (1) UNION ALL SELECT id+1 FROM x WHERE id < 10)
  SELECT y.*, x.* FROM y LEFT JOIN x USING (id);
+INFO:  Path param info: -1.000000
  id | id 
 ----+----
   1 |  1
@@ -1859,6 +1896,7 @@
 	SELECT a FROM y
 )
 UPDATE y SET a = y.a-10 FROM t WHERE y.a > 20 AND t.a = y.a RETURNING y.a;
+INFO:  Path param info: 0.000000
  a  
 ----
  11
@@ -1904,6 +1942,7 @@
 	SELECT a+1 FROM t WHERE a < 50
 )
 DELETE FROM y USING t WHERE t.a = y.a RETURNING y.a;
+INFO:  Path param info: 0.000000
  a  
 ----
  11
@@ -2333,6 +2372,8 @@
     )
   )
 SELECT * FROM iter;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  id_key | row_type | link 
 --------+----------+------
       0 | base     |   17
@@ -2369,6 +2410,8 @@
     )
   )
 SELECT * FROM iter;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  id_key | row_type | link 
 --------+----------+------
       0 | base     |   17
@@ -2674,6 +2717,7 @@
 BEGIN; SET LOCAL debug_parallel_query = on;
 WITH t1 AS ( DELETE FROM bug6051_3 RETURNING * )
   INSERT INTO bug6051_3 SELECT * FROM t1;
+INFO:  Path param info: 0.000000
  i 
 ---
  1
@@ -2767,6 +2811,8 @@
 		SELECT * FROM t RETURNING *
 )
 SELECT * FROM t2 JOIN y USING (a) ORDER BY a;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  a 
 ---
  0
@@ -2913,6 +2959,8 @@
     RETURNING *
 )
 SELECT * FROM t JOIN y ON t.k = y.a ORDER BY a, k;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  k |   v    | a 
 ---+--------+---
  0 | insert | 0
@@ -3002,6 +3050,7 @@
 MERGE INTO m USING (select 0 k, 'merge source SubPlan' v offset 0) o ON m.k=o.k
 WHEN MATCHED THEN UPDATE SET v = (SELECT b || ' merge update' FROM cte_basic WHERE cte_basic.a = m.k LIMIT 1)
 WHEN NOT MATCHED THEN INSERT VALUES(o.k, o.v);
+INFO:  Path param info: 0.000000
 -- Examine
 SELECT * FROM m where k = 0;
  k |          v           
@@ -3015,6 +3064,7 @@
 MERGE INTO m USING (select 0 k, 'merge source SubPlan' v offset 0) o ON m.k=o.k
 WHEN MATCHED THEN UPDATE SET v = (SELECT b || ' merge update' FROM cte_basic WHERE cte_basic.a = m.k LIMIT 1)
 WHEN NOT MATCHED THEN INSERT VALUES(o.k, o.v);
+INFO:  Path param info: 0.000000
                             QUERY PLAN                             
 -------------------------------------------------------------------
  Merge on public.m
@@ -3045,6 +3095,7 @@
 MERGE INTO m USING (select 1 k, 'merge source InitPlan' v offset 0) o ON m.k=o.k
 WHEN MATCHED THEN UPDATE SET v = (SELECT b || ' merge update' FROM cte_init WHERE a = 1 LIMIT 1)
 WHEN NOT MATCHED THEN INSERT VALUES(o.k, o.v);
+INFO:  Path param info: 0.000000
 -- Examine
 SELECT * FROM m where k = 1;
  k |             v             
@@ -3058,6 +3109,7 @@
 MERGE INTO m USING (select 1 k, 'merge source InitPlan' v offset 0) o ON m.k=o.k
 WHEN MATCHED THEN UPDATE SET v = (SELECT b || ' merge update' FROM cte_init WHERE a = 1 LIMIT 1)
 WHEN NOT MATCHED THEN INSERT VALUES(o.k, o.v);
+INFO:  Path param info: 0.000000
                              QUERY PLAN                             
 --------------------------------------------------------------------
  Merge on public.m
@@ -3088,6 +3140,7 @@
 MERGE INTO m USING (select * from merge_source_cte) o ON m.k=o.a
 WHEN MATCHED THEN UPDATE SET v = (SELECT b || merge_source_cte.*::text || ' merge update' FROM merge_source_cte WHERE a = 15)
 WHEN NOT MATCHED THEN INSERT VALUES(o.a, o.b || (SELECT merge_source_cte.*::text || ' merge insert' FROM merge_source_cte));
+INFO:  Path param info: 0.000000
 -- Examine
 SELECT * FROM m where k = 15;
  k  |                              v                               
@@ -3101,6 +3154,7 @@
 MERGE INTO m USING (select * from merge_source_cte) o ON m.k=o.a
 WHEN MATCHED THEN UPDATE SET v = (SELECT b || merge_source_cte.*::text || ' merge update' FROM merge_source_cte WHERE a = 15)
 WHEN NOT MATCHED THEN INSERT VALUES(o.a, o.b || (SELECT merge_source_cte.*::text || ' merge insert' FROM merge_source_cte));
+INFO:  Path param info: 0.000000
                                              QUERY PLAN                                              
 -----------------------------------------------------------------------------------------------------
  Merge on public.m
@@ -3352,6 +3406,7 @@
 INSERT INTO child2 VALUES ( 23, 'c21' ),( 24, 'c22' );
 WITH rcte AS ( SELECT sum(id) AS totalid FROM parent )
 UPDATE parent SET id = id + totalid FROM rcte;
+INFO:  Path param info: 0.000000
 SELECT * FROM parent;
  id | val 
 ----+-----
@@ -3364,6 +3419,7 @@
 
 WITH wcte AS ( INSERT INTO child1 VALUES ( 42, 'new' ) RETURNING id AS newid )
 UPDATE parent SET id = id + newid FROM wcte;
+INFO:  Path param info: 0.000000
 SELECT * FROM parent;
  id  | val 
 -----+-----
@@ -3377,6 +3433,7 @@
 
 WITH rcte AS ( SELECT max(id) AS maxid FROM parent )
 DELETE FROM parent USING rcte WHERE id = maxid;
+INFO:  Path param info: 0.000000
 SELECT * FROM parent;
  id  | val 
 -----+-----
@@ -3389,6 +3446,7 @@
 
 WITH wcte AS ( INSERT INTO child2 VALUES ( 42, 'new2' ) RETURNING id AS newid )
 DELETE FROM parent USING wcte WHERE id = newid;
+INFO:  Path param info: 0.000000
 SELECT * FROM parent;
  id  | val  
 -----+------
@@ -3403,6 +3461,7 @@
 EXPLAIN (VERBOSE, COSTS OFF)
 WITH wcte AS ( INSERT INTO int8_tbl VALUES ( 42, 47 ) RETURNING q2 )
 DELETE FROM a_star USING wcte WHERE aa = q2;
+INFO:  Path param info: 0.000000
                                 QUERY PLAN                                 
 ---------------------------------------------------------------------------
  Delete on public.a_star
diff -U3 /home/dbs/pg-queryplans/postgres/src/test/regress/expected/xml_1.out /home/dbs/pg-queryplans/postgres/src/test/regress/results/xml.out
--- /home/dbs/pg-queryplans/postgres/src/test/regress/expected/xml_1.out	2024-02-20 13:16:25.979611060 +0900
+++ /home/dbs/pg-queryplans/postgres/src/test/regress/results/xml.out	2024-02-20 16:07:34.799982120 +0900
@@ -574,6 +574,8 @@
 DETAIL:  This functionality requires the server to be built with libxml support.
 SELECT table_name, view_definition FROM information_schema.views
   WHERE table_name LIKE 'xmlview%' ORDER BY 1;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  table_name |                                view_definition                                 
 ------------+--------------------------------------------------------------------------------
  xmlview1   |  SELECT xmlcomment('test'::text) AS xmlcomment;
@@ -815,6 +817,7 @@
 CREATE TABLE query ( expr TEXT );
 INSERT INTO query VALUES ('/menu/beers/cost[text() = ''lots'']');
 SELECT COUNT(id) FROM xmltest, query WHERE xmlexists(expr PASSING BY REF data);
+INFO:  Path param info: 0.000000
  count 
 -------
      0
@@ -969,6 +972,7 @@
                                   size float PATH 'SIZE',
                                   unit text PATH 'SIZE/@unit',
                                   premier_name text PATH 'PREMIER_NAME' DEFAULT 'not specified');
+INFO:  Path param info: 0.000000
  id | _id | country_name | country_id | region_id | size | unit | premier_name 
 ----+-----+--------------+------------+-----------+------+------+--------------
 (0 rows)
@@ -986,11 +990,13 @@
                                   unit text PATH 'SIZE/@unit',
                                   premier_name text PATH 'PREMIER_NAME' DEFAULT 'not specified');
 SELECT * FROM xmltableview1;
+INFO:  Path param info: 0.000000
  id | _id | country_name | country_id | region_id | size | unit | premier_name 
 ----+-----+--------------+------------+-----------+------+------+--------------
 (0 rows)
 
 \sv xmltableview1
+INFO:  Path param info: 0.000000
 CREATE OR REPLACE VIEW public.xmltableview1 AS
  SELECT "xmltable".id,
     "xmltable"._id,
@@ -1004,6 +1010,7 @@
            FROM xmldata) x,
     LATERAL XMLTABLE(('/ROWS/ROW'::text) PASSING (x.data) COLUMNS id integer PATH ('@id'::text), _id FOR ORDINALITY, country_name text PATH ('COUNTRY_NAME/text()'::text) NOT NULL, country_id text PATH ('COUNTRY_ID'::text), region_id integer PATH ('REGION_ID'::text), size double precision PATH ('SIZE'::text), unit text PATH ('SIZE/@unit'::text), premier_name text DEFAULT ('not specified'::text) PATH ('PREMIER_NAME'::text))
 EXPLAIN (COSTS OFF) SELECT * FROM xmltableview1;
+INFO:  Path param info: 0.000000
                QUERY PLAN                
 -----------------------------------------
  Nested Loop
@@ -1012,6 +1019,7 @@
 (3 rows)
 
 EXPLAIN (COSTS OFF, VERBOSE) SELECT * FROM xmltableview1;
+INFO:  Path param info: 0.000000
                                                                                                                                                                                                                             QUERY PLAN                                                                                                                                                                                                                            
 ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  Nested Loop
@@ -1077,41 +1085,49 @@
                                   unit text PATH 'SIZE/@unit',
                                   premier_name text PATH 'PREMIER_NAME' DEFAULT 'not specified');
 EXECUTE pp;
+INFO:  Path param info: 0.000000
  id | _id | country_name | country_id | region_id | size | unit | premier_name 
 ----+-----+--------------+------------+-----------+------+------+--------------
 (0 rows)
 
 SELECT xmltable.* FROM xmldata, LATERAL xmltable('/ROWS/ROW[COUNTRY_NAME="Japan" or COUNTRY_NAME="India"]' PASSING data COLUMNS "COUNTRY_NAME" text, "REGION_ID" int);
+INFO:  Path param info: 0.000000
  COUNTRY_NAME | REGION_ID 
 --------------+-----------
 (0 rows)
 
 SELECT xmltable.* FROM xmldata, LATERAL xmltable('/ROWS/ROW[COUNTRY_NAME="Japan" or COUNTRY_NAME="India"]' PASSING data COLUMNS id FOR ORDINALITY, "COUNTRY_NAME" text, "REGION_ID" int);
+INFO:  Path param info: 0.000000
  id | COUNTRY_NAME | REGION_ID 
 ----+--------------+-----------
 (0 rows)
 
 SELECT xmltable.* FROM xmldata, LATERAL xmltable('/ROWS/ROW[COUNTRY_NAME="Japan" or COUNTRY_NAME="India"]' PASSING data COLUMNS id int PATH '@id', "COUNTRY_NAME" text, "REGION_ID" int);
+INFO:  Path param info: 0.000000
  id | COUNTRY_NAME | REGION_ID 
 ----+--------------+-----------
 (0 rows)
 
 SELECT xmltable.* FROM xmldata, LATERAL xmltable('/ROWS/ROW[COUNTRY_NAME="Japan" or COUNTRY_NAME="India"]' PASSING data COLUMNS id int PATH '@id');
+INFO:  Path param info: 0.000000
  id 
 ----
 (0 rows)
 
 SELECT xmltable.* FROM xmldata, LATERAL xmltable('/ROWS/ROW[COUNTRY_NAME="Japan" or COUNTRY_NAME="India"]' PASSING data COLUMNS id FOR ORDINALITY);
+INFO:  Path param info: 0.000000
  id 
 ----
 (0 rows)
 
 SELECT xmltable.* FROM xmldata, LATERAL xmltable('/ROWS/ROW[COUNTRY_NAME="Japan" or COUNTRY_NAME="India"]' PASSING data COLUMNS id int PATH '@id', "COUNTRY_NAME" text, "REGION_ID" int, rawdata xml PATH '.');
+INFO:  Path param info: 0.000000
  id | COUNTRY_NAME | REGION_ID | rawdata 
 ----+--------------+-----------+---------
 (0 rows)
 
 SELECT xmltable.* FROM xmldata, LATERAL xmltable('/ROWS/ROW[COUNTRY_NAME="Japan" or COUNTRY_NAME="India"]' PASSING data COLUMNS id int PATH '@id', "COUNTRY_NAME" text, "REGION_ID" int, rawdata xml PATH './*');
+INFO:  Path param info: 0.000000
  id | COUNTRY_NAME | REGION_ID | rawdata 
 ----+--------------+-----------+---------
 (0 rows)
@@ -1156,6 +1172,7 @@
                                   size float PATH 'SIZE',
                                   unit text PATH 'SIZE/@unit',
                                   premier_name text PATH 'PREMIER_NAME' DEFAULT 'not specified');
+INFO:  Path param info: 0.000000
                                                                                                                                                                                                                         QUERY PLAN                                                                                                                                                                                                                         
 -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  Nested Loop
@@ -1169,12 +1186,14 @@
 
 -- test qual
 SELECT xmltable.* FROM xmldata, LATERAL xmltable('/ROWS/ROW[COUNTRY_NAME="Japan" or COUNTRY_NAME="India"]' PASSING data COLUMNS "COUNTRY_NAME" text, "REGION_ID" int) WHERE "COUNTRY_NAME" = 'Japan';
+INFO:  Path param info: 0.000000
  COUNTRY_NAME | REGION_ID 
 --------------+-----------
 (0 rows)
 
 EXPLAIN (VERBOSE, COSTS OFF)
 SELECT xmltable.* FROM xmldata, LATERAL xmltable('/ROWS/ROW[COUNTRY_NAME="Japan" or COUNTRY_NAME="India"]' PASSING data COLUMNS "COUNTRY_NAME" text, "REGION_ID" int) WHERE "COUNTRY_NAME" = 'Japan';
+INFO:  Path param info: 0.000000
                                                                                     QUERY PLAN                                                                                    
 ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  Nested Loop
@@ -1237,6 +1256,7 @@
                                   size float PATH 'SIZE',
                                   unit text PATH 'SIZE/@unit',
                                   premier_name text PATH 'PREMIER_NAME' DEFAULT 'not specified');
+INFO:  Path param info: 0.000000
  id | _id | country_name | country_id | region_id | size | unit | premier_name 
 ----+-----+--------------+------------+-----------+------+------+--------------
 (0 rows)
@@ -1254,6 +1274,7 @@
                                   unit text PATH 'SIZE/@unit',
                                   premier_name text PATH 'PREMIER_NAME' DEFAULT 'not specified')
   WHERE region_id = 2;
+INFO:  Path param info: 0.000000
  id | _id | country_name | country_id | region_id | size | unit | premier_name 
 ----+-----+--------------+------------+-----------+------+------+--------------
 (0 rows)
@@ -1272,6 +1293,7 @@
                                   unit text PATH 'SIZE/@unit',
                                   premier_name text PATH 'PREMIER_NAME' DEFAULT 'not specified')
   WHERE region_id = 2;
+INFO:  Path param info: 0.000000
                                                                                                                                                                                                                         QUERY PLAN                                                                                                                                                                                                                         
 -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  Nested Loop
@@ -1297,6 +1319,7 @@
                                   size float PATH 'SIZE' NOT NULL,
                                   unit text PATH 'SIZE/@unit',
                                   premier_name text PATH 'PREMIER_NAME' DEFAULT 'not specified');
+INFO:  Path param info: 0.000000
  id | _id | country_name | country_id | region_id | size | unit | premier_name 
 ----+-----+--------------+------------+-----------+------+------+--------------
 (0 rows)
@@ -1372,16 +1395,19 @@
                                     ^
 DETAIL:  This functionality requires the server to be built with libxml support.
 SELECT xmltable.* FROM xmltest2, LATERAL xmltable('/d/r' PASSING x COLUMNS a int PATH '' || lower(_path) || 'c');
+INFO:  Path param info: 0.000000
  a 
 ---
 (0 rows)
 
 SELECT xmltable.* FROM xmltest2, LATERAL xmltable(('/d/r/' || lower(_path) || 'c') PASSING x COLUMNS a int PATH '.');
+INFO:  Path param info: 0.000000
  a 
 ---
 (0 rows)
 
 SELECT xmltable.* FROM xmltest2, LATERAL xmltable(('/d/r/' || lower(_path) || 'c') PASSING x COLUMNS a int PATH 'x' DEFAULT ascii(_path) - 54);
+INFO:  Path param info: 0.000000
  a 
 ---
 (0 rows)
diff -U3 /home/dbs/pg-queryplans/postgres/src/test/regress/expected/partition_join.out /home/dbs/pg-queryplans/postgres/src/test/regress/results/partition_join.out
--- /home/dbs/pg-queryplans/postgres/src/test/regress/expected/partition_join.out	2024-02-20 13:16:25.967611274 +0900
+++ /home/dbs/pg-queryplans/postgres/src/test/regress/results/partition_join.out	2024-02-20 16:07:35.515971665 +0900
@@ -28,6 +28,8 @@
 -- inner join
 EXPLAIN (COSTS OFF)
 SELECT t1.a, t1.c, t2.b, t2.c FROM prt1 t1, prt2 t2 WHERE t1.a = t2.b AND t1.b = 0 ORDER BY t1.a, t2.b;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                     QUERY PLAN                    
 --------------------------------------------------
  Sort
@@ -54,6 +56,8 @@
 (21 rows)
 
 SELECT t1.a, t1.c, t2.b, t2.c FROM prt1 t1, prt2 t2 WHERE t1.a = t2.b AND t1.b = 0 ORDER BY t1.a, t2.b;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
   a  |  c   |  b  |  c   
 -----+------+-----+------
    0 | 0000 |   0 | 0000
@@ -67,6 +71,11 @@
 SELECT COUNT(*) FROM prt1 t1
   LEFT JOIN prt1 t2 ON t1.a = t2.a
   LEFT JOIN prt1 t3 ON t2.a = t3.a;
+INFO:  Path param info: 250.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                        QUERY PLAN                       
 --------------------------------------------------------
  Aggregate
@@ -103,6 +112,11 @@
 SELECT COUNT(*) FROM prt1 t1
   LEFT JOIN prt1 t2 ON t1.a = t2.a
   LEFT JOIN prt1 t3 ON t2.a = t3.a;
+INFO:  Path param info: 250.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  count 
 -------
    300
@@ -111,6 +125,8 @@
 -- left outer join, with whole-row reference; partitionwise join does not apply
 EXPLAIN (COSTS OFF)
 SELECT t1, t2 FROM prt1 t1 LEFT JOIN prt2 t2 ON t1.a = t2.b WHERE t1.b = 0 ORDER BY t1.a, t2.b;
+INFO:  Path param info: 166.000000
+INFO:  Path param info: 0.000000
                     QUERY PLAN                    
 --------------------------------------------------
  Sort
@@ -132,6 +148,8 @@
 (16 rows)
 
 SELECT t1, t2 FROM prt1 t1 LEFT JOIN prt2 t2 ON t1.a = t2.b WHERE t1.b = 0 ORDER BY t1.a, t2.b;
+INFO:  Path param info: 166.000000
+INFO:  Path param info: 0.000000
       t1      |      t2      
 --------------+--------------
  (0,0,0000)   | (0,0,0000)
@@ -151,6 +169,7 @@
 -- right outer join
 EXPLAIN (COSTS OFF)
 SELECT t1.a, t1.c, t2.b, t2.c FROM prt1 t1 RIGHT JOIN prt2 t2 ON t1.a = t2.b WHERE t2.a = 0 ORDER BY t1.a, t2.b;
+INFO:  Path param info: 6.000000
                           QUERY PLAN                           
 ---------------------------------------------------------------
  Sort
@@ -176,6 +195,7 @@
 (20 rows)
 
 SELECT t1.a, t1.c, t2.b, t2.c FROM prt1 t1 RIGHT JOIN prt2 t2 ON t1.a = t2.b WHERE t2.a = 0 ORDER BY t1.a, t2.b;
+INFO:  Path param info: 6.000000
   a  |  c   |  b  |  c   
 -----+------+-----+------
    0 | 0000 |   0 | 0000
@@ -191,6 +211,7 @@
 -- full outer join, with placeholder vars
 EXPLAIN (COSTS OFF)
 SELECT t1.a, t1.c, t2.b, t2.c FROM (SELECT 50 phv, * FROM prt1 WHERE prt1.b = 0) t1 FULL JOIN (SELECT 75 phv, * FROM prt2 WHERE prt2.a = 0) t2 ON (t1.a = t2.b) WHERE t1.phv = t1.a OR t2.phv = t2.b ORDER BY t1.a, t2.b;
+INFO:  Path param info: 0.000000
                            QUERY PLAN                           
 ----------------------------------------------------------------
  Sort
@@ -223,6 +244,7 @@
 (27 rows)
 
 SELECT t1.a, t1.c, t2.b, t2.c FROM (SELECT 50 phv, * FROM prt1 WHERE prt1.b = 0) t1 FULL JOIN (SELECT 75 phv, * FROM prt2 WHERE prt2.a = 0) t2 ON (t1.a = t2.b) WHERE t1.phv = t1.a OR t2.phv = t2.b ORDER BY t1.a, t2.b;
+INFO:  Path param info: 0.000000
  a  |  c   | b  |  c   
 ----+------+----+------
  50 | 0050 |    | 
@@ -232,6 +254,8 @@
 -- Join with pruned partitions from joining relations
 EXPLAIN (COSTS OFF)
 SELECT t1.a, t1.c, t2.b, t2.c FROM prt1 t1, prt2 t2 WHERE t1.a = t2.b AND t1.a < 450 AND t2.b > 250 AND t1.b = 0 ORDER BY t1.a, t2.b;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                      QUERY PLAN                      
 -----------------------------------------------------
  Sort
@@ -246,6 +270,8 @@
 (9 rows)
 
 SELECT t1.a, t1.c, t2.b, t2.c FROM prt1 t1, prt2 t2 WHERE t1.a = t2.b AND t1.a < 450 AND t2.b > 250 AND t1.b = 0 ORDER BY t1.a, t2.b;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
   a  |  c   |  b  |  c   
 -----+------+-----+------
  300 | 0300 | 300 | 0300
@@ -254,6 +280,8 @@
 -- Currently we can't do partitioned join if nullable-side partitions are pruned
 EXPLAIN (COSTS OFF)
 SELECT t1.a, t1.c, t2.b, t2.c FROM (SELECT * FROM prt1 WHERE a < 450) t1 LEFT JOIN (SELECT * FROM prt2 WHERE b > 250) t2 ON t1.a = t2.b WHERE t1.b = 0 ORDER BY t1.a, t2.b;
+INFO:  Path param info: 96.000000
+INFO:  Path param info: 0.000000
                         QUERY PLAN                         
 -----------------------------------------------------------
  Sort
@@ -274,6 +302,8 @@
 (15 rows)
 
 SELECT t1.a, t1.c, t2.b, t2.c FROM (SELECT * FROM prt1 WHERE a < 450) t1 LEFT JOIN (SELECT * FROM prt2 WHERE b > 250) t2 ON t1.a = t2.b WHERE t1.b = 0 ORDER BY t1.a, t2.b;
+INFO:  Path param info: 96.000000
+INFO:  Path param info: 0.000000
   a  |  c   |  b  |  c   
 -----+------+-----+------
    0 | 0000 |     | 
@@ -290,6 +320,7 @@
 -- Currently we can't do partitioned join if nullable-side partitions are pruned
 EXPLAIN (COSTS OFF)
 SELECT t1.a, t1.c, t2.b, t2.c FROM (SELECT * FROM prt1 WHERE a < 450) t1 FULL JOIN (SELECT * FROM prt2 WHERE b > 250) t2 ON t1.a = t2.b WHERE t1.b = 0 OR t2.a = 0 ORDER BY t1.a, t2.b;
+INFO:  Path param info: 0.000000
                      QUERY PLAN                     
 ----------------------------------------------------
  Sort
@@ -311,6 +342,7 @@
 (16 rows)
 
 SELECT t1.a, t1.c, t2.b, t2.c FROM (SELECT * FROM prt1 WHERE a < 450) t1 FULL JOIN (SELECT * FROM prt2 WHERE b > 250) t2 ON t1.a = t2.b WHERE t1.b = 0 OR t2.a = 0 ORDER BY t1.a, t2.b;
+INFO:  Path param info: 0.000000
   a  |  c   |  b  |  c   
 -----+------+-----+------
    0 | 0000 |     | 
@@ -330,6 +362,8 @@
 -- Semi-join
 EXPLAIN (COSTS OFF)
 SELECT t1.* FROM prt1 t1 WHERE t1.a IN (SELECT t2.b FROM prt2 t2 WHERE t2.a = 0) AND t1.b = 0 ORDER BY t1.a;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                     QUERY PLAN                    
 --------------------------------------------------
  Sort
@@ -359,6 +393,8 @@
 (24 rows)
 
 SELECT t1.* FROM prt1 t1 WHERE t1.a IN (SELECT t2.b FROM prt2 t2 WHERE t2.a = 0) AND t1.b = 0 ORDER BY t1.a;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
   a  | b |  c   
 -----+---+------
    0 | 0 | 0000
@@ -370,6 +406,7 @@
 -- Anti-join with aggregates
 EXPLAIN (COSTS OFF)
 SELECT sum(t1.a), avg(t1.a), sum(t1.b), avg(t1.b) FROM prt1 t1 WHERE NOT EXISTS (SELECT 1 FROM prt2 t2 WHERE t1.a = t2.b);
+INFO:  Path param info: 166.000000
                     QUERY PLAN                    
 --------------------------------------------------
  Aggregate
@@ -392,6 +429,7 @@
 (17 rows)
 
 SELECT sum(t1.a), avg(t1.a), sum(t1.b), avg(t1.b) FROM prt1 t1 WHERE NOT EXISTS (SELECT 1 FROM prt2 t2 WHERE t1.a = t2.b);
+INFO:  Path param info: 166.000000
   sum  |         avg          | sum  |         avg         
 -------+----------------------+------+---------------------
  60000 | 300.0000000000000000 | 2400 | 12.0000000000000000
@@ -402,6 +440,9 @@
 SELECT * FROM prt1 t1 LEFT JOIN LATERAL
 			  (SELECT t2.a AS t2a, t3.a AS t3a, least(t1.a,t2.a,t3.b) FROM prt1 t2 JOIN prt2 t3 ON (t2.a = t3.b)) ss
 			  ON t1.a = ss.t2a WHERE t1.b = 0 ORDER BY t1.a;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                 QUERY PLAN                                
 --------------------------------------------------------------------------
  Sort
@@ -436,6 +477,9 @@
 SELECT * FROM prt1 t1 LEFT JOIN LATERAL
 			  (SELECT t2.a AS t2a, t3.a AS t3a, least(t1.a,t2.a,t3.b) FROM prt1 t2 JOIN prt2 t3 ON (t2.a = t3.b)) ss
 			  ON t1.a = ss.t2a WHERE t1.b = 0 ORDER BY t1.a;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
   a  | b |  c   | t2a | t3a | least 
 -----+---+------+-----+-----+-------
    0 | 0 | 0000 |   0 |   0 |     0
@@ -456,6 +500,9 @@
 SELECT t1.a, ss.t2a, ss.t2c FROM prt1 t1 LEFT JOIN LATERAL
 			  (SELECT t2.a AS t2a, t3.a AS t3a, t2.b t2b, t2.c t2c, least(t1.a,t2.a,t3.b) FROM prt1 t2 JOIN prt2 t3 ON (t2.a = t3.b)) ss
 			  ON t1.c = ss.t2c WHERE (t1.b + coalesce(ss.t2b, 0)) = 0 ORDER BY t1.a;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                           QUERY PLAN                          
 --------------------------------------------------------------
  Sort
@@ -489,6 +536,9 @@
 SELECT t1.a, ss.t2a, ss.t2c FROM prt1 t1 LEFT JOIN LATERAL
 			  (SELECT t2.a AS t2a, t3.a AS t3a, t2.b t2b, t2.c t2c, least(t1.a,t2.a,t3.a) FROM prt1 t2 JOIN prt2 t3 ON (t2.a = t3.b)) ss
 			  ON t1.c = ss.t2c WHERE (t1.b + coalesce(ss.t2b, 0)) = 0 ORDER BY t1.a;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
   a  | t2a | t2c  
 -----+-----+------
    0 |   0 | 0000
@@ -512,6 +562,7 @@
 SELECT * FROM prt1 t1 JOIN LATERAL
 			  (SELECT * FROM prt1 t2 TABLESAMPLE SYSTEM (t1.a) REPEATABLE(t1.b)) s
 			  ON t1.a = s.a;
+INFO:  Path param info: 0.000000
                        QUERY PLAN                        
 ---------------------------------------------------------
  Nested Loop
@@ -537,6 +588,7 @@
 SELECT count(*) FROM prt1 t1 LEFT JOIN LATERAL
 			  (SELECT t1.b AS t1b, t2.* FROM prt2 t2) s
 			  ON t1.a = s.b WHERE s.t1b = s.a;
+INFO:  Path param info: 0.000000
                           QUERY PLAN                           
 ---------------------------------------------------------------
  Aggregate
@@ -560,6 +612,7 @@
 SELECT count(*) FROM prt1 t1 LEFT JOIN LATERAL
 			  (SELECT t1.b AS t1b, t2.* FROM prt2 t2) s
 			  ON t1.a = s.b WHERE s.t1b = s.a;
+INFO:  Path param info: 0.000000
  count 
 -------
    100
@@ -569,6 +622,7 @@
 SELECT count(*) FROM prt1 t1 LEFT JOIN LATERAL
 			  (SELECT t1.b AS t1b, t2.* FROM prt2 t2) s
 			  ON t1.a = s.b WHERE s.t1b = s.b;
+INFO:  Path param info: 0.000000
                              QUERY PLAN                             
 --------------------------------------------------------------------
  Aggregate
@@ -592,6 +646,7 @@
 SELECT count(*) FROM prt1 t1 LEFT JOIN LATERAL
 			  (SELECT t1.b AS t1b, t2.* FROM prt2 t2) s
 			  ON t1.a = s.b WHERE s.t1b = s.b;
+INFO:  Path param info: 0.000000
  count 
 -------
      5
@@ -605,6 +660,7 @@
 SELECT a, b FROM prt1 FULL JOIN prt2 p2(b,a,c) USING(a,b)
   WHERE a BETWEEN 490 AND 510
   GROUP BY 1, 2 ORDER BY 1, 2;
+INFO:  Path param info: 0.000000
                                                    QUERY PLAN                                                    
 -----------------------------------------------------------------------------------------------------------------
  Group
@@ -655,6 +711,7 @@
 SELECT a, b FROM prt1 FULL JOIN prt2 p2(b,a,c) USING(a,b)
   WHERE a BETWEEN 490 AND 510
   GROUP BY 1, 2 ORDER BY 1, 2;
+INFO:  Path param info: 0.000000
   a  | b  
 -----+----
  490 | 15
@@ -695,6 +752,8 @@
 ANALYZE prt2_e;
 EXPLAIN (COSTS OFF)
 SELECT t1.a, t1.c, t2.b, t2.c FROM prt1_e t1, prt2_e t2 WHERE (t1.a + t1.b)/2 = (t2.b + t2.a)/2 AND t1.c = 0 ORDER BY t1.a, t2.b;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                   QUERY PLAN                                  
 ------------------------------------------------------------------------------
  Sort
@@ -721,6 +780,8 @@
 (21 rows)
 
 SELECT t1.a, t1.c, t2.b, t2.c FROM prt1_e t1, prt2_e t2 WHERE (t1.a + t1.b)/2 = (t2.b + t2.a)/2 AND t1.c = 0 ORDER BY t1.a, t2.b;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
   a  | c |  b  | c 
 -----+---+-----+---
    0 | 0 |   0 | 0
@@ -734,6 +795,14 @@
 --
 EXPLAIN (COSTS OFF)
 SELECT t1.a, t1.c, t2.b, t2.c, t3.a + t3.b, t3.c FROM prt1 t1, prt2 t2, prt1_e t3 WHERE t1.a = t2.b AND t1.a = (t3.a + t3.b)/2 AND t1.b = 0 ORDER BY t1.a, t2.b;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                              QUERY PLAN                              
 ---------------------------------------------------------------------
  Sort
@@ -772,6 +841,14 @@
 (33 rows)
 
 SELECT t1.a, t1.c, t2.b, t2.c, t3.a + t3.b, t3.c FROM prt1 t1, prt2 t2, prt1_e t3 WHERE t1.a = t2.b AND t1.a = (t3.a + t3.b)/2 AND t1.b = 0 ORDER BY t1.a, t2.b;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
   a  |  c   |  b  |  c   | ?column? | c 
 -----+------+-----+------+----------+---
    0 | 0000 |   0 | 0000 |        0 | 0
@@ -782,6 +859,13 @@
 
 EXPLAIN (COSTS OFF)
 SELECT t1.a, t1.c, t2.b, t2.c, t3.a + t3.b, t3.c FROM (prt1 t1 LEFT JOIN prt2 t2 ON t1.a = t2.b) LEFT JOIN prt1_e t3 ON (t1.a = (t3.a + t3.b)/2) WHERE t1.b = 0 ORDER BY t1.a, t2.b, t3.a + t3.b;
+INFO:  Path param info: 250.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                           QUERY PLAN                          
 --------------------------------------------------------------
  Sort
@@ -820,6 +904,13 @@
 (33 rows)
 
 SELECT t1.a, t1.c, t2.b, t2.c, t3.a + t3.b, t3.c FROM (prt1 t1 LEFT JOIN prt2 t2 ON t1.a = t2.b) LEFT JOIN prt1_e t3 ON (t1.a = (t3.a + t3.b)/2) WHERE t1.b = 0 ORDER BY t1.a, t2.b, t3.a + t3.b;
+INFO:  Path param info: 250.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
   a  |  c   |  b  |  c   | ?column? | c 
 -----+------+-----+------+----------+---
    0 | 0000 |   0 | 0000 |        0 | 0
@@ -838,6 +929,12 @@
 
 EXPLAIN (COSTS OFF)
 SELECT t1.a, t1.c, t2.b, t2.c, t3.a + t3.b, t3.c FROM (prt1 t1 LEFT JOIN prt2 t2 ON t1.a = t2.b) RIGHT JOIN prt1_e t3 ON (t1.a = (t3.a + t3.b)/2) WHERE t3.c = 0 ORDER BY t1.a, t2.b, t3.a + t3.b;
+INFO:  Path param info: 10.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                             QUERY PLAN                             
 -------------------------------------------------------------------
  Sort
@@ -873,6 +970,12 @@
 (30 rows)
 
 SELECT t1.a, t1.c, t2.b, t2.c, t3.a + t3.b, t3.c FROM (prt1 t1 LEFT JOIN prt2 t2 ON t1.a = t2.b) RIGHT JOIN prt1_e t3 ON (t1.a = (t3.a + t3.b)/2) WHERE t3.c = 0 ORDER BY t1.a, t2.b, t3.a + t3.b;
+INFO:  Path param info: 10.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
   a  |  c   |  b  |  c   | ?column? | c 
 -----+------+-----+------+----------+---
    0 | 0000 |   0 | 0000 |        0 | 0
@@ -895,6 +998,8 @@
 EXPLAIN (COSTS OFF)
 SELECT COUNT(*) FROM prt1 FULL JOIN prt2 p2(b,a,c) USING(a,b) FULL JOIN prt2 p3(b,a,c) USING (a, b)
   WHERE a BETWEEN 490 AND 510;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                                                QUERY PLAN                                                                
 -----------------------------------------------------------------------------------------------------------------------------------------
  Aggregate
@@ -933,6 +1038,8 @@
 
 SELECT COUNT(*) FROM prt1 FULL JOIN prt2 p2(b,a,c) USING(a,b) FULL JOIN prt2 p3(b,a,c) USING (a, b)
   WHERE a BETWEEN 490 AND 510;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  count 
 -------
     14
@@ -944,6 +1051,9 @@
 EXPLAIN (COSTS OFF)
 SELECT COUNT(*) FROM prt1 FULL JOIN prt2 p2(b,a,c) USING(a,b) FULL JOIN prt2 p3(b,a,c) USING (a, b) FULL JOIN prt1 p4 (a,b,c) USING (a, b)
   WHERE a BETWEEN 490 AND 510;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                                                                  QUERY PLAN                                                                                  
 -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  Aggregate
@@ -994,6 +1104,9 @@
 
 SELECT COUNT(*) FROM prt1 FULL JOIN prt2 p2(b,a,c) USING(a,b) FULL JOIN prt2 p3(b,a,c) USING (a, b) FULL JOIN prt1 p4 (a,b,c) USING (a, b)
   WHERE a BETWEEN 490 AND 510;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  count 
 -------
     14
@@ -1003,6 +1116,8 @@
 -- make sure these go to null as expected
 EXPLAIN (COSTS OFF)
 SELECT t1.a, t1.phv, t2.b, t2.phv, t3.a + t3.b, t3.phv FROM ((SELECT 50 phv, * FROM prt1 WHERE prt1.b = 0) t1 FULL JOIN (SELECT 75 phv, * FROM prt2 WHERE prt2.a = 0) t2 ON (t1.a = t2.b)) FULL JOIN (SELECT 50 phv, * FROM prt1_e WHERE prt1_e.c = 0) t3 ON (t1.a = (t3.a + t3.b)/2) WHERE t1.a = t1.phv OR t2.b = t2.phv OR (t3.a + t3.b)/2 = t3.phv ORDER BY t1.a, t2.b, t3.a + t3.b;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                                  QUERY PLAN                                                 
 ------------------------------------------------------------------------------------------------------------
  Sort
@@ -1050,6 +1165,8 @@
 (42 rows)
 
 SELECT t1.a, t1.phv, t2.b, t2.phv, t3.a + t3.b, t3.phv FROM ((SELECT 50 phv, * FROM prt1 WHERE prt1.b = 0) t1 FULL JOIN (SELECT 75 phv, * FROM prt2 WHERE prt2.a = 0) t2 ON (t1.a = t2.b)) FULL JOIN (SELECT 50 phv, * FROM prt1_e WHERE prt1_e.c = 0) t3 ON (t1.a = (t3.a + t3.b)/2) WHERE t1.a = t1.phv OR t2.b = t2.phv OR (t3.a + t3.b)/2 = t3.phv ORDER BY t1.a, t2.b, t3.a + t3.b;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  a  | phv | b  | phv | ?column? | phv 
 ----+-----+----+-----+----------+-----
  50 |  50 |    |     |      100 |  50
@@ -1059,6 +1176,11 @@
 -- Semi-join
 EXPLAIN (COSTS OFF)
 SELECT t1.* FROM prt1 t1 WHERE t1.a IN (SELECT t1.b FROM prt2 t1, prt1_e t2 WHERE t1.a = 0 AND t1.b = (t2.a + t2.b)/2) AND t1.b = 0 ORDER BY t1.a;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                    QUERY PLAN                                    
 ---------------------------------------------------------------------------------
  Sort
@@ -1105,6 +1227,11 @@
 (41 rows)
 
 SELECT t1.* FROM prt1 t1 WHERE t1.a IN (SELECT t1.b FROM prt2 t1, prt1_e t2 WHERE t1.a = 0 AND t1.b = (t2.a + t2.b)/2) AND t1.b = 0 ORDER BY t1.a;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
   a  | b |  c   
 -----+---+------
    0 | 0 | 0000
@@ -1115,6 +1242,11 @@
 
 EXPLAIN (COSTS OFF)
 SELECT t1.* FROM prt1 t1 WHERE t1.a IN (SELECT t1.b FROM prt2 t1 WHERE t1.b IN (SELECT (t1.a + t1.b)/2 FROM prt1_e t1 WHERE t1.c = 0)) AND t1.b = 0 ORDER BY t1.a;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                 QUERY PLAN                                 
 ---------------------------------------------------------------------------
  Sort
@@ -1159,6 +1291,11 @@
 (39 rows)
 
 SELECT t1.* FROM prt1 t1 WHERE t1.a IN (SELECT t1.b FROM prt2 t1 WHERE t1.b IN (SELECT (t1.a + t1.b)/2 FROM prt1_e t1 WHERE t1.c = 0)) AND t1.b = 0 ORDER BY t1.a;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
   a  | b |  c   
 -----+---+------
    0 | 0 | 0000
@@ -1172,6 +1309,9 @@
 SET enable_nestloop TO off;
 EXPLAIN (COSTS OFF)
 SELECT t1.* FROM prt1 t1 WHERE t1.a IN (SELECT t1.b FROM prt2 t1 WHERE t1.b IN (SELECT (t1.a + t1.b)/2 FROM prt1_e t1 WHERE t1.c = 0)) AND t1.b = 0 ORDER BY t1.a;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                             QUERY PLAN                            
 ------------------------------------------------------------------
  Merge Append
@@ -1224,6 +1364,9 @@
 (47 rows)
 
 SELECT t1.* FROM prt1 t1 WHERE t1.a IN (SELECT t1.b FROM prt2 t1 WHERE t1.b IN (SELECT (t1.a + t1.b)/2 FROM prt1_e t1 WHERE t1.c = 0)) AND t1.b = 0 ORDER BY t1.a;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
   a  | b |  c   
 -----+---+------
    0 | 0 | 0000
@@ -1234,6 +1377,10 @@
 
 EXPLAIN (COSTS OFF)
 SELECT t1.a, t1.c, t2.b, t2.c, t3.a + t3.b, t3.c FROM (prt1 t1 LEFT JOIN prt2 t2 ON t1.a = t2.b) RIGHT JOIN prt1_e t3 ON (t1.a = (t3.a + t3.b)/2) WHERE t3.c = 0 ORDER BY t1.a, t2.b, t3.a + t3.b;
+INFO:  Path param info: 10.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                  QUERY PLAN                                 
 ----------------------------------------------------------------------------
  Sort
@@ -1290,6 +1437,10 @@
 (51 rows)
 
 SELECT t1.a, t1.c, t2.b, t2.c, t3.a + t3.b, t3.c FROM (prt1 t1 LEFT JOIN prt2 t2 ON t1.a = t2.b) RIGHT JOIN prt1_e t3 ON (t1.a = (t3.a + t3.b)/2) WHERE t3.c = 0 ORDER BY t1.a, t2.b, t3.a + t3.b;
+INFO:  Path param info: 10.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
   a  |  c   |  b  |  c   | ?column? | c 
 -----+------+-----+------+----------+---
    0 | 0000 |   0 | 0000 |        0 | 0
@@ -1310,6 +1461,7 @@
 -- This should generate a partitionwise join, but currently fails to
 EXPLAIN (COSTS OFF)
 SELECT t1.a, t2.b FROM (SELECT * FROM prt1 WHERE a < 450) t1 LEFT JOIN (SELECT * FROM prt2 WHERE b > 250) t2 ON t1.a = t2.b WHERE t1.b = 0 ORDER BY t1.a, t2.b;
+INFO:  Path param info: 96.000000
                         QUERY PLAN                         
 -----------------------------------------------------------
  Incremental Sort
@@ -1334,6 +1486,7 @@
 (19 rows)
 
 SELECT t1.a, t2.b FROM (SELECT * FROM prt1 WHERE a < 450) t1 LEFT JOIN (SELECT * FROM prt2 WHERE b > 250) t2 ON t1.a = t2.b WHERE t1.b = 0 ORDER BY t1.a, t2.b;
+INFO:  Path param info: 96.000000
   a  |  b  
 -----+-----
    0 |    
@@ -1351,6 +1504,7 @@
 -- partitionwise join does not apply
 EXPLAIN (COSTS OFF)
 SELECT t1.a, t2.b FROM prt1 t1, prt2 t2 WHERE t1::text = t2::text AND t1.a = t2.b ORDER BY t1.a;
+INFO:  Path param info: 0.000000
                                        QUERY PLAN                                        
 -----------------------------------------------------------------------------------------
  Merge Join
@@ -1372,6 +1526,7 @@
 (16 rows)
 
 SELECT t1.a, t2.b FROM prt1 t1, prt2 t2 WHERE t1::text = t2::text AND t1.a = t2.b ORDER BY t1.a;
+INFO:  Path param info: 0.000000
  a  | b  
 ----+----
   0 |  0
@@ -1400,6 +1555,7 @@
 ANALYZE prt2_m;
 EXPLAIN (COSTS OFF)
 SELECT t1.a, t1.c, t2.b, t2.c FROM (SELECT * FROM prt1_m WHERE prt1_m.c = 0) t1 FULL JOIN (SELECT * FROM prt2_m WHERE prt2_m.c = 0) t2 ON (t1.a = (t2.b + t2.a)/2 AND t2.b = (t1.a + t1.b)/2) ORDER BY t1.a, t2.b;
+INFO:  Path param info: 0.000000
                                                           QUERY PLAN                                                          
 ------------------------------------------------------------------------------------------------------------------------------
  Sort
@@ -1429,6 +1585,7 @@
 (24 rows)
 
 SELECT t1.a, t1.c, t2.b, t2.c FROM (SELECT * FROM prt1_m WHERE prt1_m.c = 0) t1 FULL JOIN (SELECT * FROM prt2_m WHERE prt2_m.c = 0) t2 ON (t1.a = (t2.b + t2.a)/2 AND t2.b = (t1.a + t1.b)/2) ORDER BY t1.a, t2.b;
+INFO:  Path param info: 0.000000
   a  | c |  b  | c 
 -----+---+-----+---
    0 | 0 |   0 | 0
@@ -1476,6 +1633,17 @@
 -- test partition matching with N-way join
 EXPLAIN (COSTS OFF)
 SELECT avg(t1.a), avg(t2.b), avg(t3.a + t3.b), t1.c, t2.c, t3.c FROM plt1 t1, plt2 t2, plt1_e t3 WHERE t1.b = t2.b AND t1.c = t2.c AND ltrim(t3.c, 'A') = t1.c GROUP BY t1.c, t2.c, t3.c ORDER BY t1.c, t2.c, t3.c;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                    QUERY PLAN                                   
 --------------------------------------------------------------------------------
  GroupAggregate
@@ -1513,6 +1681,17 @@
 (32 rows)
 
 SELECT avg(t1.a), avg(t2.b), avg(t3.a + t3.b), t1.c, t2.c, t3.c FROM plt1 t1, plt2 t2, plt1_e t3 WHERE t1.b = t2.b AND t1.c = t2.c AND ltrim(t3.c, 'A') = t1.c GROUP BY t1.c, t2.c, t3.c ORDER BY t1.c, t2.c, t3.c;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
          avg          |         avg          |          avg          |  c   |  c   |   c   
 ----------------------+----------------------+-----------------------+------+------+-------
   24.0000000000000000 |  24.0000000000000000 |   48.0000000000000000 | 0000 | 0000 | A0000
@@ -1532,6 +1711,7 @@
 -- joins where one of the relations is proven empty
 EXPLAIN (COSTS OFF)
 SELECT t1.a, t1.c, t2.b, t2.c FROM prt1 t1, prt2 t2 WHERE t1.a = t2.b AND t1.a = 1 AND t1.a = 2;
+INFO:  Path param info: 0.000000
         QUERY PLAN        
 --------------------------
  Result
@@ -1540,6 +1720,7 @@
 
 EXPLAIN (COSTS OFF)
 SELECT t1.a, t1.c, t2.b, t2.c FROM (SELECT * FROM prt1 WHERE a = 1 AND a = 2) t1 LEFT JOIN prt2 t2 ON t1.a = t2.b;
+INFO:  Path param info: 1.000000
         QUERY PLAN        
 --------------------------
  Result
@@ -1548,6 +1729,11 @@
 
 EXPLAIN (COSTS OFF)
 SELECT t1.a, t1.c, t2.b, t2.c FROM (SELECT * FROM prt1 WHERE a = 1 AND a = 2) t1 RIGHT JOIN prt2 t2 ON t1.a = t2.b, prt1 t3 WHERE t2.b = t3.a;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                     QUERY PLAN                    
 --------------------------------------------------
  Hash Left Join
@@ -1575,6 +1761,7 @@
 
 EXPLAIN (COSTS OFF)
 SELECT t1.a, t1.c, t2.b, t2.c FROM (SELECT * FROM prt1 WHERE a = 1 AND a = 2) t1 FULL JOIN prt2 t2 ON t1.a = t2.b WHERE t2.a = 0 ORDER BY t1.a, t2.b;
+INFO:  Path param info: 6.000000
                  QUERY PLAN                 
 --------------------------------------------
  Sort
@@ -1620,6 +1807,17 @@
 -- test partition matching with N-way join
 EXPLAIN (COSTS OFF)
 SELECT avg(t1.a), avg(t2.b), avg(t3.a + t3.b), t1.c, t2.c, t3.c FROM pht1 t1, pht2 t2, pht1_e t3 WHERE t1.b = t2.b AND t1.c = t2.c AND ltrim(t3.c, 'A') = t1.c GROUP BY t1.c, t2.c, t3.c ORDER BY t1.c, t2.c, t3.c;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                    QUERY PLAN                                   
 --------------------------------------------------------------------------------
  GroupAggregate
@@ -1657,6 +1855,17 @@
 (32 rows)
 
 SELECT avg(t1.a), avg(t2.b), avg(t3.a + t3.b), t1.c, t2.c, t3.c FROM pht1 t1, pht2 t2, pht1_e t3 WHERE t1.b = t2.b AND t1.c = t2.c AND ltrim(t3.c, 'A') = t1.c GROUP BY t1.c, t2.c, t3.c ORDER BY t1.c, t2.c, t3.c;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
          avg          |         avg          |         avg          |  c   |  c   |   c   
 ----------------------+----------------------+----------------------+------+------+-------
   24.0000000000000000 |  24.0000000000000000 |  48.0000000000000000 | 0000 | 0000 | A0000
@@ -1676,6 +1885,8 @@
 ANALYZE prt2;
 EXPLAIN (COSTS OFF)
 SELECT t1.a, t1.c, t2.b, t2.c FROM prt1 t1, prt2 t2 WHERE t1.a = t2.b AND t1.b = 0 ORDER BY t1.a, t2.b;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                     QUERY PLAN                    
 --------------------------------------------------
  Sort
@@ -1710,6 +1921,8 @@
 ANALYZE plt2;
 EXPLAIN (COSTS OFF)
 SELECT avg(t1.a), avg(t2.b), t1.c, t2.c FROM plt1 t1 RIGHT JOIN plt2 t2 ON t1.c = t2.c WHERE t1.a % 25 = 0 GROUP BY t1.c, t2.c ORDER BY t1.c, t2.c;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                        QUERY PLAN                       
 --------------------------------------------------------
  Sort
@@ -1763,6 +1976,8 @@
 -- inner join, qual covering only top-level partitions
 EXPLAIN (COSTS OFF)
 SELECT t1.a, t1.c, t2.b, t2.c FROM prt1_l t1, prt2_l t2 WHERE t1.a = t2.b AND t1.b = 0 ORDER BY t1.a, t2.b;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                          QUERY PLAN                          
 -------------------------------------------------------------
  Sort
@@ -1796,6 +2011,8 @@
 (28 rows)
 
 SELECT t1.a, t1.c, t2.b, t2.c FROM prt1_l t1, prt2_l t2 WHERE t1.a = t2.b AND t1.b = 0 ORDER BY t1.a, t2.b;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
   a  |  c   |  b  |  c   
 -----+------+-----+------
    0 | 0000 |   0 | 0000
@@ -1807,6 +2024,8 @@
 -- left join
 EXPLAIN (COSTS OFF)
 SELECT t1.a, t1.c, t2.b, t2.c FROM prt1_l t1 LEFT JOIN prt2_l t2 ON t1.a = t2.b AND t1.c = t2.c WHERE t1.b = 0 ORDER BY t1.a, t2.b;
+INFO:  Path param info: 166.000000
+INFO:  Path param info: 0.000000
                                      QUERY PLAN                                     
 ------------------------------------------------------------------------------------
  Sort
@@ -1841,6 +2060,8 @@
 (29 rows)
 
 SELECT t1.a, t1.c, t2.b, t2.c FROM prt1_l t1 LEFT JOIN prt2_l t2 ON t1.a = t2.b AND t1.c = t2.c WHERE t1.b = 0 ORDER BY t1.a, t2.b;
+INFO:  Path param info: 166.000000
+INFO:  Path param info: 0.000000
   a  |  c   |  b  |  c   
 -----+------+-----+------
    0 | 0000 |   0 | 0000
@@ -1860,6 +2081,7 @@
 -- right join
 EXPLAIN (COSTS OFF)
 SELECT t1.a, t1.c, t2.b, t2.c FROM prt1_l t1 RIGHT JOIN prt2_l t2 ON t1.a = t2.b AND t1.c = t2.c WHERE t2.a = 0 ORDER BY t1.a, t2.b;
+INFO:  Path param info: 8.000000
                                      QUERY PLAN                                     
 ------------------------------------------------------------------------------------
  Sort
@@ -1894,6 +2116,7 @@
 (29 rows)
 
 SELECT t1.a, t1.c, t2.b, t2.c FROM prt1_l t1 RIGHT JOIN prt2_l t2 ON t1.a = t2.b AND t1.c = t2.c WHERE t2.a = 0 ORDER BY t1.a, t2.b;
+INFO:  Path param info: 8.000000
   a  |  c   |  b  |  c   
 -----+------+-----+------
    0 | 0000 |   0 | 0000
@@ -1909,6 +2132,7 @@
 -- full join
 EXPLAIN (COSTS OFF)
 SELECT t1.a, t1.c, t2.b, t2.c FROM (SELECT * FROM prt1_l WHERE prt1_l.b = 0) t1 FULL JOIN (SELECT * FROM prt2_l WHERE prt2_l.a = 0) t2 ON (t1.a = t2.b AND t1.c = t2.c) ORDER BY t1.a, t2.b;
+INFO:  Path param info: 0.000000
                                              QUERY PLAN                                             
 ----------------------------------------------------------------------------------------------------
  Sort
@@ -1945,6 +2169,7 @@
 (31 rows)
 
 SELECT t1.a, t1.c, t2.b, t2.c FROM (SELECT * FROM prt1_l WHERE prt1_l.b = 0) t1 FULL JOIN (SELECT * FROM prt2_l WHERE prt2_l.a = 0) t2 ON (t1.a = t2.b AND t1.c = t2.c) ORDER BY t1.a, t2.b;
+INFO:  Path param info: 0.000000
   a  |  c   |  b  |  c   
 -----+------+-----+------
    0 | 0000 |   0 | 0000
@@ -1970,6 +2195,9 @@
 SELECT * FROM prt1_l t1 LEFT JOIN LATERAL
 			  (SELECT t2.a AS t2a, t2.c AS t2c, t2.b AS t2b, t3.b AS t3b, least(t1.a,t2.a,t3.b) FROM prt1_l t2 JOIN prt2_l t3 ON (t2.a = t3.b AND t2.c = t3.c)) ss
 			  ON t1.a = ss.t2a AND t1.c = ss.t2c WHERE t1.b = 0 ORDER BY t1.a;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                           QUERY PLAN                                           
 -----------------------------------------------------------------------------------------------
  Sort
@@ -2021,6 +2249,9 @@
 SELECT * FROM prt1_l t1 LEFT JOIN LATERAL
 			  (SELECT t2.a AS t2a, t2.c AS t2c, t2.b AS t2b, t3.b AS t3b, least(t1.a,t2.a,t3.b) FROM prt1_l t2 JOIN prt2_l t3 ON (t2.a = t3.b AND t2.c = t3.c)) ss
 			  ON t1.a = ss.t2a AND t1.c = ss.t2c WHERE t1.b = 0 ORDER BY t1.a;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
   a  | b |  c   | t2a | t2c  | t2b | t3b | least 
 -----+---+------+-----+------+-----+-----+-------
    0 | 0 | 0000 |   0 | 0000 |   0 |   0 |     0
@@ -2044,6 +2275,7 @@
 SELECT * FROM prt1_l t1 JOIN LATERAL
 			  (SELECT * FROM prt1_l t2 TABLESAMPLE SYSTEM (t1.a) REPEATABLE(t1.b)) s
 			  ON t1.a = s.a AND t1.b = s.b AND t1.c = s.c;
+INFO:  Path param info: 0.000000
                                     QUERY PLAN                                    
 ----------------------------------------------------------------------------------
  Nested Loop
@@ -2078,6 +2310,7 @@
 			  (SELECT t1.b AS t1b, t2.* FROM prt2_l t2) s
 			  ON t1.a = s.b AND t1.b = s.a AND t1.c = s.c
 			  WHERE s.t1b = s.a;
+INFO:  Path param info: 0.000000
                                               QUERY PLAN                                               
 -------------------------------------------------------------------------------------------------------
  Aggregate
@@ -2105,6 +2338,7 @@
 			  (SELECT t1.b AS t1b, t2.* FROM prt2_l t2) s
 			  ON t1.a = s.b AND t1.b = s.a AND t1.c = s.c
 			  WHERE s.t1b = s.a;
+INFO:  Path param info: 0.000000
  count 
 -------
    100
@@ -2114,6 +2348,7 @@
 -- join with one side empty
 EXPLAIN (COSTS OFF)
 SELECT t1.a, t1.c, t2.b, t2.c FROM (SELECT * FROM prt1_l WHERE a = 1 AND a = 2) t1 RIGHT JOIN prt2_l t2 ON t1.a = t2.b AND t1.b = t2.a AND t1.c = t2.c;
+INFO:  Path param info: 166.000000
                                QUERY PLAN                                
 -------------------------------------------------------------------------
  Hash Left Join
@@ -2140,6 +2375,8 @@
     FROM int4_tbl,
          LATERAL (SELECT int4_tbl.f1 FROM int8_tbl LIMIT 2) ss
     WHERE prt1_l.c IS NULL);
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                         QUERY PLAN                        
 ----------------------------------------------------------
  Delete on prt1_l
@@ -2190,6 +2427,7 @@
 -- partitionwise join can not be applied if the partition ranges differ
 EXPLAIN (COSTS OFF)
 SELECT t1.a, t1.c, t2.b, t2.c FROM prt1 t1, prt4_n t2 WHERE t1.a = t2.a;
+INFO:  Path param info: 0.000000
                   QUERY PLAN                  
 ----------------------------------------------
  Hash Join
@@ -2207,6 +2445,13 @@
 
 EXPLAIN (COSTS OFF)
 SELECT t1.a, t1.c, t2.b, t2.c FROM prt1 t1, prt4_n t2, prt2 t3 WHERE t1.a = t2.a and t1.a = t3.b;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                        QUERY PLAN                       
 --------------------------------------------------------
  Hash Join
@@ -2238,6 +2483,7 @@
 -- between partition keys
 EXPLAIN (COSTS OFF)
 SELECT t1.a, t1.c, t2.b, t2.c FROM prt1 t1 LEFT JOIN prt2 t2 ON (t1.a < t2.b);
+INFO:  Path param info: 166.000000
                        QUERY PLAN                        
 ---------------------------------------------------------
  Nested Loop Left Join
@@ -2258,6 +2504,7 @@
 -- partitionwise join
 EXPLAIN (COSTS OFF)
 SELECT t1.a, t1.c, t2.b, t2.c FROM prt1_m t1, prt2_m t2 WHERE t1.a = (t2.b + t2.a)/2;
+INFO:  Path param info: 0.000000
                   QUERY PLAN                  
 ----------------------------------------------
  Hash Join
@@ -2277,6 +2524,7 @@
 -- partitionwise join
 EXPLAIN (COSTS OFF)
 SELECT t1.a, t1.c, t2.b, t2.c FROM prt1_m t1 LEFT JOIN prt2_m t2 ON t1.a = t2.b;
+INFO:  Path param info: 166.000000
                   QUERY PLAN                  
 ----------------------------------------------
  Hash Left Join
@@ -2295,6 +2543,7 @@
 -- equi-join between non-key columns does not qualify for partitionwise join
 EXPLAIN (COSTS OFF)
 SELECT t1.a, t1.c, t2.b, t2.c FROM prt1_m t1 LEFT JOIN prt2_m t2 ON t1.c = t2.c;
+INFO:  Path param info: 166.000000
                   QUERY PLAN                  
 ----------------------------------------------
  Hash Left Join
@@ -2314,6 +2563,7 @@
 -- partitioned tables
 EXPLAIN (COSTS OFF)
 SELECT t1.a, t1.c, t2.b, t2.c FROM prt1_n t1 LEFT JOIN prt2_n t2 ON (t1.c = t2.c);
+INFO:  Path param info: 500.000000
                   QUERY PLAN                  
 ----------------------------------------------
  Hash Right Join
@@ -2331,6 +2581,13 @@
 -- partition lists
 EXPLAIN (COSTS OFF)
 SELECT t1.a, t1.c, t2.b, t2.c FROM prt1_n t1 JOIN prt2_n t2 ON (t1.c = t2.c) JOIN plt1 t3 ON (t1.c = t3.c);
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                         QUERY PLAN                        
 ----------------------------------------------------------
  Hash Join
@@ -2355,6 +2612,7 @@
 -- non-key column
 EXPLAIN (COSTS OFF)
 SELECT t1.a, t1.c, t2.b, t2.c FROM prt1_n t1 FULL JOIN prt1 t2 ON (t1.c = t2.c);
+INFO:  Path param info: 0.000000
                   QUERY PLAN                  
 ----------------------------------------------
  Hash Full Join
@@ -2387,6 +2645,7 @@
   from generate_series(1,1000) i;
 insert into prtx2 select 1 + i%30, i, i
   from generate_series(1,500) i, generate_series(1,10) j;
+INFO:  Path param info: 0.000000
 create index on prtx2 (b);
 create index on prtx2 (c);
 analyze prtx1;
@@ -2396,6 +2655,7 @@
 where not exists (select 1 from prtx2
                   where prtx2.a=prtx1.a and prtx2.b=prtx1.b and prtx2.c=123)
   and a<20 and c=120;
+INFO:  Path param info: -1.000000
                          QUERY PLAN                          
 -------------------------------------------------------------
  Append
@@ -2427,6 +2687,7 @@
 where not exists (select 1 from prtx2
                   where prtx2.a=prtx1.a and prtx2.b=prtx1.b and prtx2.c=123)
   and a<20 and c=120;
+INFO:  Path param info: -1.000000
  a |  b  |  c  
 ---+-----+-----
  1 | 120 | 120
@@ -2437,6 +2698,7 @@
 where not exists (select 1 from prtx2
                   where prtx2.a=prtx1.a and (prtx2.b=prtx1.b+1 or prtx2.c=99))
   and a<20 and c=91;
+INFO:  Path param info: -1.000000
                            QUERY PLAN                            
 -----------------------------------------------------------------
  Append
@@ -2468,6 +2730,7 @@
 where not exists (select 1 from prtx2
                   where prtx2.a=prtx1.a and (prtx2.b=prtx1.b+1 or prtx2.c=99))
   and a<20 and c=91;
+INFO:  Path param info: -1.000000
  a | b  | c  
 ---+----+----
  2 | 91 | 91
@@ -2496,6 +2759,8 @@
 -- inner join
 EXPLAIN (COSTS OFF)
 SELECT t1.a, t1.c, t2.b, t2.c FROM prt1_adv t1 INNER JOIN prt2_adv t2 ON (t1.a = t2.b) WHERE t1.b = 0 ORDER BY t1.a, t2.b;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                       QUERY PLAN                      
 ------------------------------------------------------
  Sort
@@ -2522,6 +2787,8 @@
 (21 rows)
 
 SELECT t1.a, t1.c, t2.b, t2.c FROM prt1_adv t1 INNER JOIN prt2_adv t2 ON (t1.a = t2.b) WHERE t1.b = 0 ORDER BY t1.a, t2.b;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
   a  |  c   |  b  |  c   
 -----+------+-----+------
  100 | 0100 | 100 | 0100
@@ -2537,6 +2804,8 @@
 -- semi join
 EXPLAIN (COSTS OFF)
 SELECT t1.* FROM prt1_adv t1 WHERE EXISTS (SELECT 1 FROM prt2_adv t2 WHERE t1.a = t2.b) AND t1.b = 0 ORDER BY t1.a;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                       QUERY PLAN                      
 ------------------------------------------------------
  Sort
@@ -2563,6 +2832,8 @@
 (21 rows)
 
 SELECT t1.* FROM prt1_adv t1 WHERE EXISTS (SELECT 1 FROM prt2_adv t2 WHERE t1.a = t2.b) AND t1.b = 0 ORDER BY t1.a;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
   a  | b |  c   
 -----+---+------
  100 | 0 | 0100
@@ -2578,6 +2849,8 @@
 -- left join
 EXPLAIN (COSTS OFF)
 SELECT t1.a, t1.c, t2.b, t2.c FROM prt1_adv t1 LEFT JOIN prt2_adv t2 ON (t1.a = t2.b) WHERE t1.b = 0 ORDER BY t1.a, t2.b;
+INFO:  Path param info: 250.000000
+INFO:  Path param info: 0.000000
                       QUERY PLAN                      
 ------------------------------------------------------
  Sort
@@ -2604,6 +2877,8 @@
 (21 rows)
 
 SELECT t1.a, t1.c, t2.b, t2.c FROM prt1_adv t1 LEFT JOIN prt2_adv t2 ON (t1.a = t2.b) WHERE t1.b = 0 ORDER BY t1.a, t2.b;
+INFO:  Path param info: 250.000000
+INFO:  Path param info: 0.000000
   a  |  c   |  b  |  c   
 -----+------+-----+------
  100 | 0100 | 100 | 0100
@@ -2623,6 +2898,8 @@
 -- anti join
 EXPLAIN (COSTS OFF)
 SELECT t1.* FROM prt1_adv t1 WHERE NOT EXISTS (SELECT 1 FROM prt2_adv t2 WHERE t1.a = t2.b) AND t1.b = 0 ORDER BY t1.a;
+INFO:  Path param info: 250.000000
+INFO:  Path param info: 0.000000
                       QUERY PLAN                      
 ------------------------------------------------------
  Sort
@@ -2649,6 +2926,8 @@
 (21 rows)
 
 SELECT t1.* FROM prt1_adv t1 WHERE NOT EXISTS (SELECT 1 FROM prt2_adv t2 WHERE t1.a = t2.b) AND t1.b = 0 ORDER BY t1.a;
+INFO:  Path param info: 250.000000
+INFO:  Path param info: 0.000000
   a  | b |  c   
 -----+---+------
  150 | 0 | 0150
@@ -2660,6 +2939,7 @@
 -- full join
 EXPLAIN (COSTS OFF)
 SELECT t1.a, t1.c, t2.b, t2.c FROM (SELECT 175 phv, * FROM prt1_adv WHERE prt1_adv.b = 0) t1 FULL JOIN (SELECT 425 phv, * FROM prt2_adv WHERE prt2_adv.a = 0) t2 ON (t1.a = t2.b) WHERE t1.phv = t1.a OR t2.phv = t2.b ORDER BY t1.a, t2.b;
+INFO:  Path param info: 0.000000
                                 QUERY PLAN                                
 --------------------------------------------------------------------------
  Sort
@@ -2692,6 +2972,7 @@
 (27 rows)
 
 SELECT t1.a, t1.c, t2.b, t2.c FROM (SELECT 175 phv, * FROM prt1_adv WHERE prt1_adv.b = 0) t1 FULL JOIN (SELECT 425 phv, * FROM prt2_adv WHERE prt2_adv.a = 0) t2 ON (t1.a = t2.b) WHERE t1.phv = t1.a OR t2.phv = t2.b ORDER BY t1.a, t2.b;
+INFO:  Path param info: 0.000000
   a  |  c   |  b  |  c   
 -----+------+-----+------
  175 | 0175 |     | 
@@ -2705,6 +2986,8 @@
 -- inner join
 EXPLAIN (COSTS OFF)
 SELECT t1.a, t1.c, t2.b, t2.c FROM prt1_adv t1 INNER JOIN prt2_adv t2 ON (t1.a = t2.b) WHERE t1.b = 0 ORDER BY t1.a, t2.b;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                       QUERY PLAN                      
 ------------------------------------------------------
  Sort
@@ -2731,6 +3014,8 @@
 (21 rows)
 
 SELECT t1.a, t1.c, t2.b, t2.c FROM prt1_adv t1 INNER JOIN prt2_adv t2 ON (t1.a = t2.b) WHERE t1.b = 0 ORDER BY t1.a, t2.b;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
   a  |  c   |  b  |  c   
 -----+------+-----+------
  100 | 0100 | 100 | 0100
@@ -2746,6 +3031,8 @@
 -- semi join
 EXPLAIN (COSTS OFF)
 SELECT t1.* FROM prt1_adv t1 WHERE EXISTS (SELECT 1 FROM prt2_adv t2 WHERE t1.a = t2.b) AND t1.b = 0 ORDER BY t1.a;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                       QUERY PLAN                      
 ------------------------------------------------------
  Sort
@@ -2772,6 +3059,8 @@
 (21 rows)
 
 SELECT t1.* FROM prt1_adv t1 WHERE EXISTS (SELECT 1 FROM prt2_adv t2 WHERE t1.a = t2.b) AND t1.b = 0 ORDER BY t1.a;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
   a  | b |  c   
 -----+---+------
  100 | 0 | 0100
@@ -2787,6 +3076,8 @@
 -- left join
 EXPLAIN (COSTS OFF)
 SELECT t1.a, t1.c, t2.b, t2.c FROM prt1_adv t1 LEFT JOIN prt2_adv t2 ON (t1.a = t2.b) WHERE t1.b = 0 ORDER BY t1.a, t2.b;
+INFO:  Path param info: 334.000000
+INFO:  Path param info: 0.000000
                       QUERY PLAN                      
 ------------------------------------------------------
  Sort
@@ -2813,6 +3104,8 @@
 (21 rows)
 
 SELECT t1.a, t1.c, t2.b, t2.c FROM prt1_adv t1 LEFT JOIN prt2_adv t2 ON (t1.a = t2.b) WHERE t1.b = 0 ORDER BY t1.a, t2.b;
+INFO:  Path param info: 334.000000
+INFO:  Path param info: 0.000000
   a  |  c   |  b  |  c   
 -----+------+-----+------
  100 | 0100 | 100 | 0100
@@ -2833,6 +3126,8 @@
 -- partitions on the nullable side
 EXPLAIN (COSTS OFF)
 SELECT t1.b, t1.c, t2.a, t2.c FROM prt2_adv t1 LEFT JOIN prt1_adv t2 ON (t1.b = t2.a) WHERE t1.a = 0 ORDER BY t1.b, t2.a;
+INFO:  Path param info: 252.000000
+INFO:  Path param info: 0.000000
                        QUERY PLAN                        
 ---------------------------------------------------------
  Sort
@@ -2858,6 +3153,8 @@
 -- anti join
 EXPLAIN (COSTS OFF)
 SELECT t1.* FROM prt1_adv t1 WHERE NOT EXISTS (SELECT 1 FROM prt2_adv t2 WHERE t1.a = t2.b) AND t1.b = 0 ORDER BY t1.a;
+INFO:  Path param info: 334.000000
+INFO:  Path param info: 0.000000
                       QUERY PLAN                      
 ------------------------------------------------------
  Sort
@@ -2884,6 +3181,8 @@
 (21 rows)
 
 SELECT t1.* FROM prt1_adv t1 WHERE NOT EXISTS (SELECT 1 FROM prt2_adv t2 WHERE t1.a = t2.b) AND t1.b = 0 ORDER BY t1.a;
+INFO:  Path param info: 334.000000
+INFO:  Path param info: 0.000000
   a  | b |  c   
 -----+---+------
  150 | 0 | 0150
@@ -2896,6 +3195,8 @@
 -- partitions on the nullable side
 EXPLAIN (COSTS OFF)
 SELECT t1.* FROM prt2_adv t1 WHERE NOT EXISTS (SELECT 1 FROM prt1_adv t2 WHERE t1.b = t2.a) AND t1.a = 0 ORDER BY t1.b;
+INFO:  Path param info: 252.000000
+INFO:  Path param info: 0.000000
                        QUERY PLAN                        
 ---------------------------------------------------------
  Sort
@@ -2922,6 +3223,7 @@
 -- partitions on the nullable side
 EXPLAIN (COSTS OFF)
 SELECT t1.a, t1.c, t2.b, t2.c FROM (SELECT 175 phv, * FROM prt1_adv WHERE prt1_adv.b = 0) t1 FULL JOIN (SELECT 425 phv, * FROM prt2_adv WHERE prt2_adv.a = 0) t2 ON (t1.a = t2.b) WHERE t1.phv = t1.a OR t2.phv = t2.b ORDER BY t1.a, t2.b;
+INFO:  Path param info: 0.000000
                            QUERY PLAN                           
 ----------------------------------------------------------------
  Sort
@@ -2951,6 +3253,13 @@
 -- 3-way join where not every pair of relations can do partitioned join
 EXPLAIN (COSTS OFF)
 SELECT t1.b, t1.c, t2.a, t2.c, t3.a, t3.c FROM prt2_adv t1 LEFT JOIN prt1_adv t2 ON (t1.b = t2.a) INNER JOIN prt1_adv t3 ON (t1.b = t3.a) WHERE t1.a = 0 ORDER BY t1.b, t2.a, t3.a;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                    QUERY PLAN                                   
 --------------------------------------------------------------------------------
  Sort
@@ -2987,6 +3296,13 @@
 (31 rows)
 
 SELECT t1.b, t1.c, t2.a, t2.c, t3.a, t3.c FROM prt2_adv t1 LEFT JOIN prt1_adv t2 ON (t1.b = t2.a) INNER JOIN prt1_adv t3 ON (t1.b = t3.a) WHERE t1.a = 0 ORDER BY t1.b, t2.a, t3.a;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
   b  |  c   |  a  |  c   |  a  |  c   
 -----+------+-----+------+-----+------
  100 | 0100 | 100 | 0100 | 100 | 0100
@@ -3011,6 +3327,8 @@
 -- inner join
 EXPLAIN (COSTS OFF)
 SELECT t1.a, t1.c, t2.b, t2.c FROM prt1_adv t1 INNER JOIN prt2_adv t2 ON (t1.a = t2.b) WHERE t1.b = 0 ORDER BY t1.a, t2.b;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                       QUERY PLAN                      
 ------------------------------------------------------
  Sort
@@ -3035,6 +3353,8 @@
 -- semi join
 EXPLAIN (COSTS OFF)
 SELECT t1.* FROM prt1_adv t1 WHERE EXISTS (SELECT 1 FROM prt2_adv t2 WHERE t1.a = t2.b) AND t1.b = 0 ORDER BY t1.a;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                        QUERY PLAN                       
 --------------------------------------------------------
  Sort
@@ -3059,6 +3379,8 @@
 -- left join
 EXPLAIN (COSTS OFF)
 SELECT t1.a, t1.c, t2.b, t2.c FROM prt1_adv t1 LEFT JOIN prt2_adv t2 ON (t1.a = t2.b) WHERE t1.b = 0 ORDER BY t1.a, t2.b;
+INFO:  Path param info: 252.000000
+INFO:  Path param info: 0.000000
                       QUERY PLAN                      
 ------------------------------------------------------
  Sort
@@ -3083,6 +3405,8 @@
 -- anti join
 EXPLAIN (COSTS OFF)
 SELECT t1.* FROM prt1_adv t1 WHERE NOT EXISTS (SELECT 1 FROM prt2_adv t2 WHERE t1.a = t2.b) AND t1.b = 0 ORDER BY t1.a;
+INFO:  Path param info: 252.000000
+INFO:  Path param info: 0.000000
                       QUERY PLAN                      
 ------------------------------------------------------
  Sort
@@ -3107,6 +3431,7 @@
 -- full join
 EXPLAIN (COSTS OFF)
 SELECT t1.a, t1.c, t2.b, t2.c FROM (SELECT 175 phv, * FROM prt1_adv WHERE prt1_adv.b = 0) t1 FULL JOIN (SELECT 425 phv, * FROM prt2_adv WHERE prt2_adv.a = 0) t2 ON (t1.a = t2.b) WHERE t1.phv = t1.a OR t2.phv = t2.b ORDER BY t1.a, t2.b;
+INFO:  Path param info: 0.000000
                            QUERY PLAN                           
 ----------------------------------------------------------------
  Sort
@@ -3146,6 +3471,8 @@
 -- partition
 EXPLAIN (COSTS OFF)
 SELECT t1.a, t1.c, t2.b, t2.c FROM prt1_adv t1 INNER JOIN prt2_adv t2 ON (t1.a = t2.b) WHERE t1.b = 0 ORDER BY t1.a, t2.b;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                       QUERY PLAN                      
 ------------------------------------------------------
  Sort
@@ -3166,6 +3493,8 @@
 (15 rows)
 
 SELECT t1.a, t1.c, t2.b, t2.c FROM prt1_adv t1 INNER JOIN prt2_adv t2 ON (t1.a = t2.b) WHERE t1.b = 0 ORDER BY t1.a, t2.b;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
   a  |  c   |  b  |  c   
 -----+------+-----+------
  100 | 0100 | 100 | 0100
@@ -3186,6 +3515,8 @@
 -- matches prt2_adv_p1 and prt2_adv_p3
 EXPLAIN (COSTS OFF)
 SELECT t1.a, t1.c, t2.b, t2.c FROM prt1_adv t1 INNER JOIN prt2_adv t2 ON (t1.a = t2.b) WHERE t1.b = 0 ORDER BY t1.a, t2.b;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                       QUERY PLAN                      
 ------------------------------------------------------
  Sort
@@ -3214,6 +3545,8 @@
 -- matches prt2_adv_p1 and prt2_adv_p3
 EXPLAIN (COSTS OFF)
 SELECT t1.a, t1.c, t2.b, t2.c FROM prt1_adv t1 INNER JOIN prt2_adv t2 ON (t1.a = t2.b) WHERE t1.b = 0 ORDER BY t1.a, t2.b;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                       QUERY PLAN                      
 ------------------------------------------------------
  Sort
@@ -3247,6 +3580,13 @@
 -- 3-way join to test the default partition of a join relation
 EXPLAIN (COSTS OFF)
 SELECT t1.a, t1.c, t2.b, t2.c, t3.a, t3.c FROM prt1_adv t1 LEFT JOIN prt2_adv t2 ON (t1.a = t2.b) LEFT JOIN prt3_adv t3 ON (t1.a = t3.a) WHERE t1.b = 0 ORDER BY t1.a, t2.b, t3.a;
+INFO:  Path param info: 168.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                             QUERY PLAN                            
 ------------------------------------------------------------------
  Sort
@@ -3275,6 +3615,13 @@
 (23 rows)
 
 SELECT t1.a, t1.c, t2.b, t2.c, t3.a, t3.c FROM prt1_adv t1 LEFT JOIN prt2_adv t2 ON (t1.a = t2.b) LEFT JOIN prt3_adv t3 ON (t1.a = t3.a) WHERE t1.b = 0 ORDER BY t1.a, t2.b, t3.a;
+INFO:  Path param info: 168.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
   a  |  c   |  b  |  c   |  a  |  c   
 -----+------+-----+------+-----+------
  100 | 0100 | 100 | 0100 |     | 
@@ -3306,6 +3653,8 @@
 ANALYZE prt2_adv;
 EXPLAIN (COSTS OFF)
 SELECT t1.a, t1.c, t2.b, t2.c FROM prt1_adv t1 INNER JOIN prt2_adv t2 ON (t1.a = t2.b) WHERE t1.a < 300 AND t1.b = 0 ORDER BY t1.a, t2.b;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                         QUERY PLAN                         
 -----------------------------------------------------------
  Sort
@@ -3326,6 +3675,8 @@
 (15 rows)
 
 SELECT t1.a, t1.c, t2.b, t2.c FROM prt1_adv t1 INNER JOIN prt2_adv t2 ON (t1.a = t2.b) WHERE t1.a < 300 AND t1.b = 0 ORDER BY t1.a, t2.b;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
   a  |  c   |  b  |  c   
 -----+------+-----+------
  100 | 0100 | 100 | 0100
@@ -3345,6 +3696,8 @@
 ANALYZE prt2_adv;
 EXPLAIN (COSTS OFF)
 SELECT t1.a, t1.c, t2.b, t2.c FROM prt1_adv t1 INNER JOIN prt2_adv t2 ON (t1.a = t2.b) WHERE t1.a >= 100 AND t1.a < 300 AND t1.b = 0 ORDER BY t1.a, t2.b;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                 QUERY PLAN                                
 --------------------------------------------------------------------------
  Sort
@@ -3365,6 +3718,8 @@
 (15 rows)
 
 SELECT t1.a, t1.c, t2.b, t2.c FROM prt1_adv t1 INNER JOIN prt2_adv t2 ON (t1.a = t2.b) WHERE t1.a >= 100 AND t1.a < 300 AND t1.b = 0 ORDER BY t1.a, t2.b;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
   a  |  c   |  b  |  c   
 -----+------+-----+------
  100 | 0100 | 100 | 0100
@@ -3395,6 +3750,8 @@
 -- inner join
 EXPLAIN (COSTS OFF)
 SELECT t1.a, t1.c, t2.a, t2.c FROM plt1_adv t1 INNER JOIN plt2_adv t2 ON (t1.a = t2.a AND t1.c = t2.c) WHERE t1.b < 10 ORDER BY t1.a;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                              QUERY PLAN                             
 --------------------------------------------------------------------
  Sort
@@ -3421,6 +3778,8 @@
 (21 rows)
 
 SELECT t1.a, t1.c, t2.a, t2.c FROM plt1_adv t1 INNER JOIN plt2_adv t2 ON (t1.a = t2.a AND t1.c = t2.c) WHERE t1.b < 10 ORDER BY t1.a;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  a |  c   | a |  c   
 ---+------+---+------
  3 | 0003 | 3 | 0003
@@ -3432,6 +3791,8 @@
 -- semi join
 EXPLAIN (COSTS OFF)
 SELECT t1.* FROM plt1_adv t1 WHERE EXISTS (SELECT 1 FROM plt2_adv t2 WHERE t1.a = t2.a AND t1.c = t2.c) AND t1.b < 10 ORDER BY t1.a;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                               QUERY PLAN                              
 ----------------------------------------------------------------------
  Sort
@@ -3455,6 +3816,8 @@
 (18 rows)
 
 SELECT t1.* FROM plt1_adv t1 WHERE EXISTS (SELECT 1 FROM plt2_adv t2 WHERE t1.a = t2.a AND t1.c = t2.c) AND t1.b < 10 ORDER BY t1.a;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  a | b |  c   
 ---+---+------
  3 | 3 | 0003
@@ -3466,6 +3829,8 @@
 -- left join
 EXPLAIN (COSTS OFF)
 SELECT t1.a, t1.c, t2.a, t2.c FROM plt1_adv t1 LEFT JOIN plt2_adv t2 ON (t1.a = t2.a AND t1.c = t2.c) WHERE t1.b < 10 ORDER BY t1.a;
+INFO:  Path param info: 150.000000
+INFO:  Path param info: 0.000000
                              QUERY PLAN                             
 --------------------------------------------------------------------
  Sort
@@ -3492,6 +3857,8 @@
 (21 rows)
 
 SELECT t1.a, t1.c, t2.a, t2.c FROM plt1_adv t1 LEFT JOIN plt2_adv t2 ON (t1.a = t2.a AND t1.c = t2.c) WHERE t1.b < 10 ORDER BY t1.a;
+INFO:  Path param info: 150.000000
+INFO:  Path param info: 0.000000
  a |  c   | a |  c   
 ---+------+---+------
  1 | 0001 |   | 
@@ -3505,6 +3872,8 @@
 -- anti join
 EXPLAIN (COSTS OFF)
 SELECT t1.* FROM plt1_adv t1 WHERE NOT EXISTS (SELECT 1 FROM plt2_adv t2 WHERE t1.a = t2.a AND t1.c = t2.c) AND t1.b < 10 ORDER BY t1.a;
+INFO:  Path param info: 150.000000
+INFO:  Path param info: 0.000000
                              QUERY PLAN                             
 --------------------------------------------------------------------
  Sort
@@ -3531,6 +3900,8 @@
 (21 rows)
 
 SELECT t1.* FROM plt1_adv t1 WHERE NOT EXISTS (SELECT 1 FROM plt2_adv t2 WHERE t1.a = t2.a AND t1.c = t2.c) AND t1.b < 10 ORDER BY t1.a;
+INFO:  Path param info: 150.000000
+INFO:  Path param info: 0.000000
  a | b |  c   
 ---+---+------
  1 | 1 | 0001
@@ -3540,6 +3911,7 @@
 -- full join
 EXPLAIN (COSTS OFF)
 SELECT t1.a, t1.c, t2.a, t2.c FROM plt1_adv t1 FULL JOIN plt2_adv t2 ON (t1.a = t2.a AND t1.c = t2.c) WHERE coalesce(t1.b, 0) < 10 AND coalesce(t2.b, 0) < 10 ORDER BY t1.a, t2.a;
+INFO:  Path param info: 0.000000
                                     QUERY PLAN                                     
 -----------------------------------------------------------------------------------
  Sort
@@ -3566,6 +3938,7 @@
 (21 rows)
 
 SELECT t1.a, t1.c, t2.a, t2.c FROM plt1_adv t1 FULL JOIN plt2_adv t2 ON (t1.a = t2.a AND t1.c = t2.c) WHERE coalesce(t1.b, 0) < 10 AND coalesce(t2.b, 0) < 10 ORDER BY t1.a, t2.a;
+INFO:  Path param info: 0.000000
  a |  c   | a |  c   
 ---+------+---+------
  1 | 0001 |   | 
@@ -3585,6 +3958,8 @@
 -- inner join
 EXPLAIN (COSTS OFF)
 SELECT t1.a, t1.c, t2.a, t2.c FROM plt1_adv t1 INNER JOIN plt2_adv t2 ON (t1.a = t2.a AND t1.c = t2.c) WHERE t1.b < 10 ORDER BY t1.a;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                              QUERY PLAN                             
 --------------------------------------------------------------------
  Sort
@@ -3611,6 +3986,8 @@
 (21 rows)
 
 SELECT t1.a, t1.c, t2.a, t2.c FROM plt1_adv t1 INNER JOIN plt2_adv t2 ON (t1.a = t2.a AND t1.c = t2.c) WHERE t1.b < 10 ORDER BY t1.a;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  a |  c   | a |  c   
 ---+------+---+------
  3 | 0003 | 3 | 0003
@@ -3622,6 +3999,8 @@
 -- semi join
 EXPLAIN (COSTS OFF)
 SELECT t1.* FROM plt1_adv t1 WHERE EXISTS (SELECT 1 FROM plt2_adv t2 WHERE t1.a = t2.a AND t1.c = t2.c) AND t1.b < 10 ORDER BY t1.a;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                               QUERY PLAN                              
 ----------------------------------------------------------------------
  Sort
@@ -3645,6 +4024,8 @@
 (18 rows)
 
 SELECT t1.* FROM plt1_adv t1 WHERE EXISTS (SELECT 1 FROM plt2_adv t2 WHERE t1.a = t2.a AND t1.c = t2.c) AND t1.b < 10 ORDER BY t1.a;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  a | b |  c   
 ---+---+------
  3 | 3 | 0003
@@ -3656,6 +4037,8 @@
 -- left join
 EXPLAIN (COSTS OFF)
 SELECT t1.a, t1.c, t2.a, t2.c FROM plt1_adv t1 LEFT JOIN plt2_adv t2 ON (t1.a = t2.a AND t1.c = t2.c) WHERE t1.b < 10 ORDER BY t1.a;
+INFO:  Path param info: 152.000000
+INFO:  Path param info: 0.000000
                              QUERY PLAN                             
 --------------------------------------------------------------------
  Sort
@@ -3682,6 +4065,8 @@
 (21 rows)
 
 SELECT t1.a, t1.c, t2.a, t2.c FROM plt1_adv t1 LEFT JOIN plt2_adv t2 ON (t1.a = t2.a AND t1.c = t2.c) WHERE t1.b < 10 ORDER BY t1.a;
+INFO:  Path param info: 152.000000
+INFO:  Path param info: 0.000000
  a |  c   | a |  c   
 ---+------+---+------
  1 | 0001 |   | 
@@ -3696,6 +4081,8 @@
 -- partitions on the nullable side
 EXPLAIN (COSTS OFF)
 SELECT t1.a, t1.c, t2.a, t2.c FROM plt2_adv t1 LEFT JOIN plt1_adv t2 ON (t1.a = t2.a AND t1.c = t2.c) WHERE t1.b < 10 ORDER BY t1.a;
+INFO:  Path param info: 150.000000
+INFO:  Path param info: 0.000000
                        QUERY PLAN                        
 ---------------------------------------------------------
  Sort
@@ -3721,6 +4108,8 @@
 -- anti join
 EXPLAIN (COSTS OFF)
 SELECT t1.* FROM plt1_adv t1 WHERE NOT EXISTS (SELECT 1 FROM plt2_adv t2 WHERE t1.a = t2.a AND t1.c = t2.c) AND t1.b < 10 ORDER BY t1.a;
+INFO:  Path param info: 152.000000
+INFO:  Path param info: 0.000000
                              QUERY PLAN                             
 --------------------------------------------------------------------
  Sort
@@ -3747,6 +4136,8 @@
 (21 rows)
 
 SELECT t1.* FROM plt1_adv t1 WHERE NOT EXISTS (SELECT 1 FROM plt2_adv t2 WHERE t1.a = t2.a AND t1.c = t2.c) AND t1.b < 10 ORDER BY t1.a;
+INFO:  Path param info: 152.000000
+INFO:  Path param info: 0.000000
  a | b |  c   
 ---+---+------
  1 | 1 | 0001
@@ -3757,6 +4148,8 @@
 -- partitions on the nullable side
 EXPLAIN (COSTS OFF)
 SELECT t1.* FROM plt2_adv t1 WHERE NOT EXISTS (SELECT 1 FROM plt1_adv t2 WHERE t1.a = t2.a AND t1.c = t2.c) AND t1.b < 10 ORDER BY t1.a;
+INFO:  Path param info: 150.000000
+INFO:  Path param info: 0.000000
                        QUERY PLAN                        
 ---------------------------------------------------------
  Sort
@@ -3783,6 +4176,7 @@
 -- partitions on the nullable side
 EXPLAIN (COSTS OFF)
 SELECT t1.a, t1.c, t2.a, t2.c FROM plt1_adv t1 FULL JOIN plt2_adv t2 ON (t1.a = t2.a AND t1.c = t2.c) WHERE coalesce(t1.b, 0) < 10 AND coalesce(t2.b, 0) < 10 ORDER BY t1.a, t2.a;
+INFO:  Path param info: 0.000000
                                QUERY PLAN                                
 -------------------------------------------------------------------------
  Sort
@@ -3814,6 +4208,8 @@
 -- inner join
 EXPLAIN (COSTS OFF)
 SELECT t1.a, t1.c, t2.a, t2.c FROM plt1_adv t1 INNER JOIN plt2_adv t2 ON (t1.a = t2.a AND t1.c = t2.c) WHERE t1.b < 10 ORDER BY t1.a;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                       QUERY PLAN                      
 ------------------------------------------------------
  Sort
@@ -3838,6 +4234,8 @@
 -- semi join
 EXPLAIN (COSTS OFF)
 SELECT t1.* FROM plt1_adv t1 WHERE EXISTS (SELECT 1 FROM plt2_adv t2 WHERE t1.a = t2.a AND t1.c = t2.c) AND t1.b < 10 ORDER BY t1.a;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                        QUERY PLAN                       
 --------------------------------------------------------
  Sort
@@ -3862,6 +4260,8 @@
 -- left join
 EXPLAIN (COSTS OFF)
 SELECT t1.a, t1.c, t2.a, t2.c FROM plt1_adv t1 LEFT JOIN plt2_adv t2 ON (t1.a = t2.a AND t1.c = t2.c) WHERE t1.b < 10 ORDER BY t1.a;
+INFO:  Path param info: 152.000000
+INFO:  Path param info: 0.000000
                       QUERY PLAN                      
 ------------------------------------------------------
  Sort
@@ -3886,6 +4286,8 @@
 -- anti join
 EXPLAIN (COSTS OFF)
 SELECT t1.* FROM plt1_adv t1 WHERE NOT EXISTS (SELECT 1 FROM plt2_adv t2 WHERE t1.a = t2.a AND t1.c = t2.c) AND t1.b < 10 ORDER BY t1.a;
+INFO:  Path param info: 152.000000
+INFO:  Path param info: 0.000000
                       QUERY PLAN                      
 ------------------------------------------------------
  Sort
@@ -3910,6 +4312,7 @@
 -- full join
 EXPLAIN (COSTS OFF)
 SELECT t1.a, t1.c, t2.a, t2.c FROM plt1_adv t1 FULL JOIN plt2_adv t2 ON (t1.a = t2.a AND t1.c = t2.c) WHERE coalesce(t1.b, 0) < 10 AND coalesce(t2.b, 0) < 10 ORDER BY t1.a, t2.a;
+INFO:  Path param info: 0.000000
                                QUERY PLAN                                
 -------------------------------------------------------------------------
  Sort
@@ -3949,6 +4352,8 @@
 -- inner join
 EXPLAIN (COSTS OFF)
 SELECT t1.a, t1.c, t2.a, t2.c FROM plt1_adv t1 INNER JOIN plt2_adv t2 ON (t1.a = t2.a AND t1.c = t2.c) WHERE t1.b < 10 ORDER BY t1.a;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                              QUERY PLAN                             
 --------------------------------------------------------------------
  Sort
@@ -3975,6 +4380,8 @@
 (21 rows)
 
 SELECT t1.a, t1.c, t2.a, t2.c FROM plt1_adv t1 INNER JOIN plt2_adv t2 ON (t1.a = t2.a AND t1.c = t2.c) WHERE t1.b < 10 ORDER BY t1.a;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  a |  c   | a |  c   
 ---+------+---+------
  3 | 0003 | 3 | 0003
@@ -3986,6 +4393,8 @@
 -- semi join
 EXPLAIN (COSTS OFF)
 SELECT t1.* FROM plt1_adv t1 WHERE EXISTS (SELECT 1 FROM plt2_adv t2 WHERE t1.a = t2.a AND t1.c = t2.c) AND t1.b < 10 ORDER BY t1.a;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                               QUERY PLAN                              
 ----------------------------------------------------------------------
  Sort
@@ -4010,6 +4419,8 @@
 (19 rows)
 
 SELECT t1.* FROM plt1_adv t1 WHERE EXISTS (SELECT 1 FROM plt2_adv t2 WHERE t1.a = t2.a AND t1.c = t2.c) AND t1.b < 10 ORDER BY t1.a;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  a | b |  c   
 ---+---+------
  3 | 3 | 0003
@@ -4021,6 +4432,8 @@
 -- left join
 EXPLAIN (COSTS OFF)
 SELECT t1.a, t1.c, t2.a, t2.c FROM plt1_adv t1 LEFT JOIN plt2_adv t2 ON (t1.a = t2.a AND t1.c = t2.c) WHERE t1.b < 10 ORDER BY t1.a;
+INFO:  Path param info: 152.000000
+INFO:  Path param info: 0.000000
                              QUERY PLAN                             
 --------------------------------------------------------------------
  Sort
@@ -4047,6 +4460,8 @@
 (21 rows)
 
 SELECT t1.a, t1.c, t2.a, t2.c FROM plt1_adv t1 LEFT JOIN plt2_adv t2 ON (t1.a = t2.a AND t1.c = t2.c) WHERE t1.b < 10 ORDER BY t1.a;
+INFO:  Path param info: 152.000000
+INFO:  Path param info: 0.000000
  a  |  c   | a |  c   
 ----+------+---+------
  -1 |      |   | 
@@ -4061,6 +4476,8 @@
 -- anti join
 EXPLAIN (COSTS OFF)
 SELECT t1.* FROM plt1_adv t1 WHERE NOT EXISTS (SELECT 1 FROM plt2_adv t2 WHERE t1.a = t2.a AND t1.c = t2.c) AND t1.b < 10 ORDER BY t1.a;
+INFO:  Path param info: 152.000000
+INFO:  Path param info: 0.000000
                              QUERY PLAN                             
 --------------------------------------------------------------------
  Sort
@@ -4087,6 +4504,8 @@
 (21 rows)
 
 SELECT t1.* FROM plt1_adv t1 WHERE NOT EXISTS (SELECT 1 FROM plt2_adv t2 WHERE t1.a = t2.a AND t1.c = t2.c) AND t1.b < 10 ORDER BY t1.a;
+INFO:  Path param info: 152.000000
+INFO:  Path param info: 0.000000
  a  | b  |  c   
 ----+----+------
  -1 | -1 | 
@@ -4097,6 +4516,7 @@
 -- full join
 EXPLAIN (COSTS OFF)
 SELECT t1.a, t1.c, t2.a, t2.c FROM plt1_adv t1 FULL JOIN plt2_adv t2 ON (t1.a = t2.a AND t1.c = t2.c) WHERE coalesce(t1.b, 0) < 10 AND coalesce(t2.b, 0) < 10 ORDER BY t1.a, t2.a;
+INFO:  Path param info: 0.000000
                                     QUERY PLAN                                     
 -----------------------------------------------------------------------------------
  Sort
@@ -4123,6 +4543,7 @@
 (21 rows)
 
 SELECT t1.a, t1.c, t2.a, t2.c FROM plt1_adv t1 FULL JOIN plt2_adv t2 ON (t1.a = t2.a AND t1.c = t2.c) WHERE coalesce(t1.b, 0) < 10 AND coalesce(t2.b, 0) < 10 ORDER BY t1.a, t2.a;
+INFO:  Path param info: 0.000000
  a  |  c   | a  |  c   
 ----+------+----+------
  -1 |      |    | 
@@ -4152,6 +4573,8 @@
 -- inner join
 EXPLAIN (COSTS OFF)
 SELECT t1.a, t1.c, t2.a, t2.c FROM plt1_adv t1 INNER JOIN plt2_adv t2 ON (t1.a = t2.a AND t1.c = t2.c) WHERE t1.b < 10 ORDER BY t1.a;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                              QUERY PLAN                             
 --------------------------------------------------------------------
  Sort
@@ -4178,6 +4601,8 @@
 (21 rows)
 
 SELECT t1.a, t1.c, t2.a, t2.c FROM plt1_adv t1 INNER JOIN plt2_adv t2 ON (t1.a = t2.a AND t1.c = t2.c) WHERE t1.b < 10 ORDER BY t1.a;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  a |  c   | a |  c   
 ---+------+---+------
  3 | 0003 | 3 | 0003
@@ -4190,6 +4615,8 @@
 -- partitions on the nullable side
 EXPLAIN (COSTS OFF)
 SELECT t1.a, t1.c, t2.a, t2.c FROM plt1_adv t1 LEFT JOIN plt2_adv t2 ON (t1.a = t2.a AND t1.c = t2.c) WHERE t1.b < 10 ORDER BY t1.a;
+INFO:  Path param info: 150.000000
+INFO:  Path param info: 0.000000
                        QUERY PLAN                        
 ---------------------------------------------------------
  Sort
@@ -4216,6 +4643,7 @@
 -- partitions on the nullable side
 EXPLAIN (COSTS OFF)
 SELECT t1.a, t1.c, t2.a, t2.c FROM plt1_adv t1 FULL JOIN plt2_adv t2 ON (t1.a = t2.a AND t1.c = t2.c) WHERE coalesce(t1.b, 0) < 10 AND coalesce(t2.b, 0) < 10 ORDER BY t1.a, t2.a;
+INFO:  Path param info: 0.000000
                                QUERY PLAN                                
 -------------------------------------------------------------------------
  Sort
@@ -4243,6 +4671,8 @@
 -- inner join
 EXPLAIN (COSTS OFF)
 SELECT t1.a, t1.c, t2.a, t2.c FROM plt1_adv t1 INNER JOIN plt2_adv t2 ON (t1.a = t2.a AND t1.c = t2.c) WHERE t1.b < 10 ORDER BY t1.a;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                              QUERY PLAN                             
 --------------------------------------------------------------------
  Sort
@@ -4269,6 +4699,8 @@
 (21 rows)
 
 SELECT t1.a, t1.c, t2.a, t2.c FROM plt1_adv t1 INNER JOIN plt2_adv t2 ON (t1.a = t2.a AND t1.c = t2.c) WHERE t1.b < 10 ORDER BY t1.a;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  a |  c   | a |  c   
 ---+------+---+------
  3 | 0003 | 3 | 0003
@@ -4280,6 +4712,8 @@
 -- left join
 EXPLAIN (COSTS OFF)
 SELECT t1.a, t1.c, t2.a, t2.c FROM plt1_adv t1 LEFT JOIN plt2_adv t2 ON (t1.a = t2.a AND t1.c = t2.c) WHERE t1.b < 10 ORDER BY t1.a;
+INFO:  Path param info: 152.000000
+INFO:  Path param info: 0.000000
                               QUERY PLAN                              
 ----------------------------------------------------------------------
  Sort
@@ -4311,6 +4745,8 @@
 (26 rows)
 
 SELECT t1.a, t1.c, t2.a, t2.c FROM plt1_adv t1 LEFT JOIN plt2_adv t2 ON (t1.a = t2.a AND t1.c = t2.c) WHERE t1.b < 10 ORDER BY t1.a;
+INFO:  Path param info: 152.000000
+INFO:  Path param info: 0.000000
  a  |  c   | a |  c   
 ----+------+---+------
  -1 |      |   | 
@@ -4325,6 +4761,7 @@
 -- full join
 EXPLAIN (COSTS OFF)
 SELECT t1.a, t1.c, t2.a, t2.c FROM plt1_adv t1 FULL JOIN plt2_adv t2 ON (t1.a = t2.a AND t1.c = t2.c) WHERE coalesce(t1.b, 0) < 10 AND coalesce(t2.b, 0) < 10 ORDER BY t1.a, t2.a;
+INFO:  Path param info: 0.000000
                                     QUERY PLAN                                     
 -----------------------------------------------------------------------------------
  Sort
@@ -4357,6 +4794,7 @@
 (27 rows)
 
 SELECT t1.a, t1.c, t2.a, t2.c FROM plt1_adv t1 FULL JOIN plt2_adv t2 ON (t1.a = t2.a AND t1.c = t2.c) WHERE coalesce(t1.b, 0) < 10 AND coalesce(t2.b, 0) < 10 ORDER BY t1.a, t2.a;
+INFO:  Path param info: 0.000000
  a  |  c   | a  |  c   
 ----+------+----+------
  -1 |      |    | 
@@ -4374,6 +4812,14 @@
 -- 3-way join to test the NULL partition of a join relation
 EXPLAIN (COSTS OFF)
 SELECT t1.a, t1.c, t2.a, t2.c, t3.a, t3.c FROM plt1_adv t1 LEFT JOIN plt2_adv t2 ON (t1.a = t2.a AND t1.c = t2.c) LEFT JOIN plt1_adv t3 ON (t1.a = t3.a AND t1.c = t3.c) WHERE t1.b < 10 ORDER BY t1.a;
+INFO:  Path param info: 152.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                    QUERY PLAN                                   
 --------------------------------------------------------------------------------
  Sort
@@ -4420,6 +4866,14 @@
 (41 rows)
 
 SELECT t1.a, t1.c, t2.a, t2.c, t3.a, t3.c FROM plt1_adv t1 LEFT JOIN plt2_adv t2 ON (t1.a = t2.a AND t1.c = t2.c) LEFT JOIN plt1_adv t3 ON (t1.a = t3.a AND t1.c = t3.c) WHERE t1.b < 10 ORDER BY t1.a;
+INFO:  Path param info: 152.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  a  |  c   | a |  c   | a |  c   
 ----+------+---+------+---+------
  -1 |      |   |      |   | 
@@ -4445,6 +4899,8 @@
 -- partition
 EXPLAIN (COSTS OFF)
 SELECT t1.a, t1.c, t2.a, t2.c FROM plt1_adv t1 INNER JOIN plt2_adv t2 ON (t1.a = t2.a AND t1.c = t2.c) WHERE t1.b < 10 ORDER BY t1.a;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                              QUERY PLAN                             
 --------------------------------------------------------------------
  Sort
@@ -4465,6 +4921,8 @@
 (15 rows)
 
 SELECT t1.a, t1.c, t2.a, t2.c FROM plt1_adv t1 INNER JOIN plt2_adv t2 ON (t1.a = t2.a AND t1.c = t2.c) WHERE t1.b < 10 ORDER BY t1.a;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  a |  c   | a |  c   
 ---+------+---+------
  3 | 0003 | 3 | 0003
@@ -4482,6 +4940,8 @@
 -- matches plt2_adv_p1 and plt2_adv_p2_ext
 EXPLAIN (COSTS OFF)
 SELECT t1.a, t1.c, t2.a, t2.c FROM plt1_adv t1 INNER JOIN plt2_adv t2 ON (t1.a = t2.a AND t1.c = t2.c) WHERE t1.b < 10 ORDER BY t1.a;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                       QUERY PLAN                      
 ------------------------------------------------------
  Sort
@@ -4507,6 +4967,8 @@
 -- matches plt2_adv_p1 and plt2_adv_p2_ext
 EXPLAIN (COSTS OFF)
 SELECT t1.a, t1.c, t2.a, t2.c FROM plt1_adv t1 INNER JOIN plt2_adv t2 ON (t1.a = t2.a AND t1.c = t2.c) WHERE t1.b < 10 ORDER BY t1.a;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                       QUERY PLAN                      
 ------------------------------------------------------
  Sort
@@ -4536,6 +4998,14 @@
 -- 3-way join to test the default partition of a join relation
 EXPLAIN (COSTS OFF)
 SELECT t1.a, t1.c, t2.a, t2.c, t3.a, t3.c FROM plt1_adv t1 LEFT JOIN plt2_adv t2 ON (t1.a = t2.a AND t1.c = t2.c) LEFT JOIN plt3_adv t3 ON (t1.a = t3.a AND t1.c = t3.c) WHERE t1.b < 10 ORDER BY t1.a;
+INFO:  Path param info: 100.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                    QUERY PLAN                                   
 --------------------------------------------------------------------------------
  Sort
@@ -4564,6 +5034,14 @@
 (23 rows)
 
 SELECT t1.a, t1.c, t2.a, t2.c, t3.a, t3.c FROM plt1_adv t1 LEFT JOIN plt2_adv t2 ON (t1.a = t2.a AND t1.c = t2.c) LEFT JOIN plt3_adv t3 ON (t1.a = t3.a AND t1.c = t3.c) WHERE t1.b < 10 ORDER BY t1.a;
+INFO:  Path param info: 100.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  a |  c   | a |  c   | a |  c   
 ---+------+---+------+---+------
  1 | 0001 |   |      |   | 
@@ -4582,6 +5060,8 @@
 ANALYZE plt2_adv;
 EXPLAIN (COSTS OFF)
 SELECT t1.a, t1.c, t2.a, t2.c FROM plt1_adv t1 INNER JOIN plt2_adv t2 ON (t1.a = t2.a AND t1.c = t2.c) WHERE t1.b < 10 ORDER BY t1.a;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                              QUERY PLAN                             
 --------------------------------------------------------------------
  Sort
@@ -4602,6 +5082,8 @@
 (15 rows)
 
 SELECT t1.a, t1.c, t2.a, t2.c FROM plt1_adv t1 INNER JOIN plt2_adv t2 ON (t1.a = t2.a AND t1.c = t2.c) WHERE t1.b < 10 ORDER BY t1.a;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  a |  c   | a |  c   
 ---+------+---+------
  1 | 0001 | 1 | 0001
@@ -4617,6 +5099,8 @@
 ANALYZE plt2_adv;
 EXPLAIN (COSTS OFF)
 SELECT t1.a, t1.c, t2.a, t2.c FROM plt1_adv t1 INNER JOIN plt2_adv t2 ON (t1.a = t2.a AND t1.c = t2.c) WHERE t1.b < 10 ORDER BY t1.a;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                       QUERY PLAN                      
 ------------------------------------------------------
  Sort
@@ -4630,6 +5114,8 @@
 (8 rows)
 
 SELECT t1.a, t1.c, t2.a, t2.c FROM plt1_adv t1 INNER JOIN plt2_adv t2 ON (t1.a = t2.a AND t1.c = t2.c) WHERE t1.b < 10 ORDER BY t1.a;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  a |  c   | a |  c   
 ---+------+---+------
  4 | 0004 | 4 | 0004
@@ -4658,6 +5144,8 @@
 ANALYZE plt2_adv;
 EXPLAIN (COSTS OFF)
 SELECT t1.a, t1.c, t2.a, t2.c FROM plt1_adv t1 INNER JOIN plt2_adv t2 ON (t1.a = t2.a AND t1.c = t2.c) WHERE t1.c IN ('0003', '0004', '0005') AND t1.b < 10 ORDER BY t1.a;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                        QUERY PLAN                                        
 -----------------------------------------------------------------------------------------
  Sort
@@ -4678,6 +5166,8 @@
 (15 rows)
 
 SELECT t1.a, t1.c, t2.a, t2.c FROM plt1_adv t1 INNER JOIN plt2_adv t2 ON (t1.a = t2.a AND t1.c = t2.c) WHERE t1.c IN ('0003', '0004', '0005') AND t1.b < 10 ORDER BY t1.a;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  a |  c   | a |  c   
 ---+------+---+------
  3 | 0003 | 3 | 0003
@@ -4687,6 +5177,8 @@
 
 EXPLAIN (COSTS OFF)
 SELECT t1.a, t1.c, t2.a, t2.c FROM plt1_adv t1 LEFT JOIN plt2_adv t2 ON (t1.a = t2.a AND t1.c = t2.c) WHERE t1.c IS NULL AND t1.b < 10 ORDER BY t1.a;
+INFO:  Path param info: 128.000000
+INFO:  Path param info: 0.000000
                        QUERY PLAN                       
 --------------------------------------------------------
  Sort
@@ -4700,6 +5192,8 @@
 (8 rows)
 
 SELECT t1.a, t1.c, t2.a, t2.c FROM plt1_adv t1 LEFT JOIN plt2_adv t2 ON (t1.a = t2.a AND t1.c = t2.c) WHERE t1.c IS NULL AND t1.b < 10 ORDER BY t1.a;
+INFO:  Path param info: 128.000000
+INFO:  Path param info: 0.000000
  a  | c | a | c 
 ----+---+---+---
  -1 |   |   | 
@@ -4711,6 +5205,8 @@
 ANALYZE plt2_adv;
 EXPLAIN (COSTS OFF)
 SELECT t1.a, t1.c, t2.a, t2.c FROM plt1_adv t1 INNER JOIN plt2_adv t2 ON (t1.a = t2.a AND t1.c = t2.c) WHERE t1.c IN ('0003', '0004', '0005') AND t1.b < 10 ORDER BY t1.a;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                        QUERY PLAN                                        
 -----------------------------------------------------------------------------------------
  Sort
@@ -4731,6 +5227,8 @@
 (15 rows)
 
 SELECT t1.a, t1.c, t2.a, t2.c FROM plt1_adv t1 INNER JOIN plt2_adv t2 ON (t1.a = t2.a AND t1.c = t2.c) WHERE t1.c IN ('0003', '0004', '0005') AND t1.b < 10 ORDER BY t1.a;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  a |  c   | a |  c   
 ---+------+---+------
  3 | 0003 | 3 | 0003
@@ -4740,6 +5238,8 @@
 
 EXPLAIN (COSTS OFF)
 SELECT t1.a, t1.c, t2.a, t2.c FROM plt1_adv t1 LEFT JOIN plt2_adv t2 ON (t1.a = t2.a AND t1.c = t2.c) WHERE t1.c IS NULL AND t1.b < 10 ORDER BY t1.a;
+INFO:  Path param info: 130.000000
+INFO:  Path param info: 0.000000
                        QUERY PLAN                       
 --------------------------------------------------------
  Sort
@@ -4753,6 +5253,8 @@
 (8 rows)
 
 SELECT t1.a, t1.c, t2.a, t2.c FROM plt1_adv t1 LEFT JOIN plt2_adv t2 ON (t1.a = t2.a AND t1.c = t2.c) WHERE t1.c IS NULL AND t1.b < 10 ORDER BY t1.a;
+INFO:  Path param info: 130.000000
+INFO:  Path param info: 0.000000
  a  | c | a | c 
 ----+---+---+---
  -1 |   |   | 
@@ -4782,6 +5284,9 @@
 -- '0001' of that partition
 EXPLAIN (COSTS OFF)
 SELECT t1.a, t1.c, t2.a, t2.c, t3.a, t3.c FROM (plt1_adv t1 LEFT JOIN plt2_adv t2 ON (t1.c = t2.c)) FULL JOIN plt3_adv t3 ON (t1.c = t3.c) WHERE coalesce(t1.a, 0) % 5 != 3 AND coalesce(t1.a, 0) % 5 != 4 ORDER BY t1.c, t1.a, t2.a, t3.a;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                           QUERY PLAN                                           
 -----------------------------------------------------------------------------------------------
  Sort
@@ -4810,6 +5315,9 @@
 (23 rows)
 
 SELECT t1.a, t1.c, t2.a, t2.c, t3.a, t3.c FROM (plt1_adv t1 LEFT JOIN plt2_adv t2 ON (t1.c = t2.c)) FULL JOIN plt3_adv t3 ON (t1.c = t3.c) WHERE coalesce(t1.a, 0) % 5 != 3 AND coalesce(t1.a, 0) % 5 != 4 ORDER BY t1.c, t1.a, t2.a, t3.a;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  a  |  c   | a  |  c   | a  |  c   
 ----+------+----+------+----+------
   0 | 0000 |    |      |    | 
@@ -4903,6 +5411,8 @@
 ANALYZE beta;
 EXPLAIN (COSTS OFF)
 SELECT t1.*, t2.* FROM alpha t1 INNER JOIN beta t2 ON (t1.a = t2.a AND t1.b = t2.b) WHERE t1.b >= 125 AND t1.b < 225 ORDER BY t1.a, t1.b;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                              QUERY PLAN                             
 --------------------------------------------------------------------
  Sort
@@ -4937,6 +5447,8 @@
 (29 rows)
 
 SELECT t1.*, t2.* FROM alpha t1 INNER JOIN beta t2 ON (t1.a = t2.a AND t1.b = t2.b) WHERE t1.b >= 125 AND t1.b < 225 ORDER BY t1.a, t1.b;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  a  |  b  |  c   | a  |  b  |  c   
 ----+-----+------+----+-----+------
  -1 | 126 | 0006 | -1 | 126 | 0006
@@ -4983,6 +5495,9 @@
 
 EXPLAIN (COSTS OFF)
 SELECT t1.*, t2.* FROM alpha t1 INNER JOIN beta t2 ON (t1.a = t2.a AND t1.c = t2.c) WHERE ((t1.b >= 100 AND t1.b < 110) OR (t1.b >= 200 AND t1.b < 210)) AND ((t2.b >= 100 AND t2.b < 110) OR (t2.b >= 200 AND t2.b < 210)) AND t1.c IN ('0004', '0009') ORDER BY t1.a, t1.b, t2.b;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                                               QUERY PLAN                                                              
 --------------------------------------------------------------------------------------------------------------------------------------
  Sort
@@ -5016,6 +5531,9 @@
 (28 rows)
 
 SELECT t1.*, t2.* FROM alpha t1 INNER JOIN beta t2 ON (t1.a = t2.a AND t1.c = t2.c) WHERE ((t1.b >= 100 AND t1.b < 110) OR (t1.b >= 200 AND t1.b < 210)) AND ((t2.b >= 100 AND t2.b < 110) OR (t2.b >= 200 AND t2.b < 210)) AND t1.c IN ('0004', '0009') ORDER BY t1.a, t1.b, t2.b;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  a  |  b  |  c   | a  |  b  |  c   
 ----+-----+------+----+-----+------
  -1 | 104 | 0004 | -1 | 104 | 0004
@@ -5038,6 +5556,8 @@
 
 EXPLAIN (COSTS OFF)
 SELECT t1.*, t2.* FROM alpha t1 INNER JOIN beta t2 ON (t1.a = t2.a AND t1.b = t2.b AND t1.c = t2.c) WHERE ((t1.b >= 100 AND t1.b < 110) OR (t1.b >= 200 AND t1.b < 210)) AND ((t2.b >= 100 AND t2.b < 110) OR (t2.b >= 200 AND t2.b < 210)) AND t1.c IN ('0004', '0009') ORDER BY t1.a, t1.b;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                                            QUERY PLAN                                                           
 --------------------------------------------------------------------------------------------------------------------------------
  Sort
@@ -5072,6 +5592,8 @@
 (29 rows)
 
 SELECT t1.*, t2.* FROM alpha t1 INNER JOIN beta t2 ON (t1.a = t2.a AND t1.b = t2.b AND t1.c = t2.c) WHERE ((t1.b >= 100 AND t1.b < 110) OR (t1.b >= 200 AND t1.b < 210)) AND ((t2.b >= 100 AND t2.b < 110) OR (t2.b >= 200 AND t2.b < 210)) AND t1.c IN ('0004', '0009') ORDER BY t1.a, t1.b;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  a  |  b  |  c   | a  |  b  |  c   
 ----+-----+------+----+-----+------
  -1 | 104 | 0004 | -1 | 104 | 0004
@@ -5096,6 +5618,12 @@
 SET enable_partitionwise_join = on;
 EXPLAIN (COSTS OFF)
 SELECT x.id, y.id FROM fract_t x LEFT JOIN fract_t y USING (id) ORDER BY x.id ASC LIMIT 10;
+INFO:  Path param info: -1.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                               QUERY PLAN                               
 -----------------------------------------------------------------------
  Limit
@@ -5113,6 +5641,12 @@
 
 EXPLAIN (COSTS OFF)
 SELECT x.id, y.id FROM fract_t x LEFT JOIN fract_t y USING (id) ORDER BY x.id DESC LIMIT 10;
+INFO:  Path param info: -1.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                    QUERY PLAN                                   
 --------------------------------------------------------------------------------
  Limit
diff -U3 /home/dbs/pg-queryplans/postgres/src/test/regress/expected/partition_prune.out /home/dbs/pg-queryplans/postgres/src/test/regress/results/partition_prune.out
--- /home/dbs/pg-queryplans/postgres/src/test/regress/expected/partition_prune.out	2024-02-20 13:16:25.967611274 +0900
+++ /home/dbs/pg-queryplans/postgres/src/test/regress/results/partition_prune.out	2024-02-20 16:07:35.507971782 +0900
@@ -1489,6 +1489,7 @@
 --
 -- pruning won't work for mc3p, because some keys are Params
 explain (costs off) select * from mc2p t1, lateral (select count(*) from mc3p t2 where t2.a = t1.b and abs(t2.b) = 1 and t2.c = 1) s where t1.a = 1;
+INFO:  Path param info: 0.000000
                               QUERY PLAN                               
 -----------------------------------------------------------------------
  Nested Loop
@@ -1524,6 +1525,7 @@
 -- pruning should work fine, because values for a prefix of keys (a, b) are
 -- available
 explain (costs off) select * from mc2p t1, lateral (select count(*) from mc3p t2 where t2.c = t1.b and abs(t2.b) = 1 and t2.a = 1) s where t1.a = 1;
+INFO:  Path param info: 0.000000
                               QUERY PLAN                               
 -----------------------------------------------------------------------
  Nested Loop
@@ -1546,6 +1548,7 @@
 
 -- also here, because values for all keys are provided
 explain (costs off) select * from mc2p t1, lateral (select count(*) from mc3p t2 where t2.a = 1 and abs(t2.b) = 1 and t2.c = 1) s where t1.a = 1;
+INFO:  Path param info: 0.000000
                           QUERY PLAN                          
 --------------------------------------------------------------
  Nested Loop
@@ -2312,6 +2315,7 @@
 set enable_mergejoin = 0;
 set enable_memoize = 0;
 select explain_parallel_append('select avg(ab.a) from ab inner join lprt_a a on ab.a = a.a where a.a in(0, 0, 1)');
+INFO:  Path param info: 0.000000
                                         explain_parallel_append                                         
 --------------------------------------------------------------------------------------------------------
  Finalize Aggregate (actual rows=N loops=N)
@@ -2346,6 +2350,7 @@
 -- Ensure the same partitions are pruned when we make the nested loop
 -- parameter an Expr rather than a plain Param.
 select explain_parallel_append('select avg(ab.a) from ab inner join lprt_a a on ab.a = a.a + 0 where a.a in(0, 0, 1)');
+INFO:  Path param info: 0.000000
                                         explain_parallel_append                                         
 --------------------------------------------------------------------------------------------------------
  Finalize Aggregate (actual rows=N loops=N)
@@ -2379,6 +2384,7 @@
 
 insert into lprt_a values(3),(3);
 select explain_parallel_append('select avg(ab.a) from ab inner join lprt_a a on ab.a = a.a where a.a in(1, 0, 3)');
+INFO:  Path param info: 0.000000
                                         explain_parallel_append                                         
 --------------------------------------------------------------------------------------------------------
  Finalize Aggregate (actual rows=N loops=N)
@@ -2411,6 +2417,7 @@
 (27 rows)
 
 select explain_parallel_append('select avg(ab.a) from ab inner join lprt_a a on ab.a = a.a where a.a in(1, 0, 0)');
+INFO:  Path param info: 0.000000
                                         explain_parallel_append                                         
 --------------------------------------------------------------------------------------------------------
  Finalize Aggregate (actual rows=N loops=N)
@@ -2445,6 +2452,7 @@
 
 delete from lprt_a where a = 1;
 select explain_parallel_append('select avg(ab.a) from ab inner join lprt_a a on ab.a = a.a where a.a in(1, 0, 0)');
+INFO:  Path param info: 0.000000
                                      explain_parallel_append                                     
 -------------------------------------------------------------------------------------------------
  Finalize Aggregate (actual rows=N loops=N)
@@ -2690,6 +2698,7 @@
 insert into ab values (1,2);
 explain (analyze, costs off, summary off, timing off)
 update ab_a1 set b = 3 from ab where ab.a = 1 and ab.a = ab_a1.a;
+INFO:  Path param info: 0.000000
                                         QUERY PLAN                                         
 -------------------------------------------------------------------------------------------
  Update on ab_a1 (actual rows=0 loops=1)
@@ -2739,6 +2748,7 @@
 insert into ab values (1, 1), (1, 2), (1, 3), (2, 1);
 explain (analyze, costs off, summary off, timing off)
 update ab_a1 set b = 3 from ab_a2 where ab_a2.b = (select 1);
+INFO:  Path param info: 0.000000
                                   QUERY PLAN                                  
 ------------------------------------------------------------------------------
  Update on ab_a1 (actual rows=0 loops=1)
@@ -2794,6 +2804,7 @@
 set enable_mergejoin = off;
 explain (analyze, costs off, summary off, timing off)
 select * from tbl1 join tprt on tbl1.col1 > tprt.col1;
+INFO:  Path param info: 0.000000
                                 QUERY PLAN                                
 --------------------------------------------------------------------------
  Nested Loop (actual rows=6 loops=1)
@@ -2815,6 +2826,7 @@
 
 explain (analyze, costs off, summary off, timing off)
 select * from tbl1 join tprt on tbl1.col1 = tprt.col1;
+INFO:  Path param info: 0.000000
                                 QUERY PLAN                                
 --------------------------------------------------------------------------
  Nested Loop (actual rows=2 loops=1)
@@ -2837,6 +2849,7 @@
 select tbl1.col1, tprt.col1 from tbl1
 inner join tprt on tbl1.col1 > tprt.col1
 order by tbl1.col1, tprt.col1;
+INFO:  Path param info: 0.000000
  col1 | col1 
 ------+------
   501 |   10
@@ -2850,6 +2863,8 @@
 select tbl1.col1, tprt.col1 from tbl1
 inner join tprt on tbl1.col1 = tprt.col1
 order by tbl1.col1, tprt.col1;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  col1 | col1 
 ------+------
   501 |  501
@@ -2860,6 +2875,7 @@
 insert into tbl1 values (1001), (1010), (1011);
 explain (analyze, costs off, summary off, timing off)
 select * from tbl1 inner join tprt on tbl1.col1 > tprt.col1;
+INFO:  Path param info: 0.000000
                                 QUERY PLAN                                
 --------------------------------------------------------------------------
  Nested Loop (actual rows=23 loops=1)
@@ -2881,6 +2897,7 @@
 
 explain (analyze, costs off, summary off, timing off)
 select * from tbl1 inner join tprt on tbl1.col1 = tprt.col1;
+INFO:  Path param info: 0.000000
                                 QUERY PLAN                                
 --------------------------------------------------------------------------
  Nested Loop (actual rows=3 loops=1)
@@ -2903,6 +2920,7 @@
 select tbl1.col1, tprt.col1 from tbl1
 inner join tprt on tbl1.col1 > tprt.col1
 order by tbl1.col1, tprt.col1;
+INFO:  Path param info: 0.000000
  col1 | col1 
 ------+------
   501 |   10
@@ -2933,6 +2951,8 @@
 select tbl1.col1, tprt.col1 from tbl1
 inner join tprt on tbl1.col1 = tprt.col1
 order by tbl1.col1, tprt.col1;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  col1 | col1 
 ------+------
   501 |  501
@@ -2945,6 +2965,7 @@
 insert into tbl1 values (4400);
 explain (analyze, costs off, summary off, timing off)
 select * from tbl1 join tprt on tbl1.col1 < tprt.col1;
+INFO:  Path param info: 0.000000
                                 QUERY PLAN                                
 --------------------------------------------------------------------------
  Nested Loop (actual rows=1 loops=1)
@@ -2967,6 +2988,7 @@
 select tbl1.col1, tprt.col1 from tbl1
 inner join tprt on tbl1.col1 < tprt.col1
 order by tbl1.col1, tprt.col1;
+INFO:  Path param info: 0.000000
  col1 | col1 
 ------+------
  4400 | 4500
@@ -2977,6 +2999,7 @@
 insert into tbl1 values (10000);
 explain (analyze, costs off, summary off, timing off)
 select * from tbl1 join tprt on tbl1.col1 = tprt.col1;
+INFO:  Path param info: 0.000000
                             QUERY PLAN                             
 -------------------------------------------------------------------
  Nested Loop (actual rows=0 loops=1)
@@ -2999,6 +3022,8 @@
 select tbl1.col1, tprt.col1 from tbl1
 inner join tprt on tbl1.col1 = tprt.col1
 order by tbl1.col1, tprt.col1;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  col1 | col1 
 ------+------
 (0 rows)
@@ -4080,6 +4105,17 @@
   generate_series(0,1) b,
   generate_Series(0,1) c,
   generate_Series(0,1) d;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
 -- Ensure partition pruning works correctly for each combination of IS NULL
 -- and equality quals.  This may seem a little excessive, but there have been
 -- a number of bugs in this area over the years.  We make use of row only
@@ -4091,6 +4127,7 @@
 from (values('a',0),('b',1),('c',2),('d',3)) c(colname, colpos), generate_Series(0,15) g(s)
 group by g.s
 order by g.s;
+INFO:  Path param info: 0.000000
  explain (costs off) select tableoid::regclass,* from hp_prefix_test where a is null and b is null and c is null and d is null
  explain (costs off) select tableoid::regclass,* from hp_prefix_test where a = 1 and b is null and c is null and d is null
  explain (costs off) select tableoid::regclass,* from hp_prefix_test where a is null and b = 2 and c is null and d is null
@@ -4109,6 +4146,7 @@
  explain (costs off) select tableoid::regclass,* from hp_prefix_test where a = 1 and b = 2 and c = 3 and d = 4
 
 \gexec
+INFO:  Path param info: 0.000000
 explain (costs off) select tableoid::regclass,* from hp_prefix_test where a is null and b is null and c is null and d is null
  Seq Scan on hp_prefix_test_p0 hp_prefix_test
    Filter: ((a IS NULL) AND (b IS NULL) AND (c IS NULL) AND (d IS NULL))
@@ -4180,6 +4218,7 @@
 from (values('a',0),('b',1),('c',2),('d',3)) c(colname, colpos), generate_Series(0,15) g(s)
 group by g.s
 order by g.s;
+INFO:  Path param info: 0.000000
  select tableoid::regclass,* from hp_prefix_test where a is null and b is null and c is null and d is null
  select tableoid::regclass,* from hp_prefix_test where a = 1 and b is null and c is null and d is null
  select tableoid::regclass,* from hp_prefix_test where a is null and b = 2 and c is null and d is null
@@ -4198,6 +4237,7 @@
  select tableoid::regclass,* from hp_prefix_test where a = 1 and b = 2 and c = 3 and d = 4
 
 \gexec
+INFO:  Path param info: 0.000000
 select tableoid::regclass,* from hp_prefix_test where a is null and b is null and c is null and d is null
  hp_prefix_test_p0 |   |   |   |  
 
diff -U3 /home/dbs/pg-queryplans/postgres/src/test/regress/expected/indexing.out /home/dbs/pg-queryplans/postgres/src/test/regress/results/indexing.out
--- /home/dbs/pg-queryplans/postgres/src/test/regress/expected/indexing.out	2024-02-20 13:16:25.959611416 +0900
+++ /home/dbs/pg-queryplans/postgres/src/test/regress/results/indexing.out	2024-02-20 16:07:35.495971957 +0900
@@ -12,6 +12,11 @@
 
 -- Check that partitioned indexes are present in pg_indexes.
 select indexdef from pg_indexes where indexname like 'idxpart_idx%';
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                             indexdef                             
 -----------------------------------------------------------------
  CREATE INDEX idxpart_idx ON ONLY public.idxpart USING btree (a)
@@ -37,6 +42,11 @@
     from pg_class left join pg_index ix on (indexrelid = oid)
 	left join pg_inherits on (ix.indexrelid = inhrelid)
 	where relname like 'idxpart%' order by relname;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
      relname     | relkind | relhassubclass |   inhparent    
 -----------------+---------+----------------+----------------
  idxpart         | p       | t              | 
@@ -62,6 +72,7 @@
 CREATE INDEX ON idxpart (col1);
 CREATE TABLE idxpart_two (col2 INT);
 SELECT col2 FROM idxpart_two fk LEFT OUTER JOIN idxpart pk ON (col1 = col2);
+INFO:  Path param info: 0.000000
  col2 
 ------
 (0 rows)
@@ -82,6 +93,23 @@
 create index idxparti2 on idxpart (b, c);
 create table idxpart1 (like idxpart);
 \d idxpart1
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
               Table "public.idxpart1"
  Column |  Type   | Collation | Nullable | Default 
 --------+---------+-----------+----------+---------
@@ -91,6 +119,36 @@
 
 alter table idxpart attach partition idxpart1 for values from (0) to (10);
 \d idxpart1
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
               Table "public.idxpart1"
  Column |  Type   | Collation | Nullable | Default 
 --------+---------+-----------+----------+---------
@@ -103,6 +161,19 @@
     "idxpart1_b_c_idx" btree (b, c)
 
 \d+ idxpart1_a_idx
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                  Index "public.idxpart1_a_idx"
  Column |  Type   | Key? | Definition | Storage | Stats target 
 --------+---------+------+------------+---------+--------------
@@ -112,6 +183,19 @@
 btree, for table "public.idxpart1"
 
 \d+ idxpart1_b_c_idx
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                 Index "public.idxpart1_b_c_idx"
  Column |  Type   | Key? | Definition | Storage  | Stats target 
 --------+---------+------+------------+----------+--------------
@@ -146,6 +230,36 @@
 create index on idxpart1 (a, b);
 create index on idxpart (a, b);
 \d idxpart1
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
               Table "public.idxpart1"
  Column |  Type   | Collation | Nullable | Default 
 --------+---------+-----------+----------+---------
@@ -159,6 +273,11 @@
     from pg_class left join pg_index ix on (indexrelid = oid)
 	left join pg_inherits on (ix.indexrelid = inhrelid)
 	where relname like 'idxpart%' order by relname;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
      relname      | relkind | relhassubclass |    inhparent    
 ------------------+---------+----------------+-----------------
  idxpart          | p       | t              | 
@@ -267,6 +386,36 @@
 create index on idxpart (a);
 alter table idxpart attach partition idxpart1 for values from (0) to (1000);
 \d idxpart1
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
               Table "public.idxpart1"
  Column |  Type   | Collation | Nullable | Default 
 --------+---------+-----------+----------+---------
@@ -296,6 +445,36 @@
 -- Here we expect that idxpart1 and idxpart2 have a new index, but idxpart21
 -- does not; also, idxpart22 is not attached.
 \d idxpart1
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
               Table "public.idxpart1"
  Column |  Type   | Collation | Nullable | Default 
 --------+---------+-----------+----------+---------
@@ -305,6 +484,39 @@
     "idxpart1_a_idx" btree (a)
 
 \d idxpart2
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
         Partitioned table "public.idxpart2"
  Column |  Type   | Collation | Nullable | Default 
 --------+---------+-----------+----------+---------
@@ -316,6 +528,24 @@
 Number of partitions: 2 (Use \d+ to list them.)
 
 \d idxpart21
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
              Table "public.idxpart21"
  Column |  Type   | Collation | Nullable | Default 
 --------+---------+-----------+----------+---------
@@ -326,6 +556,7 @@
   from pg_index idx left join pg_inherits inh on (idx.indexrelid = inh.inhrelid)
 where indexrelid::regclass::text like 'idxpart%'
   order by indexrelid::regclass::text collate "C";
+INFO:  Path param info: 0.000000
    indexrelid    | indrelid  |   inhparent   
 -----------------+-----------+---------------
  idxpart1_a_idx  | idxpart1  | idxpart_a_idx
@@ -339,6 +570,7 @@
   from pg_index idx left join pg_inherits inh on (idx.indexrelid = inh.inhrelid)
 where indexrelid::regclass::text like 'idxpart%'
   order by indexrelid::regclass::text collate "C";
+INFO:  Path param info: 0.000000
    indexrelid    | indrelid  |   inhparent    
 -----------------+-----------+----------------
  idxpart1_a_idx  | idxpart1  | idxpart_a_idx
@@ -350,6 +582,39 @@
 -- attaching idxpart22 is not enough to set idxpart22_a_idx valid ...
 alter index idxpart2_a_idx attach partition idxpart22_a_idx;
 \d idxpart2
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
         Partitioned table "public.idxpart2"
  Column |  Type   | Collation | Nullable | Default 
 --------+---------+-----------+----------+---------
@@ -364,6 +629,39 @@
 create index on idxpart21 (a);
 alter index idxpart2_a_idx attach partition idxpart21_a_idx;
 \d idxpart2
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
         Partitioned table "public.idxpart2"
  Column |  Type   | Collation | Nullable | Default 
 --------+---------+-----------+----------+---------
@@ -383,6 +681,35 @@
 create index idxparti2 on idxpart (b, c);
 create table idxpart1 (like idxpart including indexes);
 \d idxpart1
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
               Table "public.idxpart1"
  Column |  Type   | Collation | Nullable | Default 
 --------+---------+-----------+----------+---------
@@ -398,6 +725,11 @@
     from pg_class left join pg_index ix on (indexrelid = oid)
 	left join pg_inherits on (ix.indexrelid = inhrelid)
 	where relname like 'idxpart%' order by relname;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
      relname      | relkind | inhparent 
 ------------------+---------+-----------
  idxpart          | p       | 
@@ -410,6 +742,36 @@
 
 alter table idxpart attach partition idxpart1 for values from (0) to (10);
 \d idxpart1
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
               Table "public.idxpart1"
  Column |  Type   | Collation | Nullable | Default 
 --------+---------+-----------+----------+---------
@@ -426,6 +788,11 @@
     from pg_class left join pg_index ix on (indexrelid = oid)
 	left join pg_inherits on (ix.indexrelid = inhrelid)
 	where relname like 'idxpart%' order by relname;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
      relname      | relkind | inhparent 
 ------------------+---------+-----------
  idxpart          | p       | 
@@ -439,6 +806,36 @@
 -- While here, also check matching when creating an index after the fact.
 create index on idxpart1 ((a+b)) where d = true;
 \d idxpart1
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
               Table "public.idxpart1"
  Column |  Type   | Collation | Nullable | Default 
 --------+---------+-----------+----------+---------
@@ -456,6 +853,11 @@
     from pg_class left join pg_index ix on (indexrelid = oid)
 	left join pg_inherits on (ix.indexrelid = inhrelid)
 	where relname like 'idxpart%' order by relname;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
       relname      | relkind | inhparent 
 -------------------+---------+-----------
  idxpart           | p       | 
@@ -469,6 +871,36 @@
 
 create index idxparti3 on idxpart ((a+b)) where d = true;
 \d idxpart1
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
               Table "public.idxpart1"
  Column |  Type   | Collation | Nullable | Default 
 --------+---------+-----------+----------+---------
@@ -486,6 +918,11 @@
     from pg_class left join pg_index ix on (indexrelid = oid)
 	left join pg_inherits on (ix.indexrelid = inhrelid)
 	where relname like 'idxpart%' order by relname;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
       relname      | relkind | inhparent 
 -------------------+---------+-----------
  idxpart           | p       | 
@@ -511,6 +948,7 @@
 -- this results in two invalid indexes:
 select relname, indisvalid from pg_class join pg_index on indexrelid = oid
    where relname like 'idxpart%' order by relname;
+INFO:  Path param info: 0.000000
     relname     | indisvalid 
 ----------------+------------
  idxpart1_a_idx | f
@@ -521,6 +959,7 @@
 alter index idxpart_a_idx attach partition idxpart1_a_idx;
 select relname, indisvalid from pg_class join pg_index on indexrelid = oid
    where relname like 'idxpart%' order by relname;
+INFO:  Path param info: 0.000000
     relname     | indisvalid 
 ----------------+------------
  idxpart1_a_idx | f
@@ -533,6 +972,7 @@
 alter index idxpart1_a_idx attach partition idxpart11_a_idx;
 select relname, indisvalid from pg_class join pg_index on indexrelid = oid
    where relname like 'idxpart%' order by relname;
+INFO:  Path param info: 0.000000
      relname     | indisvalid 
 -----------------+------------
  idxpart11_a_idx | t
@@ -636,6 +1076,35 @@
 create table idxpart2 partition of idxpart for values from (250) to (500);
 alter table idxpart detach partition idxpart2;
 \d idxpart2
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
               Table "public.idxpart2"
  Column |  Type   | Collation | Nullable | Default 
 --------+---------+-----------+----------+---------
@@ -647,6 +1116,35 @@
 
 alter table idxpart2 drop column c;
 \d idxpart2
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
               Table "public.idxpart2"
  Column |  Type   | Collation | Nullable | Default 
 --------+---------+-----------+----------+---------
@@ -667,6 +1165,12 @@
   from pg_class join pg_inherits on inhrelid = oid,
   lateral pg_get_indexdef(pg_class.oid)
   where relkind in ('i', 'I') and relname like 'idxpart%' order by relname;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
        child       |      parent      |                                 childdef                                  
 -------------------+------------------+---------------------------------------------------------------------------
  idxpart1_expr_idx | idxpart_expr_idx | CREATE INDEX idxpart1_expr_idx ON public.idxpart1 USING btree (((a + b)))
@@ -691,6 +1195,12 @@
   from pg_class left join pg_inherits on inhrelid = oid,
   lateral pg_get_indexdef(pg_class.oid)
   where relkind in ('i', 'I') and relname like 'idxpart%' order by relname;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
       child      |    parent     |                                    childdef                                    
 -----------------+---------------+--------------------------------------------------------------------------------
  idxpart1_a_idx  | idxpart_a_idx | CREATE INDEX idxpart1_a_idx ON public.idxpart1 USING btree (a COLLATE "C")
@@ -718,6 +1228,12 @@
   from pg_class left join pg_inherits on inhrelid = oid,
   lateral pg_get_indexdef(pg_class.oid)
   where relkind in ('i', 'I') and relname like 'idxpart%' order by relname;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
       child      |    parent     |                                      childdef                                      
 -----------------+---------------+------------------------------------------------------------------------------------
  idxpart1_a_idx  | idxpart_a_idx | CREATE INDEX idxpart1_a_idx ON public.idxpart1 USING btree (a text_pattern_ops)
@@ -764,6 +1280,12 @@
   from pg_class left join pg_inherits on inhrelid = oid,
   lateral pg_get_indexdef(pg_class.oid)
   where relkind in ('i', 'I') and relname like 'idxpart%' order by relname;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
       child      |    parent     |                                        childdef                                         
 -----------------+---------------+-----------------------------------------------------------------------------------------
  idxpart1_1_idx  | idxpart_1_idx | CREATE INDEX idxpart1_1_idx ON public.idxpart1 USING btree (b, a)
@@ -790,6 +1312,7 @@
   from pg_class c join pg_index i on c.oid = i.indexrelid
   where indrelid::regclass::text like 'idxpart%'
   order by indexrelid::regclass::text collate "C";
+INFO:  Path param info: 0.000000
      relname      |                           pg_get_indexdef                           
 ------------------+---------------------------------------------------------------------
  idxpart1_a_idx   | CREATE INDEX idxpart1_a_idx ON public.idxpart1 USING btree (a)
@@ -817,6 +1340,7 @@
   from pg_class c join pg_index i on c.oid = i.indexrelid
   where indrelid::regclass::text like 'idxpart%'
   order by indexrelid::regclass::text collate "C";
+INFO:  Path param info: 0.000000
       relname      |                               pg_get_indexdef                                
 -------------------+------------------------------------------------------------------------------
  idxpart1_abs_idx  | CREATE INDEX idxpart1_abs_idx ON public.idxpart1 USING btree (abs(b))
@@ -843,6 +1367,7 @@
   from pg_class c join pg_index i on c.oid = i.indexrelid
   where indrelid::regclass::text like 'idxpart%'
   order by indexrelid::regclass::text collate "C";
+INFO:  Path param info: 0.000000
     relname     |                                  pg_get_indexdef                                   
 ----------------+------------------------------------------------------------------------------------
  idxpart1_a_idx | CREATE INDEX idxpart1_a_idx ON public.idxpart1 USING btree (a) WHERE (b > 1000)
@@ -861,6 +1386,38 @@
 create index on idxpart (col_keep);
 alter table idxpart attach partition idxpart1 for values from (0) to (1000);
 \d idxpart
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
          Partitioned table "public.idxpart"
   Column  |  Type   | Collation | Nullable | Default 
 ----------+---------+-----------+----------+---------
@@ -871,6 +1428,36 @@
 Number of partitions: 1 (Use \d+ to list them.)
 
 \d idxpart1
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                Table "public.idxpart1"
   Column  |  Type   | Collation | Nullable | Default 
 ----------+---------+-----------+----------+---------
@@ -904,6 +1491,38 @@
 create index on idxpart (col_keep);
 alter table idxpart attach partition idxpart1 for values from (0) to (1000);
 \d idxpart
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
          Partitioned table "public.idxpart"
   Column  |  Type   | Collation | Nullable | Default 
 ----------+---------+-----------+----------+---------
@@ -914,6 +1533,36 @@
 Number of partitions: 1 (Use \d+ to list them.)
 
 \d idxpart1
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                Table "public.idxpart1"
   Column  |  Type   | Collation | Nullable | Default 
 ----------+---------+-----------+----------+---------
@@ -943,6 +1592,38 @@
 -- Verify that it works to add primary key / unique to partitioned tables
 create table idxpart (a int primary key, b int) partition by range (a);
 \d idxpart
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
         Partitioned table "public.idxpart"
  Column |  Type   | Collation | Nullable | Default 
 --------+---------+-----------+----------+---------
@@ -961,6 +1642,36 @@
 create table idxpart (a int) partition by range (a);
 create table idxpart1pk partition of idxpart (a primary key) for values from (0) to (100);
 \d idxpart1pk
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
              Table "public.idxpart1pk"
  Column |  Type   | Collation | Nullable | Default 
 --------+---------+-----------+----------+---------
@@ -1005,6 +1716,38 @@
 DETAIL:  PRIMARY KEY constraint on table "idxpart" lacks column "b" which is part of the partition key.
 alter table idxpart add primary key (a, b);	-- this works
 \d idxpart
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
         Partitioned table "public.idxpart"
  Column |  Type   | Collation | Nullable | Default 
 --------+---------+-----------+----------+---------
@@ -1018,6 +1761,36 @@
 
 create table idxpart1 partition of idxpart for values from (0, 0) to (1000, 1000);
 \d idxpart1
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
               Table "public.idxpart1"
  Column |  Type   | Collation | Nullable | Default 
 --------+---------+-----------+----------+---------
@@ -1036,6 +1809,38 @@
 DETAIL:  UNIQUE constraint on table "idxpart" lacks column "b" which is part of the partition key.
 alter table idxpart add unique (b, a);		-- this works
 \d idxpart
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
         Partitioned table "public.idxpart"
  Column |  Type   | Collation | Nullable | Default 
 --------+---------+-----------+----------+---------
@@ -1123,6 +1928,11 @@
   left join pg_constraint con on (idx.indexrelid = con.conindid)
   where indrelid::regclass::text like 'idxpart%'
   order by indexrelid::regclass::text collate "C";
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  indrelid |  indexrelid   |  inhparent   | indisvalid |    conname    | conislocal | coninhcount | connoinherit | convalidated 
 ----------+---------------+--------------+------------+---------------+------------+-------------+--------------+--------------
  idxpart0 | idxpart0_pkey | idxpart_pkey | t          | idxpart0_pkey | f          |           1 | t            | t
@@ -1147,6 +1957,11 @@
   left join pg_constraint con on (idx.indexrelid = con.conindid)
   where indrelid::regclass::text like 'idxpart%'
   order by indexrelid::regclass::text collate "C";
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  indrelid | indexrelid | inhparent | indisvalid | conname | conislocal | coninhcount | connoinherit | convalidated 
 ----------+------------+-----------+------------+---------+------------+-------------+--------------+--------------
 (0 rows)
@@ -1181,6 +1996,11 @@
   left join pg_constraint con on (idx.indexrelid = con.conindid)
   where indrelid::regclass::text like 'idxpart%'
   order by indexrelid::regclass::text collate "C";
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  indrelid |  indexrelid   | inhparent | indisvalid |    conname    | conislocal | coninhcount | connoinherit | convalidated 
 ----------+---------------+-----------+------------+---------------+------------+-------------+--------------+--------------
  idxpart0 | idxpart0_pkey |           | t          | idxpart0_pkey | t          |           0 | t            | t
@@ -1194,6 +2014,11 @@
   left join pg_constraint con on (idx.indexrelid = con.conindid)
   where indrelid::regclass::text like 'idxpart%'
   order by indexrelid::regclass::text collate "C";
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  indrelid |  indexrelid   |  inhparent   | indisvalid |    conname    | conislocal | coninhcount | connoinherit | convalidated 
 ----------+---------------+--------------+------------+---------------+------------+-------------+--------------+--------------
  idxpart0 | idxpart0_pkey | idxpart_pkey | t          | idxpart0_pkey | f          |           1 | t            | t
@@ -1229,6 +2054,11 @@
   left join pg_constraint con on (idx.indexrelid = con.conindid)
   where indrelid::regclass::text like 'idxpart%'
   order by indexrelid::regclass::text collate "C";
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  indrelid |   indexrelid   |  inhparent   | indisvalid |    conname    | conislocal | coninhcount | connoinherit | convalidated 
 ----------+----------------+--------------+------------+---------------+------------+-------------+--------------+--------------
  idxpart1 | idxpart1_a_idx |              | t          |               |            |             |              | 
@@ -1415,6 +2245,38 @@
 create index on parted_index_col_drop (b, c);
 alter table parted_index_col_drop drop column c;
 \d parted_index_col_drop
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  Partitioned table "public.parted_index_col_drop"
  Column |  Type   | Collation | Nullable | Default 
 --------+---------+-----------+----------+---------
@@ -1426,6 +2288,39 @@
 Number of partitions: 2 (Use \d+ to list them.)
 
 \d parted_index_col_drop1
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  Partitioned table "public.parted_index_col_drop1"
  Column |  Type   | Collation | Nullable | Default 
 --------+---------+-----------+----------+---------
@@ -1438,6 +2333,39 @@
 Number of partitions: 1 (Use \d+ to list them.)
 
 \d parted_index_col_drop2
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  Partitioned table "public.parted_index_col_drop2"
  Column |  Type   | Collation | Nullable | Default 
 --------+---------+-----------+----------+---------
@@ -1450,6 +2378,36 @@
 Number of partitions: 0
 
 \d parted_index_col_drop11
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
       Table "public.parted_index_col_drop11"
  Column |  Type   | Collation | Nullable | Default 
 --------+---------+-----------+----------+---------
@@ -1480,6 +2438,7 @@
        pg_inherits inh on (idx.indexrelid = inh.inhrelid)
   where indexrelid::regclass::text like 'parted_inval%'
   order by indexrelid::regclass::text collate "C";
+INFO:  Path param info: 0.000000
          indexrelid         | indisvalid |       indrelid       |        inhparent         
 ----------------------------+------------+----------------------+--------------------------
  parted_inval_idx           | t          | parted_inval_tab     | 
@@ -1515,6 +2474,7 @@
        pg_inherits inh on (idx.indexrelid = inh.inhrelid)
   where indexrelid::regclass::text like 'parted_isvalid%'
   order by indexrelid::regclass::text collate "C";
+INFO:  Path param info: 0.000000
            indexrelid           | indisvalid |       indrelid        |           inhparent           
 --------------------------------+------------+-----------------------+-------------------------------
  parted_isvalid_idx             | f          | parted_isvalid_tab    | 
@@ -1546,6 +2506,7 @@
        pg_inherits inh on (idx.indexrelid = inh.inhrelid)
   where indexrelid::regclass::text like 'parted_replica%'
   order by indexrelid::regclass::text collate "C";
+INFO:  Path param info: 0.000000
       indexrelid       | indisvalid | indisreplident |       indrelid        | inhparent 
 -----------------------+------------+----------------+-----------------------+-----------
  parted_replica_idx    | f          | f              | parted_replica_tab    | 
@@ -1562,6 +2523,7 @@
        pg_inherits inh on (idx.indexrelid = inh.inhrelid)
   where indexrelid::regclass::text like 'parted_replica%'
   order by indexrelid::regclass::text collate "C";
+INFO:  Path param info: 0.000000
       indexrelid       | indisvalid | indisreplident |       indrelid        |     inhparent      
 -----------------------+------------+----------------+-----------------------+--------------------
  parted_replica_idx    | f          | f              | parted_replica_tab    | 
@@ -1580,6 +2542,7 @@
        pg_inherits inh on (idx.indexrelid = inh.inhrelid)
   where indexrelid::regclass::text like 'parted_replica%'
   order by indexrelid::regclass::text collate "C";
+INFO:  Path param info: 0.000000
       indexrelid       | indisvalid | indisreplident |       indrelid        |      inhparent       
 -----------------------+------------+----------------+-----------------------+----------------------
  parted_replica_idx    | t          | f              | parted_replica_tab    | 
diff -U3 /home/dbs/pg-queryplans/postgres/src/test/regress/expected/partition_aggregate.out /home/dbs/pg-queryplans/postgres/src/test/regress/results/partition_aggregate.out
--- /home/dbs/pg-queryplans/postgres/src/test/regress/expected/partition_aggregate.out	2024-02-20 13:16:25.967611274 +0900
+++ /home/dbs/pg-queryplans/postgres/src/test/regress/results/partition_aggregate.out	2024-02-20 16:07:35.503971840 +0900
@@ -415,6 +415,8 @@
 -- When GROUP BY clause matches; full aggregation is performed for each partition.
 EXPLAIN (COSTS OFF)
 SELECT t1.x, sum(t1.y), count(*) FROM pagg_tab1 t1, pagg_tab2 t2 WHERE t1.x = t2.y GROUP BY t1.x ORDER BY 1, 2, 3;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                          QUERY PLAN                          
 -------------------------------------------------------------
  Sort
@@ -444,6 +446,8 @@
 (24 rows)
 
 SELECT t1.x, sum(t1.y), count(*) FROM pagg_tab1 t1, pagg_tab2 t2 WHERE t1.x = t2.y GROUP BY t1.x ORDER BY 1, 2, 3;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  x  | sum  | count 
 ----+------+-------
   0 |  500 |   100
@@ -456,6 +460,8 @@
 -- Check with whole-row reference; partitionwise aggregation does not apply
 EXPLAIN (COSTS OFF)
 SELECT t1.x, sum(t1.y), count(t1) FROM pagg_tab1 t1, pagg_tab2 t2 WHERE t1.x = t2.y GROUP BY t1.x ORDER BY 1, 2, 3;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                          QUERY PLAN                          
 -------------------------------------------------------------
  Sort
@@ -476,6 +482,8 @@
 (15 rows)
 
 SELECT t1.x, sum(t1.y), count(t1) FROM pagg_tab1 t1, pagg_tab2 t2 WHERE t1.x = t2.y GROUP BY t1.x ORDER BY 1, 2, 3;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  x  | sum  | count 
 ----+------+-------
   0 |  500 |   100
@@ -488,6 +496,8 @@
 -- GROUP BY having other matching key
 EXPLAIN (COSTS OFF)
 SELECT t2.y, sum(t1.y), count(*) FROM pagg_tab1 t1, pagg_tab2 t2 WHERE t1.x = t2.y GROUP BY t2.y ORDER BY 1, 2, 3;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                          QUERY PLAN                          
 -------------------------------------------------------------
  Sort
@@ -521,6 +531,7 @@
 SET enable_hashagg TO false;
 EXPLAIN (COSTS OFF)
 SELECT t1.y, sum(t1.x), count(*) FROM pagg_tab1 t1, pagg_tab2 t2 WHERE t1.x = t2.y GROUP BY t1.y HAVING avg(t1.x) > 10 ORDER BY 1, 2, 3;
+INFO:  Path param info: 0.000000
                                QUERY PLAN                                
 -------------------------------------------------------------------------
  Sort
@@ -560,6 +571,7 @@
 (34 rows)
 
 SELECT t1.y, sum(t1.x), count(*) FROM pagg_tab1 t1, pagg_tab2 t2 WHERE t1.x = t2.y GROUP BY t1.y HAVING avg(t1.x) > 10 ORDER BY 1, 2, 3;
+INFO:  Path param info: 0.000000
  y  | sum  | count 
 ----+------+-------
   2 |  600 |    50
@@ -577,6 +589,7 @@
 -- GROUP BY is on nullable column
 EXPLAIN (COSTS OFF)
 SELECT b.y, sum(a.y) FROM pagg_tab1 a LEFT JOIN pagg_tab2 b ON a.x = b.y GROUP BY b.y ORDER BY 1 NULLS LAST;
+INFO:  Path param info: -1.000000
                             QUERY PLAN                            
 ------------------------------------------------------------------
  Finalize GroupAggregate
@@ -608,6 +621,7 @@
 (26 rows)
 
 SELECT b.y, sum(a.y) FROM pagg_tab1 a LEFT JOIN pagg_tab2 b ON a.x = b.y GROUP BY b.y ORDER BY 1 NULLS LAST;
+INFO:  Path param info: -1.000000
  y  | sum  
 ----+------
   0 |  500
@@ -622,6 +636,8 @@
 -- GROUP BY is on non-nullable column
 EXPLAIN (COSTS OFF)
 SELECT b.y, sum(a.y) FROM pagg_tab1 a RIGHT JOIN pagg_tab2 b ON a.x = b.y GROUP BY b.y ORDER BY 1 NULLS LAST;
+INFO:  Path param info: -1.000000
+INFO:  Path param info: 0.000000
                          QUERY PLAN                         
 ------------------------------------------------------------
  Sort
@@ -651,6 +667,8 @@
 (24 rows)
 
 SELECT b.y, sum(a.y) FROM pagg_tab1 a RIGHT JOIN pagg_tab2 b ON a.x = b.y GROUP BY b.y ORDER BY 1 NULLS LAST;
+INFO:  Path param info: -1.000000
+INFO:  Path param info: 0.000000
  y  | sum  
 ----+------
   0 |  500
@@ -669,6 +687,7 @@
 -- GROUP BY is on nullable column
 EXPLAIN (COSTS OFF)
 SELECT a.x, sum(b.x) FROM pagg_tab1 a FULL OUTER JOIN pagg_tab2 b ON a.x = b.y GROUP BY a.x ORDER BY 1 NULLS LAST;
+INFO:  Path param info: 0.000000
                             QUERY PLAN                            
 ------------------------------------------------------------------
  Finalize GroupAggregate
@@ -700,6 +719,7 @@
 (26 rows)
 
 SELECT a.x, sum(b.x) FROM pagg_tab1 a FULL OUTER JOIN pagg_tab2 b ON a.x = b.y GROUP BY a.x ORDER BY 1 NULLS LAST;
+INFO:  Path param info: 0.000000
  x  | sum  
 ----+------
   0 |  500
@@ -726,6 +746,8 @@
 -- But right now we are unable to do partitionwise join in this case.
 EXPLAIN (COSTS OFF)
 SELECT a.x, b.y, count(*) FROM (SELECT * FROM pagg_tab1 WHERE x < 20) a LEFT JOIN (SELECT * FROM pagg_tab2 WHERE y > 10) b ON a.x = b.y WHERE a.x > 5 or b.y < 20  GROUP BY a.x, b.y ORDER BY 1, 2;
+INFO:  Path param info: -1.000000
+INFO:  Path param info: 0.000000
                              QUERY PLAN                             
 --------------------------------------------------------------------
  Sort
@@ -749,6 +771,8 @@
 (18 rows)
 
 SELECT a.x, b.y, count(*) FROM (SELECT * FROM pagg_tab1 WHERE x < 20) a LEFT JOIN (SELECT * FROM pagg_tab2 WHERE y > 10) b ON a.x = b.y WHERE a.x > 5 or b.y < 20  GROUP BY a.x, b.y ORDER BY 1, 2;
+INFO:  Path param info: -1.000000
+INFO:  Path param info: 0.000000
  x  | y  | count 
 ----+----+-------
   6 |    |    10
@@ -766,6 +790,7 @@
 -- But right now we are unable to do partitionwise join in this case.
 EXPLAIN (COSTS OFF)
 SELECT a.x, b.y, count(*) FROM (SELECT * FROM pagg_tab1 WHERE x < 20) a FULL JOIN (SELECT * FROM pagg_tab2 WHERE y > 10) b ON a.x = b.y WHERE a.x > 5 or b.y < 20  GROUP BY a.x, b.y ORDER BY 1, 2;
+INFO:  Path param info: 0.000000
                              QUERY PLAN                             
 --------------------------------------------------------------------
  Sort
@@ -789,6 +814,7 @@
 (18 rows)
 
 SELECT a.x, b.y, count(*) FROM (SELECT * FROM pagg_tab1 WHERE x < 20) a FULL JOIN (SELECT * FROM pagg_tab2 WHERE y > 10) b ON a.x = b.y WHERE a.x > 5 or b.y < 20 GROUP BY a.x, b.y ORDER BY 1, 2;
+INFO:  Path param info: 0.000000
  x  | y  | count 
 ----+----+-------
   6 |    |    10
@@ -804,6 +830,7 @@
 -- Empty join relation because of empty outer side, no partitionwise agg plan
 EXPLAIN (COSTS OFF)
 SELECT a.x, a.y, count(*) FROM (SELECT * FROM pagg_tab1 WHERE x = 1 AND x = 2) a LEFT JOIN pagg_tab2 b ON a.x = b.y GROUP BY a.x, a.y ORDER BY 1, 2;
+INFO:  Path param info: -1.000000
               QUERY PLAN              
 --------------------------------------
  GroupAggregate
@@ -815,6 +842,7 @@
 (6 rows)
 
 SELECT a.x, a.y, count(*) FROM (SELECT * FROM pagg_tab1 WHERE x = 1 AND x = 2) a LEFT JOIN pagg_tab2 b ON a.x = b.y GROUP BY a.x, a.y ORDER BY 1, 2;
+INFO:  Path param info: -1.000000
  x | y | count 
 ---+---+-------
 (0 rows)
diff -U3 /home/dbs/pg-queryplans/postgres/src/test/regress/expected/partition_info.out /home/dbs/pg-queryplans/postgres/src/test/regress/results/partition_info.out
--- /home/dbs/pg-queryplans/postgres/src/test/regress/expected/partition_info.out	2024-02-20 13:16:25.967611274 +0900
+++ /home/dbs/pg-queryplans/postgres/src/test/regress/results/partition_info.out	2024-02-20 16:07:35.283975053 +0900
@@ -128,6 +128,7 @@
 SELECT relid, parentrelid, level, isleaf
   FROM pg_partition_tree('ptif_test0') p
   JOIN pg_class c ON (p.relid = c.oid);
+INFO:  Path param info: 0.000000
     relid    | parentrelid | level | isleaf 
 -------------+-------------+-------+--------
  ptif_test0  | ptif_test   |     0 | f
@@ -138,6 +139,7 @@
 SELECT relid, parentrelid, level, isleaf
   FROM pg_partition_tree('ptif_test01') p
   JOIN pg_class c ON (p.relid = c.oid);
+INFO:  Path param info: 0.000000
     relid    | parentrelid | level | isleaf 
 -------------+-------------+-------+--------
  ptif_test01 | ptif_test0  |     0 | t
@@ -147,6 +149,7 @@
 SELECT relid, parentrelid, level, isleaf
   FROM pg_partition_tree('ptif_test3') p
   JOIN pg_class c ON (p.relid = c.oid);
+INFO:  Path param info: 0.000000
    relid    | parentrelid | level | isleaf 
 ------------+-------------+-------+--------
  ptif_test3 | ptif_test   |     0 | f
@@ -171,6 +174,7 @@
 SELECT relid, parentrelid, level, isleaf
   FROM pg_partition_tree(pg_partition_root('ptif_test01')) p
   JOIN pg_class c ON (p.relid = c.oid);
+INFO:  Path param info: 0.000000
     relid    | parentrelid | level | isleaf 
 -------------+-------------+-------+--------
  ptif_test   |             |     0 | f
@@ -200,6 +204,7 @@
 SELECT relid, parentrelid, level, isleaf
   FROM pg_partition_tree('ptif_test0_index') p
   JOIN pg_class c ON (p.relid = c.oid);
+INFO:  Path param info: 0.000000
        relid       |   parentrelid    | level | isleaf 
 -------------------+------------------+-------+--------
  ptif_test0_index  | ptif_test_index  |     0 | f
@@ -210,6 +215,7 @@
 SELECT relid, parentrelid, level, isleaf
   FROM pg_partition_tree('ptif_test01_index') p
   JOIN pg_class c ON (p.relid = c.oid);
+INFO:  Path param info: 0.000000
        relid       |   parentrelid    | level | isleaf 
 -------------------+------------------+-------+--------
  ptif_test01_index | ptif_test0_index |     0 | t
@@ -219,6 +225,7 @@
 SELECT relid, parentrelid, level, isleaf
   FROM pg_partition_tree('ptif_test3_index') p
   JOIN pg_class c ON (p.relid = c.oid);
+INFO:  Path param info: 0.000000
       relid       |   parentrelid   | level | isleaf 
 ------------------+-----------------+-------+--------
  ptif_test3_index | ptif_test_index |     0 | f
@@ -228,6 +235,7 @@
 SELECT relid, parentrelid, level, isleaf
   FROM pg_partition_tree(pg_partition_root('ptif_test01_index')) p
   JOIN pg_class c ON (p.relid = c.oid);
+INFO:  Path param info: 0.000000
        relid       |   parentrelid    | level | isleaf 
 -------------------+------------------+-------+--------
  ptif_test_index   |                  |     0 | f
diff -U3 /home/dbs/pg-queryplans/postgres/src/test/regress/expected/tuplesort.out /home/dbs/pg-queryplans/postgres/src/test/regress/results/tuplesort.out
--- /home/dbs/pg-queryplans/postgres/src/test/regress/expected/tuplesort.out	2024-02-20 13:16:25.975611131 +0900
+++ /home/dbs/pg-queryplans/postgres/src/test/regress/results/tuplesort.out	2024-02-20 16:07:35.703968920 +0900
@@ -598,6 +598,7 @@
 -- need a few duplicates for mark/restore to matter
 INSERT INTO test_mark_restore(col1, col2, col12)
    SELECT a.i, b.i, a.i * b.i FROM generate_series(1, 500) a(i), generate_series(1, 5) b(i);
+INFO:  Path param info: 0.000000
 BEGIN;
 SET LOCAL enable_nestloop = off;
 SET LOCAL enable_hashjoin = off;
@@ -614,6 +615,7 @@
 $$ AS qry \gset
 -- test mark/restore with in-memory sorts
 EXPLAIN (COSTS OFF) :qry;
+INFO:  Path param info: 0.000000
                                                                                  QUERY PLAN                                                                                  
 -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  Limit
@@ -636,6 +638,7 @@
 (17 rows)
 
 :qry;
+INFO:  Path param info: 0.000000
  col12 | count | count | count | count | count 
 -------+-------+-------+-------+-------+-------
    480 |     5 |     5 |     5 |     5 |    25
@@ -653,6 +656,7 @@
 -- test mark/restore with on-disk sorts
 SET LOCAL work_mem = '100kB';
 EXPLAIN (COSTS OFF) :qry;
+INFO:  Path param info: 0.000000
                                                                                  QUERY PLAN                                                                                  
 -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  Limit
@@ -675,6 +679,7 @@
 (17 rows)
 
 :qry;
+INFO:  Path param info: 0.000000
  col12 | count | count | count | count | count 
 -------+-------+-------+-------+-------+-------
    480 |     5 |     5 |     5 |     5 |    25
diff -U3 /home/dbs/pg-queryplans/postgres/src/test/regress/expected/compression_1.out /home/dbs/pg-queryplans/postgres/src/test/regress/results/compression.out
--- /home/dbs/pg-queryplans/postgres/src/test/regress/expected/compression_1.out	2024-02-20 13:16:25.955611488 +0900
+++ /home/dbs/pg-queryplans/postgres/src/test/regress/results/compression.out	2024-02-20 16:07:35.311974644 +0900
@@ -6,6 +6,37 @@
 CREATE INDEX idx ON cmdata(f1);
 INSERT INTO cmdata VALUES(repeat('1234567890', 1000));
 \d+ cmdata
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                         Table "public.cmdata"
  Column | Type | Collation | Nullable | Default | Storage  | Compression | Stats target | Description 
 --------+------+-----------+----------+---------+----------+-------------+--------------+-------------
@@ -21,6 +52,7 @@
 LINE 1: INSERT INTO cmdata1 VALUES(repeat('1234567890', 1004));
                     ^
 \d+ cmdata1
+INFO:  Path param info: 0.000000
 -- verify stored compression method in the data
 SELECT pg_column_compression(f1) FROM cmdata;
  pg_column_compression 
@@ -46,6 +78,25 @@
 -- copy with table creation
 SELECT * INTO cmmove1 FROM cmdata;
 \d+ cmmove1
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                         Table "public.cmmove1"
  Column | Type | Collation | Nullable | Default | Storage  | Compression | Stats target | Description 
 --------+------+-----------+----------+---------+----------+-------------+--------------+-------------
@@ -76,6 +127,7 @@
 LINE 1: CREATE TABLE cmdata2 (LIKE cmdata1 INCLUDING COMPRESSION);
                                    ^
 \d+ cmdata2
+INFO:  Path param info: 0.000000
 DROP TABLE cmdata2;
 ERROR:  table "cmdata2" does not exist
 -- try setting compression for incompressible data type
@@ -133,6 +185,25 @@
 --test column type update varlena/non-varlena
 CREATE TABLE cmdata2 (f1 int);
 \d+ cmdata2
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                          Table "public.cmdata2"
  Column |  Type   | Collation | Nullable | Default | Storage | Compression | Stats target | Description 
 --------+---------+-----------+----------+---------+---------+-------------+--------------+-------------
@@ -140,6 +211,25 @@
 
 ALTER TABLE cmdata2 ALTER COLUMN f1 TYPE varchar;
 \d+ cmdata2
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                               Table "public.cmdata2"
  Column |       Type        | Collation | Nullable | Default | Storage  | Compression | Stats target | Description 
 --------+-------------------+-----------+----------+---------+----------+-------------+--------------+-------------
@@ -147,6 +237,25 @@
 
 ALTER TABLE cmdata2 ALTER COLUMN f1 TYPE int USING f1::integer;
 \d+ cmdata2
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                          Table "public.cmdata2"
  Column |  Type   | Collation | Nullable | Default | Storage | Compression | Stats target | Description 
 --------+---------+-----------+----------+---------+---------+-------------+--------------+-------------
@@ -157,6 +266,25 @@
 ALTER TABLE cmdata2 ALTER COLUMN f1 TYPE varchar;
 ALTER TABLE cmdata2 ALTER COLUMN f1 SET COMPRESSION pglz;
 \d+ cmdata2
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                               Table "public.cmdata2"
  Column |       Type        | Collation | Nullable | Default | Storage  | Compression | Stats target | Description 
 --------+-------------------+-----------+----------+---------+----------+-------------+--------------+-------------
@@ -164,6 +292,25 @@
 
 ALTER TABLE cmdata2 ALTER COLUMN f1 SET STORAGE plain;
 \d+ cmdata2
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                               Table "public.cmdata2"
  Column |       Type        | Collation | Nullable | Default | Storage | Compression | Stats target | Description 
 --------+-------------------+-----------+----------+---------+---------+-------------+--------------+-------------
@@ -182,6 +329,7 @@
 LINE 1: ...TE MATERIALIZED VIEW compressmv(x) AS SELECT * FROM cmdata1;
                                                                ^
 \d+ compressmv
+INFO:  Path param info: 0.000000
 SELECT pg_column_compression(f1) FROM cmdata1;
 ERROR:  relation "cmdata1" does not exist
 LINE 1: SELECT pg_column_compression(f1) FROM cmdata1;
@@ -240,6 +388,37 @@
 DETAIL:  This functionality requires the server to be built with lz4 support.
 INSERT INTO cmdata VALUES (repeat('123456789', 4004));
 \d+ cmdata
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                         Table "public.cmdata"
  Column | Type | Collation | Nullable | Default | Storage  | Compression | Stats target | Description 
 --------+------+-----------+----------+---------+----------+-------------+--------------+-------------
@@ -256,6 +435,25 @@
 
 ALTER TABLE cmdata2 ALTER COLUMN f1 SET COMPRESSION default;
 \d+ cmdata2
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                               Table "public.cmdata2"
  Column |       Type        | Collation | Nullable | Default | Storage | Compression | Stats target | Description 
 --------+-------------------+-----------+----------+---------+---------+-------------+--------------+-------------
@@ -265,6 +463,7 @@
 ALTER MATERIALIZED VIEW compressmv ALTER COLUMN x SET COMPRESSION lz4;
 ERROR:  relation "compressmv" does not exist
 \d+ compressmv
+INFO:  Path param info: 0.000000
 -- test alter compression method for partitioned tables
 ALTER TABLE cmpart1 ALTER COLUMN f1 SET COMPRESSION pglz;
 ERROR:  relation "cmpart1" does not exist
diff -U3 /home/dbs/pg-queryplans/postgres/src/test/regress/expected/memoize.out /home/dbs/pg-queryplans/postgres/src/test/regress/results/memoize.out
--- /home/dbs/pg-queryplans/postgres/src/test/regress/expected/memoize.out	2024-02-20 13:16:25.963611345 +0900
+++ /home/dbs/pg-queryplans/postgres/src/test/regress/results/memoize.out	2024-02-20 16:07:35.299974819 +0900
@@ -35,6 +35,7 @@
 SELECT COUNT(*),AVG(t1.unique1) FROM tenk1 t1
 INNER JOIN tenk1 t2 ON t1.unique1 = t2.twenty
 WHERE t2.unique1 < 1000;', false);
+INFO:  Path param info: 0.000000
                                       explain_memoize                                      
 -------------------------------------------------------------------------------------------
  Aggregate (actual rows=1 loops=N)
@@ -55,6 +56,7 @@
 SELECT COUNT(*),AVG(t1.unique1) FROM tenk1 t1
 INNER JOIN tenk1 t2 ON t1.unique1 = t2.twenty
 WHERE t2.unique1 < 1000;
+INFO:  Path param info: 0.000000
  count |        avg         
 -------+--------------------
   1000 | 9.5000000000000000
@@ -66,6 +68,7 @@
 LATERAL (SELECT t2.unique1 FROM tenk1 t2
          WHERE t1.twenty = t2.unique1 OFFSET 0) t2
 WHERE t1.unique1 < 1000;', false);
+INFO:  Path param info: 0.000000
                                       explain_memoize                                      
 -------------------------------------------------------------------------------------------
  Aggregate (actual rows=1 loops=N)
@@ -87,6 +90,7 @@
 LATERAL (SELECT t2.unique1 FROM tenk1 t2
          WHERE t1.twenty = t2.unique1 OFFSET 0) t2
 WHERE t1.unique1 < 1000;
+INFO:  Path param info: 0.000000
  count |        avg         
 -------+--------------------
   1000 | 9.5000000000000000
@@ -103,6 +107,7 @@
 SELECT COUNT(*),AVG(t1.unique1) FROM tenk1 t1
 INNER JOIN tenk1 t2 ON t1.unique1 = t2.thousand
 WHERE t2.unique1 < 1200;', true);
+INFO:  Path param info: 0.000000
                                       explain_memoize                                      
 -------------------------------------------------------------------------------------------
  Aggregate (actual rows=1 loops=N)
@@ -127,6 +132,7 @@
 -- Ensure memoize operates in logical mode
 SELECT explain_memoize('
 SELECT * FROM flt f1 INNER JOIN flt f2 ON f1.f = f2.f;', false);
+INFO:  Path param info: 0.000000
                                 explain_memoize                                
 -------------------------------------------------------------------------------
  Nested Loop (actual rows=4 loops=N)
@@ -144,6 +150,7 @@
 -- Ensure memoize operates in binary mode
 SELECT explain_memoize('
 SELECT * FROM flt f1 INNER JOIN flt f2 ON f1.f >= f2.f;', false);
+INFO:  Path param info: 0.000000
                                 explain_memoize                                
 -------------------------------------------------------------------------------
  Nested Loop (actual rows=4 loops=N)
@@ -171,6 +178,7 @@
 -- Ensure we get 3 hits and 3 misses
 SELECT explain_memoize('
 SELECT * FROM strtest s1 INNER JOIN strtest s2 ON s1.n >= s2.n;', false);
+INFO:  Path param info: 0.000000
                                  explain_memoize                                  
 ----------------------------------------------------------------------------------
  Nested Loop (actual rows=24 loops=N)
@@ -186,6 +194,7 @@
 -- Ensure we get 3 hits and 3 misses
 SELECT explain_memoize('
 SELECT * FROM strtest s1 INNER JOIN strtest s2 ON s1.t >= s2.t;', false);
+INFO:  Path param info: 0.000000
                                  explain_memoize                                  
 ----------------------------------------------------------------------------------
  Nested Loop (actual rows=24 loops=N)
@@ -211,6 +220,7 @@
 ANALYZE prt;
 SELECT explain_memoize('
 SELECT * FROM prt t1 INNER JOIN prt t2 ON t1.a = t2.a;', false);
+INFO:  Path param info: 0.000000
                                      explain_memoize                                      
 ------------------------------------------------------------------------------------------
  Append (actual rows=32 loops=N)
@@ -242,6 +252,7 @@
 SELECT * FROM prt_p1 t1 INNER JOIN
 (SELECT * FROM prt_p1 UNION ALL SELECT * FROM prt_p2) t2
 ON t1.a = t2.a;', false);
+INFO:  Path param info: 0.000000
                                    explain_memoize                                   
 -------------------------------------------------------------------------------------
  Nested Loop (actual rows=16 loops=N)
@@ -272,6 +283,8 @@
 	SELECT 1 FROM tenk1 t1
 	INNER JOIN tenk1 t2 ON t1.unique1 = t2.hundred
 	WHERE t0.ten = t1.twenty AND t0.two <> t2.four OFFSET 0);
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                            QUERY PLAN                           
 ----------------------------------------------------------------
  Index Scan using tenk1_unique1 on tenk1 t0
@@ -296,6 +309,8 @@
 	SELECT 1 FROM tenk1 t1
 	INNER JOIN tenk1 t2 ON t1.unique1 = t2.hundred
 	WHERE t0.ten = t1.twenty AND t0.two <> t2.four OFFSET 0);
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  unique1 
 ---------
        2
@@ -317,6 +332,8 @@
 SELECT COUNT(*),AVG(t2.unique1) FROM tenk1 t1,
 LATERAL (SELECT t2.unique1 FROM tenk1 t2 WHERE t1.twenty = t2.unique1) t2
 WHERE t1.unique1 < 1000;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                   QUERY PLAN                                   
 -------------------------------------------------------------------------------
  Finalize Aggregate
@@ -339,6 +356,8 @@
 SELECT COUNT(*),AVG(t2.unique1) FROM tenk1 t1,
 LATERAL (SELECT t2.unique1 FROM tenk1 t2 WHERE t1.twenty = t2.unique1) t2
 WHERE t1.unique1 < 1000;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  count |        avg         
 -------+--------------------
   1000 | 9.5000000000000000
diff -U3 /home/dbs/pg-queryplans/postgres/src/test/regress/expected/stats.out /home/dbs/pg-queryplans/postgres/src/test/regress/results/stats.out
--- /home/dbs/pg-queryplans/postgres/src/test/regress/expected/stats.out	2024-02-20 13:16:25.975611131 +0900
+++ /home/dbs/pg-queryplans/postgres/src/test/regress/results/stats.out	2024-02-20 16:07:35.719968687 +0900
@@ -31,6 +31,17 @@
   FROM pg_catalog.pg_stat_user_tables AS t,
        pg_catalog.pg_statio_user_tables AS b
  WHERE t.relname='tenk2' AND b.relname='tenk2';
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
 COMMIT;
 -- test effects of TRUNCATE on n_live_tup/n_dead_tup counters
 CREATE TABLE trunc_stats_test(id serial);
@@ -113,6 +124,12 @@
 SELECT relname, n_tup_ins, n_tup_upd, n_tup_del, n_live_tup, n_dead_tup
   FROM pg_stat_user_tables
  WHERE relname like 'trunc_stats_test%' order by relname;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
       relname      | n_tup_ins | n_tup_upd | n_tup_del | n_live_tup | n_dead_tup 
 -------------------+-----------+-----------+-----------+------------+------------
  trunc_stats_test  |         3 |         0 |         0 |          0 |          0
@@ -128,6 +145,16 @@
        st.idx_tup_fetch >= pr.idx_tup_fetch + 1
   FROM pg_stat_user_tables AS st, pg_class AS cl, prevstats AS pr
  WHERE st.relname='tenk2' AND cl.relname='tenk2';
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  ?column? | ?column? | ?column? | ?column? 
 ----------+----------+----------+----------
  t        | t        | t        | t
@@ -137,6 +164,20 @@
        st.idx_blks_read + st.idx_blks_hit >= pr.idx_blks + 1
   FROM pg_statio_user_tables AS st, pg_class AS cl, prevstats AS pr
  WHERE st.relname='tenk2' AND cl.relname='tenk2';
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  ?column? | ?column? 
 ----------+----------
  t        | t
@@ -574,6 +615,9 @@
 (1 row)
 
 SELECT last_seq_scan, last_idx_scan FROM pg_stat_all_tables WHERE relid = 'test_last_scan'::regclass;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  last_seq_scan | last_idx_scan 
 ---------------+---------------
                | 
@@ -587,6 +631,9 @@
 (1 row)
 
 SELECT seq_scan, idx_scan FROM pg_stat_all_tables WHERE relid = 'test_last_scan'::regclass;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  seq_scan | idx_scan 
 ----------+----------
         0 |        0
@@ -636,6 +683,9 @@
 -- fetch timestamps from before the next test
 SELECT last_seq_scan AS test_last_seq, last_idx_scan AS test_last_idx
 FROM pg_stat_all_tables WHERE relid = 'test_last_scan'::regclass \gset
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
 SELECT pg_sleep(0.1); -- assume a minimum timestamp granularity of 100ms
  pg_sleep 
 ----------
@@ -671,6 +721,9 @@
 -- check that just sequential scan stats were incremented
 SELECT seq_scan, :'test_last_seq' < last_seq_scan AS seq_ok, idx_scan, :'test_last_idx' = last_idx_scan AS idx_ok
 FROM pg_stat_all_tables WHERE relid = 'test_last_scan'::regclass;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  seq_scan | seq_ok | idx_scan | idx_ok 
 ----------+--------+----------+--------
         2 | t      |        1 | t
@@ -679,6 +732,9 @@
 -- fetch timestamps from before the next test
 SELECT last_seq_scan AS test_last_seq, last_idx_scan AS test_last_idx
 FROM pg_stat_all_tables WHERE relid = 'test_last_scan'::regclass \gset
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
 SELECT pg_sleep(0.1);
  pg_sleep 
 ----------
@@ -714,6 +770,9 @@
 -- check that just index scan stats were incremented
 SELECT seq_scan, :'test_last_seq' = last_seq_scan AS seq_ok, idx_scan, :'test_last_idx' < last_idx_scan AS idx_ok
 FROM pg_stat_all_tables WHERE relid = 'test_last_scan'::regclass;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  seq_scan | seq_ok | idx_scan | idx_ok 
 ----------+--------+----------+--------
         2 | t      |        2 | t
@@ -722,6 +781,9 @@
 -- fetch timestamps from before the next test
 SELECT last_seq_scan AS test_last_seq, last_idx_scan AS test_last_idx
 FROM pg_stat_all_tables WHERE relid = 'test_last_scan'::regclass \gset
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
 SELECT pg_sleep(0.1);
  pg_sleep 
 ----------
@@ -759,6 +821,9 @@
 -- check that just index scan stats were incremented
 SELECT seq_scan, :'test_last_seq' = last_seq_scan AS seq_ok, idx_scan, :'test_last_idx' < last_idx_scan AS idx_ok
 FROM pg_stat_all_tables WHERE relid = 'test_last_scan'::regclass;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  seq_scan | seq_ok | idx_scan | idx_ok 
 ----------+--------+----------+--------
         2 | t      |        3 | t
@@ -786,6 +851,9 @@
 -- check that the stats are reset.
 SELECT (n_tup_ins + n_tup_upd) > 0 AS has_data FROM pg_stat_all_tables
   WHERE relid = 'pg_shdescription'::regclass;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  has_data 
 ----------
  t
@@ -799,6 +867,9 @@
 
 SELECT (n_tup_ins + n_tup_upd) > 0 AS has_data FROM pg_stat_all_tables
   WHERE relid = 'pg_shdescription'::regclass;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  has_data 
 ----------
  f
@@ -1325,6 +1396,7 @@
 SET LOCAL enable_hashjoin TO off; SET LOCAL enable_material TO off;
 -- ensure plan stays as we expect it to
 EXPLAIN (COSTS OFF) SELECT COUNT(*) FROM test_io_shared t1 INNER JOIN test_io_shared t2 USING (a);
+INFO:  Path param info: 0.000000
                 QUERY PLAN                 
 -------------------------------------------
  Aggregate
@@ -1335,6 +1407,7 @@
 (5 rows)
 
 SELECT COUNT(*) FROM test_io_shared t1 INNER JOIN test_io_shared t2 USING (a);
+INFO:  Path param info: 0.000000
  count 
 -------
    100
diff -U3 /home/dbs/pg-queryplans/postgres/src/test/regress/expected/event_trigger.out /home/dbs/pg-queryplans/postgres/src/test/regress/results/event_trigger.out
--- /home/dbs/pg-queryplans/postgres/src/test/regress/expected/event_trigger.out	2024-02-20 13:16:25.959611416 +0900
+++ /home/dbs/pg-queryplans/postgres/src/test/regress/results/event_trigger.out	2024-02-20 16:07:35.775967870 +0900
@@ -278,6 +278,7 @@
 		'drop owned', 'drop schema', 'alter table')
 	EXECUTE PROCEDURE test_evtrig_dropped_objects();
 ALTER TABLE schema_one.table_one DROP COLUMN a;
+INFO:  Path param info: 0.000000
 DROP SCHEMA schema_one, schema_two CASCADE;
 NOTICE:  drop cascades to 7 other objects
 DETAIL:  drop cascades to table schema_two.table_two
@@ -289,6 +290,7 @@
 drop cascades to table schema_one.table_three
 NOTICE:  table "schema_two_table_two" does not exist, skipping
 NOTICE:  table "audit_tbls_schema_two_table_three" does not exist, skipping
+INFO:  Path param info: 0.000000
 ERROR:  object audit_tbls.schema_two_table_three of type table cannot be dropped
 CONTEXT:  PL/pgSQL function undroppable() line 14 at RAISE
 SQL statement "DROP TABLE IF EXISTS audit_tbls.schema_two_table_three"
@@ -305,6 +307,7 @@
 drop cascades to table schema_one.table_three
 NOTICE:  table "schema_two_table_two" does not exist, skipping
 NOTICE:  table "audit_tbls_schema_two_table_three" does not exist, skipping
+INFO:  Path param info: 0.000000
 NOTICE:  table "schema_one_table_one" does not exist, skipping
 NOTICE:  table "schema_one_table two" does not exist, skipping
 NOTICE:  table "schema_one_table_three" does not exist, skipping
@@ -322,6 +325,7 @@
 drop cascades to table schema_one.table_three
 NOTICE:  table "schema_two_table_two" does not exist, skipping
 NOTICE:  table "audit_tbls_schema_two_table_three" does not exist, skipping
+INFO:  Path param info: 0.000000
 NOTICE:  table "schema_one_table_one" does not exist, skipping
 NOTICE:  table "schema_one_table two" does not exist, skipping
 NOTICE:  table "schema_one_table_three" does not exist, skipping
@@ -355,6 +359,7 @@
 
 DROP OWNED BY regress_evt_user;
 NOTICE:  schema "audit_tbls" does not exist, skipping
+INFO:  Path param info: 0.000000
 SELECT * FROM dropped_objects WHERE type = 'schema';
   type  | schema |   object   
 --------+--------+------------
@@ -604,6 +609,11 @@
     LATERAL pg_identify_object_as_address('pg_event_trigger'::regclass, e.oid, 0) as b,
     LATERAL pg_get_object_address(b.type, b.object_names, b.object_args) as a
   ORDER BY e.evtname;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
       evtname      |              descr              |     type      |    object_names     | object_args |                         ident                          
 -------------------+---------------------------------+---------------+---------------------+-------------+--------------------------------------------------------
  end_rls_command   | event trigger end_rls_command   | event trigger | {end_rls_command}   | {}          | ("event trigger",,end_rls_command,end_rls_command)
diff -U3 /home/dbs/pg-queryplans/postgres/src/test/regress/expected/oidjoins.out /home/dbs/pg-queryplans/postgres/src/test/regress/results/oidjoins.out
--- /home/dbs/pg-queryplans/postgres/src/test/regress/expected/oidjoins.out	2024-02-20 13:16:25.967611274 +0900
+++ /home/dbs/pg-queryplans/postgres/src/test/regress/results/oidjoins.out	2024-02-20 16:07:35.823967168 +0900
@@ -48,221 +48,440 @@
 end
 $doblock$;
 NOTICE:  checking pg_proc {pronamespace} => pg_namespace {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_proc {proowner} => pg_authid {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_proc {prolang} => pg_language {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_proc {provariadic} => pg_type {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_proc {prosupport} => pg_proc {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_proc {prorettype} => pg_type {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_proc {proargtypes} => pg_type {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_proc {proallargtypes} => pg_type {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_proc {protrftypes} => pg_type {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_type {typnamespace} => pg_namespace {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_type {typowner} => pg_authid {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_type {typrelid} => pg_class {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_type {typsubscript} => pg_proc {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_type {typelem} => pg_type {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_type {typarray} => pg_type {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_type {typinput} => pg_proc {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_type {typoutput} => pg_proc {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_type {typreceive} => pg_proc {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_type {typsend} => pg_proc {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_type {typmodin} => pg_proc {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_type {typmodout} => pg_proc {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_type {typanalyze} => pg_proc {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_type {typbasetype} => pg_type {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_type {typcollation} => pg_collation {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_attribute {attrelid} => pg_class {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_attribute {atttypid} => pg_type {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_attribute {attcollation} => pg_collation {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_class {relnamespace} => pg_namespace {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_class {reltype} => pg_type {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_class {reloftype} => pg_type {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_class {relowner} => pg_authid {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_class {relam} => pg_am {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_class {reltablespace} => pg_tablespace {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_class {reltoastrelid} => pg_class {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_class {relrewrite} => pg_class {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_attrdef {adrelid} => pg_class {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_attrdef {adrelid,adnum} => pg_attribute {attrelid,attnum}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_constraint {connamespace} => pg_namespace {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_constraint {conrelid} => pg_class {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_constraint {contypid} => pg_type {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_constraint {conindid} => pg_class {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_constraint {conparentid} => pg_constraint {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_constraint {confrelid} => pg_class {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_constraint {conpfeqop} => pg_operator {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_constraint {conppeqop} => pg_operator {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_constraint {conffeqop} => pg_operator {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_constraint {conexclop} => pg_operator {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_constraint {conrelid,conkey} => pg_attribute {attrelid,attnum}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_constraint {confrelid,confkey} => pg_attribute {attrelid,attnum}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_inherits {inhrelid} => pg_class {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_inherits {inhparent} => pg_class {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_index {indexrelid} => pg_class {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_index {indrelid} => pg_class {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_index {indcollation} => pg_collation {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_index {indclass} => pg_opclass {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_index {indrelid,indkey} => pg_attribute {attrelid,attnum}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_operator {oprnamespace} => pg_namespace {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_operator {oprowner} => pg_authid {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_operator {oprleft} => pg_type {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_operator {oprright} => pg_type {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_operator {oprresult} => pg_type {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_operator {oprcom} => pg_operator {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_operator {oprnegate} => pg_operator {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_operator {oprcode} => pg_proc {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_operator {oprrest} => pg_proc {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_operator {oprjoin} => pg_proc {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_opfamily {opfmethod} => pg_am {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_opfamily {opfnamespace} => pg_namespace {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_opfamily {opfowner} => pg_authid {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_opclass {opcmethod} => pg_am {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_opclass {opcnamespace} => pg_namespace {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_opclass {opcowner} => pg_authid {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_opclass {opcfamily} => pg_opfamily {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_opclass {opcintype} => pg_type {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_opclass {opckeytype} => pg_type {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_am {amhandler} => pg_proc {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_amop {amopfamily} => pg_opfamily {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_amop {amoplefttype} => pg_type {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_amop {amoprighttype} => pg_type {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_amop {amopopr} => pg_operator {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_amop {amopmethod} => pg_am {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_amop {amopsortfamily} => pg_opfamily {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_amproc {amprocfamily} => pg_opfamily {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_amproc {amproclefttype} => pg_type {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_amproc {amprocrighttype} => pg_type {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_amproc {amproc} => pg_proc {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_language {lanowner} => pg_authid {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_language {lanplcallfoid} => pg_proc {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_language {laninline} => pg_proc {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_language {lanvalidator} => pg_proc {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_largeobject_metadata {lomowner} => pg_authid {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_largeobject {loid} => pg_largeobject_metadata {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_aggregate {aggfnoid} => pg_proc {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_aggregate {aggtransfn} => pg_proc {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_aggregate {aggfinalfn} => pg_proc {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_aggregate {aggcombinefn} => pg_proc {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_aggregate {aggserialfn} => pg_proc {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_aggregate {aggdeserialfn} => pg_proc {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_aggregate {aggmtransfn} => pg_proc {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_aggregate {aggminvtransfn} => pg_proc {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_aggregate {aggmfinalfn} => pg_proc {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_aggregate {aggsortop} => pg_operator {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_aggregate {aggtranstype} => pg_type {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_aggregate {aggmtranstype} => pg_type {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_statistic {starelid} => pg_class {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_statistic {staop1} => pg_operator {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_statistic {staop2} => pg_operator {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_statistic {staop3} => pg_operator {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_statistic {staop4} => pg_operator {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_statistic {staop5} => pg_operator {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_statistic {stacoll1} => pg_collation {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_statistic {stacoll2} => pg_collation {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_statistic {stacoll3} => pg_collation {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_statistic {stacoll4} => pg_collation {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_statistic {stacoll5} => pg_collation {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_statistic {starelid,staattnum} => pg_attribute {attrelid,attnum}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_statistic_ext {stxrelid} => pg_class {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_statistic_ext {stxnamespace} => pg_namespace {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_statistic_ext {stxowner} => pg_authid {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_statistic_ext {stxrelid,stxkeys} => pg_attribute {attrelid,attnum}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_statistic_ext_data {stxoid} => pg_statistic_ext {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_rewrite {ev_class} => pg_class {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_trigger {tgrelid} => pg_class {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_trigger {tgparentid} => pg_trigger {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_trigger {tgfoid} => pg_proc {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_trigger {tgconstrrelid} => pg_class {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_trigger {tgconstrindid} => pg_class {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_trigger {tgconstraint} => pg_constraint {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_trigger {tgrelid,tgattr} => pg_attribute {attrelid,attnum}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_event_trigger {evtowner} => pg_authid {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_event_trigger {evtfoid} => pg_proc {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_description {classoid} => pg_class {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_cast {castsource} => pg_type {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_cast {casttarget} => pg_type {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_cast {castfunc} => pg_proc {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_enum {enumtypid} => pg_type {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_namespace {nspowner} => pg_authid {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_conversion {connamespace} => pg_namespace {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_conversion {conowner} => pg_authid {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_conversion {conproc} => pg_proc {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_depend {classid} => pg_class {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_depend {refclassid} => pg_class {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_database {datdba} => pg_authid {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_database {dattablespace} => pg_tablespace {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_db_role_setting {setdatabase} => pg_database {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_db_role_setting {setrole} => pg_authid {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_tablespace {spcowner} => pg_authid {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_auth_members {roleid} => pg_authid {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_auth_members {member} => pg_authid {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_auth_members {grantor} => pg_authid {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_shdepend {dbid} => pg_database {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_shdepend {classid} => pg_class {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_shdepend {refclassid} => pg_class {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_shdescription {classoid} => pg_class {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_ts_config {cfgnamespace} => pg_namespace {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_ts_config {cfgowner} => pg_authid {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_ts_config {cfgparser} => pg_ts_parser {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_ts_config_map {mapcfg} => pg_ts_config {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_ts_config_map {mapdict} => pg_ts_dict {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_ts_dict {dictnamespace} => pg_namespace {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_ts_dict {dictowner} => pg_authid {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_ts_dict {dicttemplate} => pg_ts_template {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_ts_parser {prsnamespace} => pg_namespace {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_ts_parser {prsstart} => pg_proc {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_ts_parser {prstoken} => pg_proc {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_ts_parser {prsend} => pg_proc {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_ts_parser {prsheadline} => pg_proc {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_ts_parser {prslextype} => pg_proc {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_ts_template {tmplnamespace} => pg_namespace {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_ts_template {tmplinit} => pg_proc {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_ts_template {tmpllexize} => pg_proc {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_extension {extowner} => pg_authid {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_extension {extnamespace} => pg_namespace {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_extension {extconfig} => pg_class {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_foreign_data_wrapper {fdwowner} => pg_authid {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_foreign_data_wrapper {fdwhandler} => pg_proc {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_foreign_data_wrapper {fdwvalidator} => pg_proc {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_foreign_server {srvowner} => pg_authid {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_foreign_server {srvfdw} => pg_foreign_data_wrapper {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_user_mapping {umuser} => pg_authid {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_user_mapping {umserver} => pg_foreign_server {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_foreign_table {ftrelid} => pg_class {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_foreign_table {ftserver} => pg_foreign_server {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_policy {polrelid} => pg_class {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_policy {polroles} => pg_authid {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_default_acl {defaclrole} => pg_authid {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_default_acl {defaclnamespace} => pg_namespace {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_init_privs {classoid} => pg_class {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_seclabel {classoid} => pg_class {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_shseclabel {classoid} => pg_class {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_collation {collnamespace} => pg_namespace {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_collation {collowner} => pg_authid {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_partitioned_table {partrelid} => pg_class {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_partitioned_table {partdefid} => pg_class {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_partitioned_table {partclass} => pg_opclass {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_partitioned_table {partcollation} => pg_collation {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_partitioned_table {partrelid,partattrs} => pg_attribute {attrelid,attnum}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_range {rngtypid} => pg_type {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_range {rngsubtype} => pg_type {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_range {rngmultitypid} => pg_type {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_range {rngcollation} => pg_collation {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_range {rngsubopc} => pg_opclass {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_range {rngcanonical} => pg_proc {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_range {rngsubdiff} => pg_proc {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_transform {trftype} => pg_type {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_transform {trflang} => pg_language {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_transform {trffromsql} => pg_proc {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_transform {trftosql} => pg_proc {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_sequence {seqrelid} => pg_class {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_sequence {seqtypid} => pg_type {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_publication {pubowner} => pg_authid {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_publication_namespace {pnpubid} => pg_publication {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_publication_namespace {pnnspid} => pg_namespace {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_publication_rel {prpubid} => pg_publication {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_publication_rel {prrelid} => pg_class {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_subscription {subdbid} => pg_database {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_subscription {subowner} => pg_authid {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_subscription_rel {srsubid} => pg_subscription {oid}
+INFO:  Path param info: 0.000000
 NOTICE:  checking pg_subscription_rel {srrelid} => pg_class {oid}
+INFO:  Path param info: 0.000000
diff -U3 /home/dbs/pg-queryplans/postgres/src/test/regress/expected/fast_default.out /home/dbs/pg-queryplans/postgres/src/test/regress/results/fast_default.out
--- /home/dbs/pg-queryplans/postgres/src/test/regress/expected/fast_default.out	2024-02-20 13:16:25.959611416 +0900
+++ /home/dbs/pg-queryplans/postgres/src/test/regress/results/fast_default.out	2024-02-20 16:07:35.871966467 +0900
@@ -61,6 +61,7 @@
 -- Test a large sample of different datatypes
 CREATE TABLE T(pk INT NOT NULL PRIMARY KEY, c_int INT DEFAULT 1);
 SELECT set('t');
+INFO:  Path param info: 0.000000
  set 
 -----
  
@@ -159,6 +160,11 @@
 (28 rows)
 
 SELECT comp();
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
    comp    
 -----------
  Unchanged
@@ -179,6 +185,7 @@
 END; $$ LANGUAGE PLPGSQL STABLE;
 CREATE TABLE T(pk INT NOT NULL PRIMARY KEY, c_int INT DEFAULT LENGTH(foo(6)));
 SELECT set('t');
+INFO:  Path param info: 0.000000
  set 
 -----
  
@@ -250,6 +257,7 @@
 CREATE TABLE T(pk INT NOT NULL PRIMARY KEY);
 INSERT INTO T VALUES (1);
 SELECT set('t');
+INFO:  Path param info: 0.000000
  set 
 -----
  
@@ -294,6 +302,7 @@
 -- Simple querie
 CREATE TABLE T (pk INT NOT NULL PRIMARY KEY);
 SELECT set('t');
+INFO:  Path param info: 0.000000
  set 
 -----
  
@@ -478,6 +487,7 @@
 -- Combine with other DDL
 CREATE TABLE T(pk INT NOT NULL PRIMARY KEY);
 SELECT set('t');
+INFO:  Path param info: 0.000000
  set 
 -----
  
diff -U3 /home/dbs/pg-queryplans/postgres/src/test/regress/expected/tablespace.out /home/dbs/pg-queryplans/postgres/src/test/regress/results/tablespace.out
--- /home/dbs/pg-queryplans/postgres/src/test/regress/expected/tablespace.out	2024-02-20 13:16:25.975611131 +0900
+++ /home/dbs/pg-queryplans/postgres/src/test/regress/results/tablespace.out	2024-02-20 16:07:35.983964831 +0900
@@ -83,6 +83,7 @@
 -- no relation moved to the new tablespace
 SELECT c.relname FROM pg_class c, pg_tablespace s
   WHERE c.reltablespace = s.oid AND s.spcname = 'regress_tblspace';
+INFO:  Path param info: 0.000000
  relname 
 ---------
 (0 rows)
@@ -99,10 +100,13 @@
             pg_index i
        WHERE i.indrelid = c.reltoastrelid AND
              c.relname = 'regress_tblspace_test_tbl') \gset
+INFO:  Path param info: 0.000000
 REINDEX (TABLESPACE regress_tblspace) TABLE regress_tblspace_test_tbl;
 SELECT c.relname FROM pg_class c, pg_tablespace s
   WHERE c.reltablespace = s.oid AND s.spcname = 'regress_tblspace'
   ORDER BY c.relname;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
             relname            
 -------------------------------
  regress_tblspace_test_tbl_idx
@@ -113,6 +117,8 @@
 SELECT c.relname FROM pg_class c, pg_tablespace s
   WHERE c.reltablespace = s.oid AND s.spcname = 'regress_tblspace'
   ORDER BY c.relname;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
             relname            
 -------------------------------
  regress_tblspace_test_tbl_idx
@@ -123,6 +129,8 @@
 SELECT c.relname FROM pg_class c, pg_tablespace s
   WHERE c.reltablespace = s.oid AND s.spcname = 'regress_tblspace'
   ORDER BY c.relname;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  relname 
 ---------
 (0 rows)
@@ -131,6 +139,8 @@
 SELECT c.relname FROM pg_class c, pg_tablespace s
   WHERE c.reltablespace = s.oid AND s.spcname = 'regress_tblspace'
   ORDER BY c.relname;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
             relname            
 -------------------------------
  regress_tblspace_test_tbl_idx
@@ -150,6 +160,7 @@
             pg_index i
        WHERE i.indrelid = c.reltoastrelid AND
              c.relname = 'regress_tblspace_test_tbl');
+INFO:  Path param info: 0.000000
  toast_same 
 ------------
  f
@@ -207,6 +218,8 @@
        ELSE 'reltablespace has changed' END AS tbspace
   FROM reindex_temp_before b JOIN pg_class a ON b.relname = a.relname
   ORDER BY 1;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
             relname             |         filenode         |          tbspace           
 --------------------------------+--------------------------+----------------------------
  tbspace_reindex_part_index     | relfilenode is unchanged | reltablespace is unchanged
@@ -223,6 +236,7 @@
 CREATE TABLE testschema.foo (i int) TABLESPACE regress_tblspace;
 SELECT relname, spcname FROM pg_catalog.pg_tablespace t, pg_catalog.pg_class c
     where c.reltablespace = t.oid AND c.relname = 'foo';
+INFO:  Path param info: 0.000000
  relname |     spcname      
 ---------+------------------
  foo     | regress_tblspace
@@ -234,6 +248,7 @@
 CREATE TABLE testschema.asselect TABLESPACE regress_tblspace AS SELECT 1;
 SELECT relname, spcname FROM pg_catalog.pg_tablespace t, pg_catalog.pg_class c
     where c.reltablespace = t.oid AND c.relname = 'asselect';
+INFO:  Path param info: 0.000000
  relname  |     spcname      
 ----------+------------------
  asselect | regress_tblspace
@@ -244,6 +259,7 @@
     AS EXECUTE selectsource(2);
 SELECT relname, spcname FROM pg_catalog.pg_tablespace t, pg_catalog.pg_class c
     where c.reltablespace = t.oid AND c.relname = 'asexecute';
+INFO:  Path param info: 0.000000
   relname  |     spcname      
 -----------+------------------
  asexecute | regress_tblspace
@@ -253,6 +269,7 @@
 CREATE INDEX foo_idx on testschema.foo(i) TABLESPACE regress_tblspace;
 SELECT relname, spcname FROM pg_catalog.pg_tablespace t, pg_catalog.pg_class c
     where c.reltablespace = t.oid AND c.relname = 'foo_idx';
+INFO:  Path param info: 0.000000
  relname |     spcname      
 ---------+------------------
  foo_idx | regress_tblspace
@@ -260,6 +277,36 @@
 
 -- check \d output
 \d testschema.foo
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
               Table "testschema.foo"
  Column |  Type   | Collation | Nullable | Default 
 --------+---------+-----------+----------+---------
@@ -269,6 +316,17 @@
 Tablespace: "regress_tblspace"
 
 \d testschema.foo_idx
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
       Index "testschema.foo_idx"
  Column |  Type   | Key? | Definition 
 --------+---------+------+------------
@@ -309,6 +367,10 @@
     JOIN pg_catalog.pg_namespace n ON (c.relnamespace = n.oid)
     LEFT JOIN pg_catalog.pg_tablespace t ON c.reltablespace = t.oid
     where c.relname LIKE 'part%' AND n.nspname = 'testschema' order by relname;
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
  relname  |     spcname      
 ----------+------------------
  part     | 
@@ -330,6 +392,7 @@
 CREATE TABLE testschema.part2 PARTITION OF testschema.part FOR VALUES IN (2);
 SELECT relname, spcname FROM pg_catalog.pg_tablespace t, pg_catalog.pg_class c
     where c.reltablespace = t.oid AND c.relname LIKE 'part%_idx' ORDER BY relname;
+INFO:  Path param info: 0.000000
    relname   |     spcname      
 -------------+------------------
  part1_a_idx | regress_tblspace
@@ -338,6 +401,39 @@
 (3 rows)
 
 \d testschema.part
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
         Partitioned table "testschema.part"
  Column |  Type   | Collation | Nullable | Default 
 --------+---------+-----------+----------+---------
@@ -348,6 +444,41 @@
 Number of partitions: 2 (Use \d+ to list them.)
 
 \d+ testschema.part
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                            Partitioned table "testschema.part"
  Column |  Type   | Collation | Nullable | Default | Storage | Stats target | Description 
 --------+---------+-----------+----------+---------+---------+--------------+-------------
@@ -359,6 +490,37 @@
             testschema.part2 FOR VALUES IN (2)
 
 \d testschema.part1
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
              Table "testschema.part1"
  Column |  Type   | Collation | Nullable | Default 
 --------+---------+-----------+----------+---------
@@ -368,6 +530,39 @@
     "part1_a_idx" btree (a), tablespace "regress_tblspace"
 
 \d+ testschema.part1
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
                                  Table "testschema.part1"
  Column |  Type   | Collation | Nullable | Default | Storage | Stats target | Description 
 --------+---------+-----------+----------+---------+---------+--------------+-------------
@@ -378,6 +573,20 @@
     "part1_a_idx" btree (a), tablespace "regress_tblspace"
 
 \d testschema.part_a_idx
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
 Partitioned index "testschema.part_a_idx"
  Column |  Type   | Key? | Definition 
 --------+---------+------+------------
@@ -387,6 +596,22 @@
 Tablespace: "regress_tblspace"
 
 \d+ testschema.part_a_idx
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
            Partitioned index "testschema.part_a_idx"
  Column |  Type   | Key? | Definition | Storage | Stats target 
 --------+---------+------+------------+---------+--------------
@@ -419,6 +644,17 @@
 ALTER TABLE testschema.test_default_tab ADD CONSTRAINT test_index3 PRIMARY KEY (id);
 ALTER TABLE testschema.test_default_tab ADD CONSTRAINT test_index4 UNIQUE (id) USING INDEX TABLESPACE regress_tblspace;
 \d testschema.test_index1
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
    Index "testschema.test_index1"
  Column |  Type  | Key? | Definition 
 --------+--------+------+------------
@@ -426,6 +662,17 @@
 btree, for table "testschema.test_default_tab"
 
 \d testschema.test_index2
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
    Index "testschema.test_index2"
  Column |  Type  | Key? | Definition 
 --------+--------+------+------------
@@ -434,6 +681,17 @@
 Tablespace: "regress_tblspace"
 
 \d testschema.test_index3
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
    Index "testschema.test_index3"
  Column |  Type  | Key? | Definition 
 --------+--------+------+------------
@@ -441,6 +699,17 @@
 primary key, btree, for table "testschema.test_default_tab"
 
 \d testschema.test_index4
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
    Index "testschema.test_index4"
  Column |  Type  | Key? | Definition 
 --------+--------+------+------------
@@ -453,6 +722,17 @@
 -- tablespace should not change if no rewrite
 ALTER TABLE testschema.test_default_tab ALTER id TYPE bigint;
 \d testschema.test_index1
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
    Index "testschema.test_index1"
  Column |  Type  | Key? | Definition 
 --------+--------+------+------------
@@ -460,6 +740,17 @@
 btree, for table "testschema.test_default_tab"
 
 \d testschema.test_index2
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
    Index "testschema.test_index2"
  Column |  Type  | Key? | Definition 
 --------+--------+------+------------
@@ -468,6 +759,17 @@
 Tablespace: "regress_tblspace"
 
 \d testschema.test_index3
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
    Index "testschema.test_index3"
  Column |  Type  | Key? | Definition 
 --------+--------+------+------------
@@ -475,6 +777,17 @@
 primary key, btree, for table "testschema.test_default_tab"
 
 \d testschema.test_index4
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
    Index "testschema.test_index4"
  Column |  Type  | Key? | Definition 
 --------+--------+------+------------
@@ -491,6 +804,17 @@
 -- tablespace should not change even if there is an index rewrite
 ALTER TABLE testschema.test_default_tab ALTER id TYPE int;
 \d testschema.test_index1
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
     Index "testschema.test_index1"
  Column |  Type   | Key? | Definition 
 --------+---------+------+------------
@@ -498,6 +822,17 @@
 btree, for table "testschema.test_default_tab"
 
 \d testschema.test_index2
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
     Index "testschema.test_index2"
  Column |  Type   | Key? | Definition 
 --------+---------+------+------------
@@ -506,6 +841,17 @@
 Tablespace: "regress_tblspace"
 
 \d testschema.test_index3
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
     Index "testschema.test_index3"
  Column |  Type   | Key? | Definition 
 --------+---------+------+------------
@@ -513,6 +859,17 @@
 primary key, btree, for table "testschema.test_default_tab"
 
 \d testschema.test_index4
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
     Index "testschema.test_index4"
  Column |  Type   | Key? | Definition 
 --------+---------+------+------------
@@ -531,6 +888,17 @@
 -- tablespace should not change if no rewrite
 ALTER TABLE testschema.test_default_tab ALTER id TYPE int;
 \d testschema.test_index1
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
     Index "testschema.test_index1"
  Column |  Type   | Key? | Definition 
 --------+---------+------+------------
@@ -538,6 +906,17 @@
 btree, for table "testschema.test_default_tab"
 
 \d testschema.test_index2
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
     Index "testschema.test_index2"
  Column |  Type   | Key? | Definition 
 --------+---------+------+------------
@@ -546,6 +925,17 @@
 Tablespace: "regress_tblspace"
 
 \d testschema.test_index3
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
     Index "testschema.test_index3"
  Column |  Type   | Key? | Definition 
 --------+---------+------+------------
@@ -553,6 +943,17 @@
 primary key, btree, for table "testschema.test_default_tab"
 
 \d testschema.test_index4
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
     Index "testschema.test_index4"
  Column |  Type   | Key? | Definition 
 --------+---------+------+------------
@@ -563,6 +964,17 @@
 -- tablespace should not change even if there is an index rewrite
 ALTER TABLE testschema.test_default_tab ALTER id TYPE bigint;
 \d testschema.test_index1
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
    Index "testschema.test_index1"
  Column |  Type  | Key? | Definition 
 --------+--------+------+------------
@@ -570,6 +982,17 @@
 btree, for table "testschema.test_default_tab"
 
 \d testschema.test_index2
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
    Index "testschema.test_index2"
  Column |  Type  | Key? | Definition 
 --------+--------+------+------------
@@ -578,6 +1001,17 @@
 Tablespace: "regress_tblspace"
 
 \d testschema.test_index3
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
    Index "testschema.test_index3"
  Column |  Type  | Key? | Definition 
 --------+--------+------+------------
@@ -585,6 +1019,17 @@
 primary key, btree, for table "testschema.test_default_tab"
 
 \d testschema.test_index4
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
    Index "testschema.test_index4"
  Column |  Type  | Key? | Definition 
 --------+--------+------+------------
@@ -605,6 +1050,20 @@
 ALTER TABLE testschema.test_default_tab_p ADD CONSTRAINT test_index3 PRIMARY KEY (id);
 ALTER TABLE testschema.test_default_tab_p ADD CONSTRAINT test_index4 UNIQUE (id) USING INDEX TABLESPACE regress_tblspace;
 \d testschema.test_index1
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
 Partitioned index "testschema.test_index1"
  Column |  Type  | Key? | Definition 
 --------+--------+------+------------
@@ -613,6 +1072,20 @@
 Number of partitions: 1 (Use \d+ to list them.)
 
 \d testschema.test_index2
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
 Partitioned index "testschema.test_index2"
  Column |  Type  | Key? | Definition 
 --------+--------+------+------------
@@ -622,6 +1095,20 @@
 Tablespace: "regress_tblspace"
 
 \d testschema.test_index3
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
 Partitioned index "testschema.test_index3"
  Column |  Type  | Key? | Definition 
 --------+--------+------+------------
@@ -630,6 +1117,20 @@
 Number of partitions: 1 (Use \d+ to list them.)
 
 \d testschema.test_index4
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
 Partitioned index "testschema.test_index4"
  Column |  Type  | Key? | Definition 
 --------+--------+------+------------
@@ -643,6 +1144,20 @@
 -- tablespace should not change if no rewrite
 ALTER TABLE testschema.test_default_tab_p ALTER val TYPE bigint;
 \d testschema.test_index1
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
 Partitioned index "testschema.test_index1"
  Column |  Type  | Key? | Definition 
 --------+--------+------+------------
@@ -651,6 +1166,20 @@
 Number of partitions: 1 (Use \d+ to list them.)
 
 \d testschema.test_index2
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
 Partitioned index "testschema.test_index2"
  Column |  Type  | Key? | Definition 
 --------+--------+------+------------
@@ -660,6 +1189,20 @@
 Tablespace: "regress_tblspace"
 
 \d testschema.test_index3
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
 Partitioned index "testschema.test_index3"
  Column |  Type  | Key? | Definition 
 --------+--------+------+------------
@@ -668,6 +1211,20 @@
 Number of partitions: 1 (Use \d+ to list them.)
 
 \d testschema.test_index4
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
 Partitioned index "testschema.test_index4"
  Column |  Type  | Key? | Definition 
 --------+--------+------+------------
@@ -685,6 +1242,20 @@
 -- tablespace should not change even if there is an index rewrite
 ALTER TABLE testschema.test_default_tab_p ALTER val TYPE int;
 \d testschema.test_index1
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
 Partitioned index "testschema.test_index1"
  Column |  Type   | Key? | Definition 
 --------+---------+------+------------
@@ -693,6 +1264,20 @@
 Number of partitions: 1 (Use \d+ to list them.)
 
 \d testschema.test_index2
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
 Partitioned index "testschema.test_index2"
  Column |  Type   | Key? | Definition 
 --------+---------+------+------------
@@ -702,6 +1287,20 @@
 Tablespace: "regress_tblspace"
 
 \d testschema.test_index3
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
 Partitioned index "testschema.test_index3"
  Column |  Type  | Key? | Definition 
 --------+--------+------+------------
@@ -710,6 +1309,20 @@
 Number of partitions: 1 (Use \d+ to list them.)
 
 \d testschema.test_index4
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
 Partitioned index "testschema.test_index4"
  Column |  Type  | Key? | Definition 
 --------+--------+------+------------
@@ -729,6 +1342,20 @@
 -- tablespace should not change if no rewrite
 ALTER TABLE testschema.test_default_tab_p ALTER val TYPE int;
 \d testschema.test_index1
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
 Partitioned index "testschema.test_index1"
  Column |  Type   | Key? | Definition 
 --------+---------+------+------------
@@ -737,6 +1364,20 @@
 Number of partitions: 1 (Use \d+ to list them.)
 
 \d testschema.test_index2
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
 Partitioned index "testschema.test_index2"
  Column |  Type   | Key? | Definition 
 --------+---------+------+------------
@@ -746,6 +1387,20 @@
 Tablespace: "regress_tblspace"
 
 \d testschema.test_index3
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
 Partitioned index "testschema.test_index3"
  Column |  Type  | Key? | Definition 
 --------+--------+------+------------
@@ -754,6 +1409,20 @@
 Number of partitions: 1 (Use \d+ to list them.)
 
 \d testschema.test_index4
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
 Partitioned index "testschema.test_index4"
  Column |  Type  | Key? | Definition 
 --------+--------+------+------------
@@ -765,6 +1434,20 @@
 -- tablespace should not change even if there is an index rewrite
 ALTER TABLE testschema.test_default_tab_p ALTER val TYPE bigint;
 \d testschema.test_index1
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
 Partitioned index "testschema.test_index1"
  Column |  Type  | Key? | Definition 
 --------+--------+------+------------
@@ -773,6 +1456,20 @@
 Number of partitions: 1 (Use \d+ to list them.)
 
 \d testschema.test_index2
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
 Partitioned index "testschema.test_index2"
  Column |  Type  | Key? | Definition 
 --------+--------+------+------------
@@ -782,6 +1479,20 @@
 Tablespace: "regress_tblspace"
 
 \d testschema.test_index3
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
 Partitioned index "testschema.test_index3"
  Column |  Type  | Key? | Definition 
 --------+--------+------+------------
@@ -790,6 +1501,20 @@
 Number of partitions: 1 (Use \d+ to list them.)
 
 \d testschema.test_index4
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
 Partitioned index "testschema.test_index4"
  Column |  Type  | Key? | Definition 
 --------+--------+------+------------
@@ -807,6 +1532,17 @@
 SET default_tablespace TO '';
 ALTER TABLE testschema.test_tab ADD CONSTRAINT test_tab_pkey PRIMARY KEY (id);
 \d testschema.test_tab_unique
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
   Index "testschema.test_tab_unique"
  Column |  Type   | Key? | Definition 
 --------+---------+------+------------
@@ -815,6 +1551,17 @@
 Tablespace: "regress_tblspace"
 
 \d testschema.test_tab_pkey
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
    Index "testschema.test_tab_pkey"
  Column |  Type   | Key? | Definition 
 --------+---------+------+------------
@@ -837,6 +1584,17 @@
 SET default_tablespace TO '';
 CREATE INDEX test_tab_b_idx ON testschema.test_tab (b);
 \d testschema.test_tab_unique
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
   Index "testschema.test_tab_unique"
  Column |  Type   | Key? | Definition 
 --------+---------+------+------------
@@ -845,6 +1603,17 @@
 Tablespace: "regress_tblspace"
 
 \d testschema.test_tab_a_idx
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
   Index "testschema.test_tab_a_idx"
  Column |  Type   | Key? | Definition 
 --------+---------+------+------------
@@ -853,6 +1622,17 @@
 Tablespace: "regress_tblspace"
 
 \d testschema.test_tab_b_idx
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
   Index "testschema.test_tab_b_idx"
  Column |  Type   | Key? | Definition 
 --------+---------+------+------------
@@ -861,6 +1641,17 @@
 
 ALTER TABLE testschema.test_tab ALTER b TYPE bigint, ADD UNIQUE (c);
 \d testschema.test_tab_unique
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
   Index "testschema.test_tab_unique"
  Column |  Type   | Key? | Definition 
 --------+---------+------+------------
@@ -869,6 +1660,17 @@
 Tablespace: "regress_tblspace"
 
 \d testschema.test_tab_a_idx
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
   Index "testschema.test_tab_a_idx"
  Column |  Type   | Key? | Definition 
 --------+---------+------+------------
@@ -877,6 +1679,17 @@
 Tablespace: "regress_tblspace"
 
 \d testschema.test_tab_b_idx
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
+INFO:  Path param info: 0.000000
   Index "testschema.test_tab_b_idx"
  Column |  Type  | Key? | Definition 
 --------+--------+------+------------
